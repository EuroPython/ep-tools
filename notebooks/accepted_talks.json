{
  "Closing session": {
    "699": {
      "abstract_short": "Closing Session",
      "sub_title": "",
      "timerange": "2016-07-22 17:30:00, 2016-07-22 18:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 699,
      "speakers": "To be announced",
      "title": "Closing Session",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1 [PyData Track]",
      "tags": [
        "Communication",
        "Conferences and Meet-Ups",
        "Euro Python and EPS"
      ],
      "abstract_long": [
        "Closing Session",
        "",
        "",
        ""
      ],
      "abstract_extra": "Closing Session",
      "tag_categories": [
        "Community",
        "Community",
        "Community"
      ],
      "emails": "alex@hendorf.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/closing-session",
      "admin_type": "Closing session",
      "companies": ""
    }
  },
  "Keynote": {
    "711": {
      "abstract_short": "Have you ever wondered how you could be your own boss? or how you could make money from your side project? or build the next Facebook or Uber.\r\n\r\nTo be a coder in today's world of work is to have amazing opportunities to design the business life you want.\r\n\r\nI've enjoyed the last 20 years without a 'real job', as company founder, freelancer and side-project-hacker.\r\n\r\nNow I am bootstrapping my current company to profitability. Listen to my stories and learn from my mistakes and successes.",
      "sub_title": "How I used my technical skills to design the business life I want; and how you can too",
      "timerange": "2016-07-18 09:15:00, 2016-07-18 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@rwillmer",
      "id": 711,
      "speakers": "Rachel Willmer",
      "title": "20 years without a 'proper job'",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Track",
        "Business"
      ],
      "abstract_long": [
        "Have you ever wondered how you could be your own boss? If so, then this talk is for you.\r\n\r\nMaybe you're working on a sideproject and wonder how you could make some money from it? Or maybe you have the idea for the next Facebook or Uber?\r\n\r\nTo be a coder in today's world of work is to have amazing opportunities to design the business life you want. You can work remotely; you can write books, or teach, or consult, with anyone anywhere. \r\n\r\nYou can have a crazy idea on Friday and have it running by Monday. Design your architecture to use cloud computing, so your tiny team can scale up your huge ideas. \r\n\r\nOr keep it small, and just earn some extra money with a Wordpress plugin, or a training course.\r\n\r\nIt has been 21 years since I last had a 'real job' and a regular income. \r\n\r\nI survived creating and running a company through the madness of the dotcom years.  I made money from sideprojects, that I had started just for fun and for learning.  I have freelanced without needing to use an agency to find the work.\r\n\r\nAnd now I'm bootstrapping my current business to profitability. Listen to my stories and learn from my mistakes and successes.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "",
        ""
      ],
      "emails": "rachel@willmer.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keynote-20-years-without-a-proper-job",
      "admin_type": "Keynote",
      "companies": "Luzme"
    },
    "714": {
      "abstract_short": "The BBC micro:bit is a small programmable device for children. A million of them have been handed out to the UK's 11 and 12 years olds. The Python Software Foundation was a partner in this moon-shot scheme and, thanks to the efforts of Damien George, MicroPython runs on the device.\r\n\r\nMy talk will tell the story of the project, describe Python's role in it and explain how the wider Python community can become involved. It may involve demonstrations, live coding and audience participation.",
      "sub_title": "A million UK kids have been given a device that runs MicroPython. What could possibly go wrong?",
      "timerange": "2016-07-18 13:45:00, 2016-07-18 14:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ntoll",
      "id": 714,
      "speakers": "Nicholas Tollervey",
      "title": "A Million Children (and MicroPython)",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Education",
        "MicroPython",
        "Fun and Humor",
        "Internet of Things (IoT)",
        "python"
      ],
      "abstract_long": [
        "The BBC micro:bit is a small programmable device for children. A million of them have been handed out to the UK's 11 and 12 years olds. The Python Software Foundation was a partner in this moon-shot scheme and, thanks to the efforts of Damien George, MicroPython (a full reimplementation of Python 3) runs on the device.\r\n\r\nMy talk will tell the story of the project, describe Python's role in it and explain how the wider Python community can become involved. It may involve demonstrations, live coding and audience participation.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Educational",
        "Python",
        "Everything Else",
        "Hardware",
        ""
      ],
      "emails": "ntollervey@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keynote-a-million-children-and-micropython",
      "admin_type": "Keynote",
      "companies": ""
    },
    "702": {
      "abstract_short": "While Python the language is wonderful, the Python community and the personal, social, and professional benefits that flow from involvement in a community like ours are often more compelling. \r\n\r\nLearn about the goals of the Python Software Foundation and how everyone can take part to help build even better Python communities locally, regionally, and globally.  I will also discuss some of our strengths as a community, and also look at some of the challenges we face going forward.\r\n",
      "sub_title": "From Community Import Python",
      "timerange": "2016-07-21 09:15:00, 2016-07-21 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@NaomiCeder",
      "id": 702,
      "speakers": "Naomi Ceder",
      "title": "Come for the Language, Stay for the Community",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "python",
        "Community"
      ],
      "abstract_long": [
        "Python is a powerful and flexible tool that many of us love and use in many ways. And yet, as wonderful as  the language is, many would say that the community is even more attractive. This talk will focus on involvement in the Python community and what that means - in particular the many personal, social, and professional benefits that flow from involvement in a community like ours.\r\n\r\nI will also discuss what the Python Software Foundation does, what its goals and purpose are, and how everyone in the community can take part in the PSF to help build even better Python communities. This will include specific explanations of the membership model and how active contributors (both in terms of code and community organisation) can and should become full voting members of the PSF.\r\n\r\nI will also touch on our strengths, like our commitment to safe and inclusive spaces and our devotion to education, and also look at some of the challenges we face as a community going forward.",
        "",
        "",
        ""
      ],
      "abstract_extra": "-",
      "tag_categories": [
        "",
        "Community"
      ],
      "emails": "naomi.ceder@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keynote-stay-for-the-community",
      "admin_type": "Keynote",
      "companies": "Trans*Code"
    },
    "710": {
      "abstract_short": "Paul will take you through the process of making of a Disney movie.  He will use examples from Zootopia to explain and illustrate the steps in making a movie and explain where technology, specifically Python, is involved.    This is an updated talk from one given years ago with more information. \r\n\r\n*This talk won't be recorded.*",
      "sub_title": "",
      "timerange": "2016-07-19 09:15:00, 2016-07-19 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@paulhildebrandt",
      "id": 710,
      "speakers": "Paul Hildebrandt",
      "title": "Inside the Hat: Python @ Walt Disney Animation Studios",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Case Study"
      ],
      "abstract_long": [
        "The Walt Disney Animation Studios has a long history of creating acclaimed animated films and continues to be an industry leader with regards to artistic achievements, storytelling excellence, and cutting-edge innovations. Since the 1923 release of Snow White they\u2019ve been pushing forward technology in the art of movie making. This push continues in the modern day with classics such as Oscar winning box office hits \"Big Hero 6\" and \u201cFrozen\u201d and Oscar nominated hits \u201cWreck-It Ralph\u201d, \u201cTangled\u201d, \u201cBolt\u201d, \u201cTreasure Planet\u201d, and \u201cDinosaur\u201d.\r\n\r\nOne of the most common questions we get when attending PyCon is \u201cWhy are you here?\u201d  People seem confused that technology, especially Python is used in the making of animated films.  \r\n\r\nTo dive into exactly where Python is used without context would be confusing so Paul will give the audience some background on the Walt Disney Animation Studios.  He will talk about what we\u2019ve done and what we are currently working on.\r\n\r\nThe main part of the talk is describing the production process whilst imparting this information he will interject where technology and specifically Python comes into play.   He will describe the tools in each area and the tech stack used to create them.\r\n\r\nHe will then dive more deeply into the products he owns and discuss python in general at Disney.\r\n\r\n*This talk won't be recorded.*",
        "",
        "",
        ""
      ],
      "abstract_extra": "The Walt Disney Animation Studios has a long history of creating acclaimed animated films and continues to be an industry leader with regards to artistic achievements, storytelling excellence, and cutting-edge innovations. Since the 1923 release of Snow White they\u2019ve been pushing forward technology in the art of movie making. This push continues in the modern day with classics such as Oscar winning box office hits \"Big Hero 6\" and \u201cFrozen\u201d and Oscar nominated hits \u201cWreck-It Ralph\u201d, \u201cTangled\u201d, \u201cBolt\u201d, \u201cTreasure Planet\u201d, and \u201cDinosaur\u201d.\r\n\r\nOne of the most common questions we get when attending PyCon is \u201cWhy are you here?\u201d  People seem confused that technology, especially Python is used in the making of animated films.  \r\n\r\nTo dive into exactly where Python is used without context would be confusing so Paul will give the audience some background on the Walt Disney Animation Studios.  He will talk about what we\u2019ve done and what we are currently working on.\r\n\r\nThe main part of the talk is describing the production process whilst imparting this information he will interject where technology and specifically Python comes into play.   He will describe the tools in each area and the tech stack used to create them.\r\n\r\nHe will then dive more deeply into the products he owns and discuss python in general at Disney.\r\n\r\n*This talk won't be recorded.*",
      "tag_categories": [
        "Case Study"
      ],
      "emails": "paul.hildebrandt@disney.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keynote-inside-the-hat-python-at-alt-disney-animation",
      "admin_type": "Keynote",
      "companies": "Walt Disney Animation Studios"
    },
    "705": {
      "abstract_short": "Scientists have been searching for the elusive gravitational wave for more than half a century.  Hear how they finally found them, and the role that Python played in the discovery.\r\n\r\n",
      "sub_title": "The epic hunt for the elusive gravitational-wave, and Python's pivital role in the discovery",
      "timerange": "2016-07-20 09:15:00, 2016-07-20 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 705,
      "speakers": "Jameson Rollins",
      "title": "LIGO: The Dawn of Gravitational Wave Astronomy",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Science",
        "The Answer to Life the Universe and Everything Else",
        "Machine-Learning",
        "Human-Machine-Interaction",
        "Analytics"
      ],
      "abstract_long": [
        "Scientists have been searching for the elusive gravitational wave for more than half a century.  On September 14, 2015, the Laser Interferometer Gravitational-wave Observatory (LIGO) finally observed the gravitational wave signature from the merger of two black holes.  This detection marks the dawn of a new age of _gravitational wave astronomy_, where we routinely hear the sounds emanating from deep within the most energetic events in the Universe.  This talk will cover the events leading up to one of the most important discoveries of the last century, and the myriad of ways in which Python enabled the effort.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Sciences",
        "Everything Else",
        "Data Science",
        "Hardware",
        "Data Science"
      ],
      "emails": "jrollins@finestructure.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keynote-ligo",
      "admin_type": "Keynote",
      "companies": "LIGO Caltech"
    },
    "709": {
      "abstract_short": "Data science is a hot topic and  Python has emerged as an ideal language for it.\r\nIts strength for data analysis come from the cultural mix between the scientific Python community, and more conventional software usage, such as web development or system administration. I'll show how and why Python is a easy and powerful tool for data science.",
      "sub_title": "",
      "timerange": "2016-07-22 09:15:00, 2016-07-22 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@GaelVaroquaux",
      "id": 709,
      "speakers": "Ga\u00ebl Varoquaux",
      "title": "Scientist meets web dev: how Python became the language of data",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1 [PyData Track]",
      "tags": [
        "Science",
        "Data"
      ],
      "abstract_long": [
        "Python started as a scripting language, but now it is the new trend everywhere and in particular for data science, the latest rage of computing. It didn't get there by chance: tools and concepts built by nerdy scientists and geek sysadmins provide foundations for what is said to be the sexiest job: data scientist.\r\n\r\nIn my talk I'll give a personal perspective, historical and technical, on the progress of the scientific Python ecosystem, from numerical physics to data mining. What made Python suitable for science; How could scipy grow to challenge commercial giants such as Matlab; Why the cultural gap between scientific Python and the broader Python community turned out to be a gold mine; How scikit-learn was born, what technical decisions enabled it to grow; And last but not least, how we are addressing a wider and wider public, lowering the bar and empowering people.\r\n\r\nThe talk will discuss low-level technical aspects, such as how the Python world makes it easy to move large chunks of number across code. It will touch upon current exciting developments in scikit-learn and joblib. But it will also talk about softer topics, such as project dynamics or documentation, as software's success is determined by people.",
        "",
        "",
        ""
      ],
      "abstract_extra": ".",
      "tag_categories": [
        "Sciences",
        ""
      ],
      "emails": "gael.varoquaux@normalesup.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keynote-science-web-dev",
      "admin_type": "Keynote",
      "companies": "INRIA"
    }
  },
  "EPS session": {
    "695": {
      "abstract_short": "This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board.",
      "sub_title": "",
      "timerange": "2016-07-21 14:30:00, 2016-07-21 15:30:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@b_smoke, @malemburg",
      "id": 695,
      "speakers": "Fabio Pliger, Marc-Andre Lemburg",
      "title": "EPS General Assembly",
      "have_tickets": [
        true,
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Communication",
        "Conferences and Meet-Ups",
        "Euro Python and EPS",
        "Community"
      ],
      "abstract_long": [
        "This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board.",
        "",
        "",
        ""
      ],
      "abstract_extra": "This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board.",
      "tag_categories": [
        "Community",
        "Community",
        "Community",
        "Community"
      ],
      "emails": "fabio.pliger@gmail.com, mal@europython.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/eps-general-assembly",
      "admin_type": "EPS session",
      "companies": "Continuum Analytics, eGenix.com Software GmbH"
    },
    "696": {
      "abstract_short": "We need help with organizing and running EuroPython 2017.\r\n\r\nIn this session, we will explain how the EuroPython workgroup model works and where you could help.",
      "sub_title": "",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@b_smoke, @malemburg",
      "id": 696,
      "speakers": "Fabio Pliger, Marc-Andre Lemburg",
      "title": "EuroPython 2017: Help us build the next edition!",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Communication",
        "Conferences and Meet-Ups",
        "Euro Python and EPS"
      ],
      "abstract_long": [
        "We need help with organizing and running EuroPython 2017\r\n\r\nIn this session, we will explain how the EuroPython workgroup model works and where you could help.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Community",
        "Community",
        "Community"
      ],
      "emails": "fabio.pliger@gmail.com, mal@europython.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/europython-2017-help-us-build-the-next-edition",
      "admin_type": "EPS session",
      "companies": "Continuum Analytics, eGenix.com Software GmbH"
    }
  },
  "Lightning talk": {
    "469": {
      "abstract_short": "The LightingTalkShow is the time for new and exceptional ideas to shine.",
      "sub_title": "",
      "timerange": "2016-07-18 17:15:00, 2016-07-18 18:15:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@mcltm",
      "id": 469,
      "speakers": "Harald Armin Massa",
      "title": "The LightningTalkShow",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Communication",
        "Conferences and Meet-Ups",
        "Best Practice"
      ],
      "abstract_long": [
        "At the LightningTalkShow, there is script, there are no trained actors. Just the regular attendants, delivering interesting, diverse or crazy presentation about all things Python and computer.\r\n\r\nTo encourage the delivery, the LightningTalkMan shall conduct this ceromny, finding words when Laptops do not find the projector; allways honouring the motto of the original Python: the show must go on.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "of course those 60 or whatever amount of minutes are allocated will be filled by participants who give LightningTalks.",
      "tag_categories": [
        "Community",
        "Community",
        "Best Practice and Use Cases"
      ],
      "emails": "chef@ghum.de",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/the-lightningtalkshow",
      "admin_type": "Lightning talk",
      "companies": "2ndQuadrant Deutschland GmbH"
    }
  },
  "Recruiting session": {
    "717": {
      "abstract_short": "The recruiting sponsors will present their companies and their job offers in short talks.",
      "sub_title": "",
      "timerange": "2016-07-19 15:45:00, 2016-07-19 16:30:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@b_smoke",
      "id": 717,
      "speakers": "Fabio Pliger",
      "title": "Recruiting session",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "workforce"
      ],
      "abstract_long": [
        "The recruiting sponsors will present their companies and their job offers in short talks.",
        "",
        "",
        ""
      ],
      "abstract_extra": "The recruiting sponsors will present their companies and their job offers in short talks.",
      "tag_categories": [
        "Business"
      ],
      "emails": "fabio.pliger@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/recruiting-session",
      "admin_type": "Recruiting session",
      "companies": "Continuum Analytics"
    }
  },
  "Reserved slot": {
    "706": {
      "abstract_short": "June 4th we will open a second Call for Proposals, limited to hot topics and most recent developments in software and technology. Read our blog post here: http://blog.europython.eu/post/143625007372/europython-2016-extra-hot-topics-call-for",
      "sub_title": "reserved for hot topics",
      "timerange": "",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 706,
      "speakers": "To be announced",
      "title": "Reserved for 2nd Call for Proposals",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "",
      "tags": [
        "General",
        "python"
      ],
      "abstract_long": [
        "June 4th we will open a second Call for Proposals, limited to hot topics and most recent developments in software and technology. Read our blog post here: http://blog.europython.eu/post/143625007372/europython-2016-extra-hot-topics-call-for",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "",
        ""
      ],
      "emails": "alex@hendorf.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/reserved-for-2nd-call-for-proposals",
      "admin_type": "Reserved slot",
      "companies": ""
    },
    "707": {
      "abstract_short": "June 4th we will open a second Call for Proposals, limited to hot topics and most recent developments in software and technology. Read our blog post here: http://blog.europython.eu/post/143625007372/europython-2016-extra-hot-topics-call-for",
      "sub_title": "reserved for hot topics",
      "timerange": "",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 707,
      "speakers": "To be announced",
      "title": "Reserved for 2nd Call for Proposals",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "",
      "tags": [
        "General",
        "python"
      ],
      "abstract_long": [
        "June 4th we will open a second Call for Proposals, limited to hot topics and most recent developments in software and technology. Read our blog post here: http://blog.europython.eu/post/143625007372/europython-2016-extra-hot-topics-call-for",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "",
        ""
      ],
      "emails": "alex@hendorf.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/reserved-for-2nd-call-for-proposals-1",
      "admin_type": "Reserved slot",
      "companies": ""
    }
  },
  "training": {
    "490": {
      "abstract_short": "Chinese is a fascinating but also dauntingly complex language. So let's use Python to make learning it easier! In this tutorial, we will use Python's powerful data analysis capabilities to accelerate our understanding of the Chinese language, boosting both our Chinese and our Python skills:\r\n\r\nSpeech analysis will help us to cut through our pronunciation problems, image recognition will make Chinese characters look less foreign to us and statistics will tell us what to learn, and what not.",
      "sub_title": "Using Python to become better at language learning.",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@japh44",
      "id": 490,
      "speakers": "Andreas Dewes",
      "title": "(Machine-)Learning Chinese, with Python!",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4 [PyData Track]",
      "tags": [
        "Visualization",
        "Natural Language Processing",
        "Educational Track",
        "Algorithms",
        "Machine-Learning"
      ],
      "abstract_long": [
        "#(Machine-)Learning Chinese, with Python!\r\n\r\nLearning a new language is hard work. Especially if it is Chinese, which is a tonal language that is written using more than 10.000 different characters. Finding our way around in this linguistic labyrinth is a daunting task. But do not fear, for we have the power of Python at our side, and with its help we will **machine-learn Chinese**!\r\n\r\n## Mom scolds the horse \r\n\r\nChinese is a tonal language, which means that pronouncing a syllable differently will usually change its meaning. And while this can be very funny, it can also be rather embarrassing for language learners. So, to keep us from getting into linguistic trouble, we'll write a little Python tool that helps us to improve our pronunciation.\r\n\r\n## Seeing the trees and the forest, but still being lost\r\n\r\nReading the morning newspaper while having a nice cup of tea doesn't sound so complicated, does it? Well, if that newspaper is printed in Chinese we will have to know about 2.500 characters just to make it through the first pages. Again, machine-learning will come to our rescue!\r\n\r\n## Low-hanging fruits, high-flying dragons\r\n\r\nPronunciation and characters mastered, we'll still have to learn a large amount of words and phrases, so where to begin? To answer this, we'll make use of Bayesian techniques to identify the low-hanging fruits of the Chinese language.\r\n\r\nCongratulations, you should now be fluent in Chinese (or at least Machine-Learning)."
      ],
      "abstract_extra": "After speaking about a fairly scientific topic at the last EuroPython, I want to do something more applied this year! \r\n\r\nAs I'm currently learning Chinese, I thought applying machine-learning to this could be a very good use case for showing off some Python libraries for data analysis and visualization. Also, Chinese is a fascinating topic by itself and something that many people can relate to as Chinese culture becomes more pervasive around the world.\r\n\r\nMy idea is therefore to do a tutorial in which people can apply different machine learning methods to problems that we encounter in language learning. I selected three specific problems (voice recognition, image classification, text processing) for this, which in my opinion are very well suited to a machine-learning approach and produce interesting and relevant results while being easy to explain and understand on a basic level.\r\n\r\nI also would like to give a talk about the material that we cover in the tutorial such that a wider audience can enjoy it, I therefore also submitted a proposal for a summary talk (with the same title). \r\n\r\nI already spoke at many IT & scientific conferences and usually received very good audience feedback for my talks (but maybe people are just very polite :D ), a selection of my talks and publications can be found on my website: http://www.andreas-dewes.de/talks.html\r\n\r\nI also have more than 7 years of experience in using Python for data analysis and I really enjoy teaching, which I have done both at University and professionally in my job.",
      "tag_categories": [
        "Data Science",
        "Data Science",
        ">>> Suggested Track",
        "Data Science",
        "Data Science"
      ],
      "emails": "andreas.dewes@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/machine-learning-chinese-with-python",
      "admin_type": "",
      "companies": "7scientists UG"
    },
    "396": {
      "abstract_short": "In this short tutorial session you'll learn how easy it is to build 3d objects with python code in blender. We begin with constructing 3d objects with cubes and we finish by rendering a small video/gif with mini explosions! It is meant to be very beginner friendly and will be a fun exercise to show how flexible python can be.  ",
      "sub_title": "From python code to 3d GIF animations.",
      "timerange": "2016-07-22 10:15:00, 2016-07-22 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@fishnets88",
      "id": 396,
      "speakers": "vincent warmerdam",
      "title": "Blender: much visual, very 3d, many python.",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Visualization",
        "Blender"
      ],
      "abstract_long": [
        "In this short tutorial session you'll learn how easy it is to build 3d objects with python code in blender. We begin with constructing 3d objects with cubes and we finish by rendering a small video/gif with mini explosions! It is meant to be very beginner friendly and will be a fun exercise to show how flexible python can be. \r\n\r\nThese two blogposts of mine will give an impression of what people can do at the end of the day. \r\n- http://koaning.io/python-blender-gif.html\r\n- http://koaning.io/python-cubes-in-blender.html\r\n\r\nIf customs allow it: I'll consider bringing an oculus rift such that people can walk in their own creations."
      ],
      "abstract_extra": "This is my blog: http://koaning.io/. \r\n\r\nI've done many talks in the past. Both at PyData events and EuroPython. If you type my name into youtube, you should find example videos of me. ",
      "tag_categories": [
        "Data Science",
        "Everything Else"
      ],
      "emails": "vincentwarmerdam@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/blender-much-visual-very-3d-many-python",
      "admin_type": "",
      "companies": "GoDataDriven"
    },
    "573": {
      "abstract_short": "This tutorial is targeted at the intermediate-to-advanced Python user who wants to extend Python into High-Performance Computing. The tutorial will provide hands-on examples and essential performance tips every developer should know for writing effective parallel Python. The result will be a clear sense of possibilities and best practices using Python in HPC environments.\r\n",
      "sub_title": "",
      "timerange": "2016-07-19 10:15:00, 2016-07-19 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 573,
      "speakers": "Michael McKerns",
      "title": "Efficient Python for High-Performance Parallel Computing",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Multi-Threading",
        "Python general",
        "Abstractions",
        "Multi-Processing",
        "Performance"
      ],
      "abstract_long": [
        "Many of the examples you often find on parallel Python focus on the mechanics of getting the parallel infrastructure working with your code, and not on actually building good portable parallel Python. This tutorial is intended to be a broad introduction to writing high-performance parallel Python that is well suited to both the beginner and the veteran developer. Parallel efficiency starts with the speed of the target code itself, so we will start with how to evolve code from for-loops to Python looping constructs and vector programming. We will also discuss tools and techniques to optimize your code for speed and memory performance.\r\n\r\nThe tutorial will overview working with the common parallel communication technologies (threading, multiprocessing, MPI) and introduce the use of parallel programming models such as blocking and non-blocking pipes, asynchronous and iterative conditional maps, and map-reduce. We will discuss strategies for extending parallel workflow to utilize hierarchical and heterogeneous computing, distributed parallel computing, and job schedulers. We then return our focus to the speeding up our target code by leveraging parallelism within compiled code using Cython.\r\n\r\nAt the end of the tutorial, participants should be able to write simple parallel Python scripts, make use of effective parallel programming techniques, and have a framework in place to leverage the power of Python in High-Performance Computing.",
        "",
        "",
        ""
      ],
      "abstract_extra": "An earlier version of the tutorial is available at: http://www.pyvideo.org/video/1345/efficient-parallel-python-for-high-performance-co while a preliminary version of the tutorial is at https://github.com/mmckerns/tuthpc.\r\n",
      "tag_categories": [
        "Programming",
        "Python",
        "Everything Else",
        "Programming",
        "Programming"
      ],
      "emails": "mmckerns@uqfoundation.org",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/efficient-python-for-high-performance-parallel-computing",
      "admin_type": "",
      "companies": "the UQ Foundation"
    },
    "592": {
      "abstract_short": "Optimization can often help to make Python programs faster or use less memory.\r\nDeveloping a strategy, establishing solid measuring and visualization techniques\r\nas well as knowing about algorithmic basics and datastructures are the foundation\r\nfor a successful optimization. The tutorial will cover these topics.\r\nExamples will give you a hands-on experience on how to approach efficiently.",
      "sub_title": "",
      "timerange": "2016-07-20 10:15:00, 2016-07-20 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@pyacademy",
      "id": 592,
      "speakers": "Mike M\u00fcller",
      "title": "Faster Python Programs - Measure, don't Guess",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Algorithms",
        "Tooling",
        "Data Structures",
        "Best Practice",
        "Performance"
      ],
      "abstract_long": [
        "Python is a great language. But it can be slow compared to other languages\r\nfor certain types of tasks. If applied appropriately, optimization may reduce\r\nprogram runtime or memory consumption considerably. But this often comes at a\r\nprice. Optimization can be time consuming and the optimized program may be more\r\ncomplicated. This, in turn, means more maintenance effort. How do you find\r\nout if it is worthwhile to optimize your program? Where should you start?\r\nThis tutorial will help you to answer these questions. You will learn how\r\nto find  an optimization strategy based on quantitative and objective criteria.\r\nYou will experience that one's gut feeling what to optimize is often wrong.\r\n\r\nThe solution to this problem is: \u201eMeasure, Measure, and Measure!\u201c. You will\r\nlearn how to measure program run times as well as profile CPU and memory.\r\nThere are great tools available. You will learn how to use some of them.\r\nMeasuring is not easy because, by definition, as soon as you start to measure,\r\nyou influence your system. Keeping this impact as small as possible is\r\nimportant. Therefore, we will cover different measuring techniques.\r\n\r\nFurthermore, we will look at algorithmic improvements. You will see that the\r\nright data structure for the job can make a big difference. Finally, you will\r\nlearn about different caching techniques.\r\n"
      ],
      "abstract_extra": "## Outline\r\n\r\n* How Fast is Fast Enough? (5 min)\r\n* Optimization Guidelines and Strategy  (10 min)\r\n* Measuring run time\r\n    * ``time``, ``timeit``, decorators for timing (5 min)\r\n    * Wall Clock vs. CPU Time (2 min)\r\n* Profiling CPU Usage\r\n    * cProfile (10 min)\r\n    * A Picture is Worth a Thousand Words\r\n        * SnakeViz (10 min)\r\n    * Going Line-by-Line (5 min)\r\n    * Exercise (15 min)\r\n* Profiling Memory Usage\r\n    * Pympler (5 min)\r\n    * Memory Usage Line-by-Line with memory_profiler (5 min)\r\n    * Roll your own (5 min)\r\n    * Exercise (10 min)\r\n* Algorithms and Anti-patterns\r\n    * String Concatenation (3 min)\r\n    * List and Generator Comprehensions (5 min)\r\n    * Think Global buy Local (5 min)\r\n    * Exercise (5 min)\r\n* The Right Data Structure\r\n    * Use built-in Data Types (2 min)\r\n    * ``list`` vs. ``set`` (3 min)\r\n    * ``list`` vs. ``deque`` (5 min)\r\n    * ``dict`` vs. ``defaultdict`` (5 min)\r\n    * Big-O notation and Data Structures (5 min)\r\n    * O(1) vs. O(n) vs. O(n) (5 min)\r\n    * Exercise (15 min)\r\n* Caching\r\n    * Reuse before You Recalculate (5 min)\r\n    * Deterministic caching (5 min)\r\n    * Non-deterministic caching (5 min)\r\n    * Least Recently Used Cache (5 min)\r\n    * Memcached (5 min)\r\n    * Exercise (10 min)\r\n\r\n## Software Requirements\r\n\r\nYou will need Python 2.7 or 3.5 installed on your laptop. Python 2.6 or 3.3/3.4\r\nshould also work. Python 3.x is strongly preferred.\r\n\r\n\r\n### IPython Notebook\r\n\r\nI will use an IPython Notebook for the tutorial because it makes a very good\r\nteaching tool. You are welcome to use the setup you prefer, i.e editor, IDE,\r\nREPL. If you also like to use an IPython Notebook, I recommend `conda` for\r\neasy installation. Similarly to `virtualenv`, `conda` allows creating isolated\r\nenvironments but allows binary installs for all platforms.\r\n\r\nThere are two ways to install`IPython` via `conda`:\r\n\r\n1. Use [Minconda][1]. This is a  small install and (after you installed it)\r\n   you can use the command  `conda` to create an environment:\r\n  `conda create -n pycon2016 python=3.5`\r\n   Now you can change into this environment:\r\n   `source activate pycon2016`. The prompt should change to `(pycon2016)`.\r\n   Now you can install IPython: `conda install IPython`.\r\n\r\n2. Install [Anaconda][2] and you are ready to go if you don't mind installing\r\n   lots of packages from the scientific field.\r\n\r\n\r\nThe second option also gives you `conda` and you can create more environments\r\njust as with Miniconda (see 1.).\r\n\r\n### Working witch ``conda`` environments\r\n\r\nAfter creating a new environment, the system might still work with some\r\nstale settings. Even when the command ``which`` tells you that you are using an\r\nexecutable from your environment, this might actually not be the case.\r\nIf you see strange behavior using a command line tool in your environment,\r\nuse ``hash -r`` and try again. Please install ``pip`` inside this environment:\r\n\r\n      conda install pip\r\n\r\n\r\n### Tools\r\n\r\nYou can install these with ``pip`` (in the active ``conda`` environment):\r\n\r\n* [SnakeViz][3]\r\n* [line_profiler][4]\r\n* [Pympler][6]\r\n* [memory_profiler][7]\r\n* [pyprof2calltree][9]\r\n\r\n\r\n\r\n#### Linux\r\n\r\nUsing the package manager of your OS should be the best option.\r\n\r\n\r\n[1]: http://conda.pydata.org/miniconda.html\r\n[2]: http://continuum.io/downloads\r\n[3]: http://jiffyclub.github.io/snakeviz/\r\n[4]: https://pypi.python.org/pypi/line_profiler/\r\n[6]: https://pypi.python.org/pypi/Pympler\r\n[7]: https://pypi.python.org/pypi/memory_profiler\r\n[8]: http://kcachegrind.sourceforge.net/html/Home.html\r\n[9]: https://github.com/pwaller/pyprof2calltree/\r\n\r\n## About the trainer\r\n\r\nI've been teaching Python courses since 2004. According to my statistics,\r\nI taught about 250 Python courses totaling over 600 teaching day.\r\nThis includes 16 tutorials at PyCon as well as numerous tutorials at\r\nEuroPython, EuroSciPy, PyCon DE, PyCon PL, PyCon IE, PyCon AsiaPacific\r\nas well as at PyData London and Berlin.\r\n\r\nI've been teaching tutorials about this topic every year at PyCon US from 2007\r\nthrough 2014 as well at PyData Berlin 2015 and at EuroPython 2015 in Bilbao.\r\nThis version has been revised **based on the feedback from the last tutorial\r\ndeliveries**.\r\n\r\nFirst, the tutorial covers fewer topics. I cut out tools that do not support\r\nPython 3 such as SnakeRunSnake and Heapy.\r\n\r\nSecond, I added more exercises. This should allow more focus on the core of the\r\ntutorial and also include more hands-on work by the participants. This \u201eLess is\r\nMore\u201c approach is additionally justified because the content of the tutorial\r\ngrew over time as more very useful tools became available. I think more\r\ndepths and less range makes sense for this topic.\r\n\r\nThere is a 60-page PDF handout that is rather comprehensive and can serve for\r\nself-study after the tutorial.\r\n",
      "tag_categories": [
        "Data Science",
        "Programming",
        "Programming",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "mmueller@python-academy.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/faster-python-programs-measure-dont-guess-1",
      "admin_type": "",
      "companies": "Python Academy GmbH & Co. KG"
    },
    "556": {
      "abstract_short": "During this workshop, you will be guided to make an open source contribution to the [coala][1] project. You will learn about quality restrictions and code review as well as the necessary tools to rework your patches to get them accepted. With the knowledge from this course you should easily be able to go out and help any open source project!\r\n\r\n  [1]: http://coala-analyzer.org\r\n",
      "sub_title": "Qualifies attendees for contribution to coala and other open source projects.",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@tushar_rishav",
      "id": 556,
      "speakers": "Tushar Gautam",
      "title": "Guide to make a real contribution to an open source project for novice",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Python 3",
        "Beginners",
        "Git",
        "Open-Source",
        "Development"
      ],
      "abstract_long": [
        "Goal\r\n----\r\nYou will be guided to make a real contribution to an open source project ([_coala_][1]). The skills you learn are generally applicable. \r\n\r\nPrerequisite\r\n------------\r\n1. Eager to contribute to open source.\r\n2. Willingness to do great things in python\r\n3. GitHub account\r\n4. Git and Python installed\r\n5. A laptop\r\n\r\n\r\nOverview\r\n--------\r\n- Talk about version control (specifically Git). Basic stuffs like setup git and commands like `fork/clone, pull/fetch, push, commit/ammend, squash` etc.  We'll be following **learning by doing** paradigm. Approx 15 minutes.\r\n- Introduce people to [_coala_][1] in general, brief about its codebase and how to use Github to contribute to coala. Approx 15 minutes.\r\n- Get started to write some code. We'll have bunch of unassigned issues, specifically created for \r\nthe purpose of workshop, show people how developers collaborate, cover git commands in more detail and the pull requests from attendees. Approx 1.30 hrs.\r\nWe'll also talk in brief about quality/testing tools like Travis Ci, CircleCi, Gitmate etc.  In the meantime we'll start reviewing the PRs. Approx 20 minutes.\r\n- Finally, reworking the code phase and get every attendees merge their contributions to master branch.\r\n\r\n  \r\n[1]: http://coala-analyzer.org/"
      ],
      "abstract_extra": "We've been using git and programming in Python since a fair amount of time. We've also conducted workshops regarding the contribution to open source in University. We'll be glad to share what we've learnt so far with the community. We also look forward to learn a lot from this conference. \r\nThe workshop shall be conducted by [_Tushar Gautam_][1]  and  [_Vishal Agarwal_][2] ,the two contributors to coala :\r\n  [1]: https://github.com/tushar-rishav\r\n  [2]: https://github.com/charizard42",
      "tag_categories": [
        "Python",
        "Educational",
        "DevOps",
        "Open Source",
        "Programming"
      ],
      "emails": "tushar.rishav@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/guid-to-make-a-real-contribution-to-an-open-source-project-for-novice",
      "admin_type": "",
      "companies": ""
    },
    "407": {
      "abstract_short": "Want to learn how to clean, investigate, explore and analyze your data using Python? This workshop will take you from using Python as a developer into the basics of using Python as a data wrangler. We will cover an introduction to several data science libraries including Pandas, as well as some basic charting and reporting libraries.",
      "sub_title": "Solving problems through data cleaning, analysis and reporting",
      "timerange": "2016-07-21 10:15:00, 2016-07-21 13:15:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@kjam",
      "id": 407,
      "speakers": "Katharine Jarmul",
      "title": "Introduction to Data Wrangling",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4 [PyData Track]",
      "tags": [
        "Visualization",
        "Jupyter/iPython Notebook",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "APIs"
      ],
      "abstract_long": [
        "Overview \r\n------------------ \r\nIn this tutorial, we'll be taking an exploratory look at how to perform data wrangling using Python. It's assumed the audience has a working understanding of Python and some basic data analysis exposure. Participants will leave the class with a better understanding of useful Python libraries for data analysis, as well as some hands-on scripts built throughout the tutorial. With these initial first steps, they should feel comfortable integrating data analysis into their current Python projects. \r\n\r\nOutline \r\n------------------ \r\n* Introduction to Data Wrangling with Python \r\n** How to ask questions \r\n** Where to find data \r\n** Why Python? \r\n\r\n* Initial setup\r\n** IPython Notebook \r\n** Getting the data \r\n\r\n* Importing data\r\n** Working with easy formats \r\n** Working with hard formats \r\n** APIs \r\n\r\n* Exploring data \r\n** Using pandas \r\n** Asking simple questions \r\n** Joining datasets \r\n\r\n* Analysing data \r\n** What is the data saying \r\n** Standardization and normalization \r\n** Making conlusion \r\n\r\n* Reporting your findings \r\n** Who is your audience \r\n** Charting data \r\n** Interactive charts and graphs \r\n\r\n* Next steps \r\n** Where to go from here \r\n** Q&A \r\n** \"Homework\" "
      ],
      "abstract_extra": "This tutorial will be based on work for my recently completed O'Reilly book, (Data Wrangling with Python)[http://shop.oreilly.com/product/0636920032861.do]. I've spoken at several US PyCon and other Python conferences and led classes for PyLadies in Los Angeles and Berlin. \r\n\r\nI've presented a version of this tutorial at EuroPycon last year, and, despite WiFi issues, received some great feedback and reviews. I've modified it and updated it to be more on-point with the audience in mind. ",
      "tag_categories": [
        "Data Science",
        "Python",
        "Data Science",
        "Web"
      ],
      "emails": "kjarmul@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/introduction-to-data-wrangling",
      "admin_type": "",
      "companies": "kjamistan"
    },
    "629": {
      "abstract_short": "**Objectives:**\r\n\r\n1) What is deep learning and why is it the current rage? \r\n2) How to implement a deep learning algorithm from scratch? \r\n3) Python library for deep learning - Keras\r\n4) Leverage deep learning for natural language processing \r\n5) Impact of GPU for deep learning \r\n\r\nThis workshop covers some of the common deep learning architectures for NLP with hands-on implementation of them using the latest deep learning libraries. The main topics would be MLP, RNN and word2vec.\r\n\r\n",
      "sub_title": "A single neuron to a civilization",
      "timerange": "2016-07-20 10:15:00, 2016-07-20 13:15:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@bargava, @nischalhp, @raghothams",
      "id": 629,
      "speakers": "Bargava Subramanian, Nischal HP, Raghotham Sripadraj",
      "title": "Introduction to Deep Learning for Natural Language Processing",
      "have_tickets": [
        true,
        false,
        false
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Natural Language Processing",
        "Machine-Learning",
        "Deep Learning",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "Ever wondered how Google Translate works so well? Do you know how the auto-captioning works on Youtube? How to mine the sentiments of tweets on twitter? And there's a host of successful natural language processing examples out there. What's the underlying theme? They all use Deep Learning.\r\n\r\nThis workshop introduces artificial neural networks and deep learning. The building blocks of neural networks are discussed in detail. Attendees are introduced to learning using ANN with backpropagation algorithm.\r\n\r\nA preliminary model using multi-layer perceptron is implemented to get a feel for deep learning model structure and the library keras.\r\n\r\nThe state-of-art recurrent neural networks is introduced. Two approaches are shown - 0ne using Long Short-Term Memory models and another one leveraging Word2Vec. Some ways to overcome overfitting are explored. \r\n\r\nWe'll also show how GPU's affect the computation.\r\n\r\nWe'll also implement a RNN to do text-generation.\r\n\r\n\r\n**Ideal Background of the attendee**\r\n\r\nSome knowledge of machine learning. \r\n - Bias and Variance\r\n - Train, Validation, and Test sets\r\n - Cross-validation\r\n - hyperparameter optimization\r\n - Measuring model accuracy \r\n - Supervised and Unsupervised learning\r\n - Overfitting \r\n - Basic Python constructs\r\n\r\nThe repository for the tutorial is [here][1]\r\n\r\nThe repository has instructions on what packages to install and the data we would be using for the workshop.\r\n\r\n  [1]: https://github.com/rouseguy/intro2deeplearning\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "This tutorial will be conducted along with Raghotham S(raghotham.s@gmail.com)  and Nischal HP(nischalhp@gmail.com)\r\n\r\nWe have conducted this workshop at the following places\r\n[PyCon Ireland 2015][5]\r\n[PyCon Poland 2015][4]\r\n[Fifth Elephant 2015(India's largest Data Science Conference)][3]\r\n[IEEE Conference on Cloud Computing for Emerging Markets][2]\r\n[PyCon Czech 2015][1]\r\n\r\n  [1]: https://cz.pycon.org/2015/workshops/\r\n  [2]: http://conferences.computer.org/ccem/program.html\r\n  [3]: https://fifthelephant.talkfunnel.com/2015/10-introduction-to-deep-learning\r\n  [4]: http://pl.pycon.org/2015/agenda_en.html\r\n  [5]: http://lanyrd.com/2015/pyconie/sdrpqd/\r\n\r\nIn addition to this, the speakers have organized workshops at the following places\r\nPyCon India 2015 - Introduction to Statistics\r\nBangalore Python User Group: \r\n- Machine Learning (June 2015)\r\n- Data Analysis(August 2015)\r\n- Optimization (February 2016) ",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "bargava@gmail.com, nischal.hp@gmail.com, raghotham.s@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/introduction-to-deep-learning-for-natural-language-processing",
      "admin_type": "",
      "companies": "Cisco, Unnati Data Labs"
    },
    "425": {
      "abstract_short": "We will run through a fork of the publicly available ipython-in-depth tutorial \r\n    [https://github.com/mjbright/ipython-in-depth][1]\r\nto discover many of the capabilities of Jupyter and IPython.\r\n\r\n  [1]: https://github.com/mjbright/ipython-in-depth\r\n",
      "sub_title": "Discover IPython/Jupyter through hands-on exercises with this time tested (evolving) tutorial",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 17:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@mjbright",
      "id": 425,
      "speakers": "Mike BRIGHT",
      "title": "IPython in Depth",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Notebook",
        "Jupyter/iPython"
      ],
      "abstract_long": [
        "We will run through a fork of the publicly available ipython-in-depth tutorial \r\n -  [https://github.com/mjbright/ipython-in-depth][1]\r\n\r\nto discover many of the capabilities of Jupyter and IPython.\r\n\r\nPlease bring your own PC with Jupyter already installed.\r\nI recommend to have the Anaconda distribution, see here for suggested installation methods:\r\n - [http://jupyter.readthedocs.org/en/latest/install.html][2]\r\n\r\nI will work through at least the following tutorial sections:\r\n\r\n - Notebook Basics + beyond plain python\r\n - Markdown Cells\r\n - Rich Display System\r\n - Introduction to Interactive Javascript Widgets\r\n\r\nWe will spend roughly 45 mins on each section\r\n\r\nThis is a beginners Jupyter/IPython session.\r\nNevertheless, there's no problem for people to jump ahead, or to perform other exercises container within that repo.\r\n\r\nI've created a gitter channel for dissemination of information and to allow participants to chat and help each other.  Feel free to post before/after the session.\r\nYou can join the channel here:\r\n[https://gitter.im/mjbright/ipython-in-depth][3]\r\n\r\n  [1]: https://github.com/mjbright/ipython-in-depth\r\n  [2]: http://jupyter.readthedocs.org/en/latest/install.html\r\n  [3]: https://gitter.im/mjbright/ipython-in-depth\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "The tutorial will be run on attendee PCs.\r\n\r\nTutorial will be based on the publicly available tutorials on the github IPython and Jupyter repositories.\r\n\r\nCan be adapted if particular requirements are suggested.\r\n\r\nI am more than open to participating with other speakers on this lab.\r\n",
      "tag_categories": [
        "",
        ""
      ],
      "emails": "europython@mjbright.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/ipython-in-depth",
      "admin_type": "",
      "companies": "HPE"
    },
    "615": {
      "abstract_short": "The open source devpi private packaging system is used in many organisations and in this course you learn how to make the best use of it. Devpi helps with packaging and uploading python packages, documentation and test results to private indexes. In this course you'll also learn how to setup the server and client-side of devpi and how to implement staging and custom work flows. ",
      "sub_title": "",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 615,
      "speakers": "holger krekel",
      "title": "Manage your Python packages professionally with devpi",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Infrastructure",
        "Testing",
        "Packaging"
      ],
      "abstract_long": [
        "The devpi server can manage all your private python packages and documentation and you can use well-known python tools like pip, tox, twine and sphinx to work with it. It also serves as a caching proxy for pypi.python.org and indexes can be configured to work as an \"overlay\" where your private packages appear in addition to public python ones. The server provides a web interface which integrates search and sphinx-generated documentation. All of this will be demonstrated and learned through little exercises during the course.\r\n\r\nThe devpi client side provides help for creating users, indexes, uploading packages, documentation and performing package-defined tests. In the course you'll learn the basics of command line usage with devpi and how to use it to implement custom work flows.\r\n\r\nMore info on the devpi system at doc.devpi.net"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Testing",
        "Python"
      ],
      "emails": "holger@merlinux.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/manage-your-python-packages-professionally-with-devpi",
      "admin_type": "",
      "companies": "merlinux GmbH"
    },
    "650": {
      "abstract_short": "Learn how to use the [Cython][1] compiler to bring complex array computations to the speed of C without resorting to low level languages.\r\n\r\n  [1]: http://cython.org/\r\n",
      "sub_title": "Learn how to speed up complex array computations with Cython",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 650,
      "speakers": "Stefan Behnel",
      "title": "NumPy with Cython",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Cython",
        "Big Data",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "The [Cython][1] compiler is an excellent and widely used tool for speeding up computational code and talking to native libraries. It translates Python code to C or C++ code and supports static type annotations to allow direct use of C/C++ data types, native functions and complex array types. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code. Cython has direct support for NumPy arrays and other buffer objects, which allows for efficient and even parallel (OpenMP) processing of large arrays.\r\n\r\nThis tutorial by a Cython core developer introduces the Cython programming language and its compiler and leads the participants all the way from their first Python extension to an efficient integration with NumPy arrays.\r\n\r\nNote that participants are expected to have a good understanding of the Python language, at least some basic knowledge about NumPy and C or C++, and are able to use a C compiler on their computers to build native CPython modules from sources (e.g. install source packages from PyPI that contain C extensions). No deep C programming knowledge is required, nor is any prior knowledge needed about writing extension modules for the CPython runtime. The Cython compiler handles most of these low-level issues itself.\r\n\r\n  [1]: http://cython.org/\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Data Science",
        "Data Science",
        "Data Science",
        "Python"
      ],
      "emails": "pycon@behnel.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/numpy-with-cython",
      "admin_type": "",
      "companies": "Skoobe"
    },
    "549": {
      "abstract_short": "Learn the use of python SDKs to deploy your first cloud native application atop OpenStack.  Deploying applications in a cloud environment can be very different from deploying them in a traditional IT environment. This workshop will teach you how to deploy applications on OpenStack and some best practices for cloud application development. ",
      "sub_title": "Using Python SDKs to Deploy your first Cloud Native Application atop OpenStack",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 549,
      "speakers": "David Flanders",
      "title": "OpenStack Cloud Native Deployment for Application Developers",
      "have_tickets": [
        false
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Visualization",
        "Education",
        "OpenStack",
        "DevOps general",
        "Deep Learning"
      ],
      "abstract_long": [
        "Did you miss the first wave of job opportunities to be an OpenStack operator?  Fear not, the second wave commeth!  Learn the latest in Application Development atop OpenStack.  Both DevOpps and AppDev are invited to this hands-on training.  This training will provide an overview of the most popular Python SDKs and their use with OpenStack (and other clouds: why be locked in?).  \r\n\r\nBy the end of the workshop you will have learned: \r\na.) The basic componets of an open collaborative cloud infrastructure, \r\nb.) Simple architectures for building an application to scale accross several cloud compute nodes\r\nc.) Cloud data storage techniques and how to auto-orchestrate your data and compute\r\nd.) About the future upcoming application development paradigms: containers, 12 factor and mobile/IoT and much more.  \r\n\r\nThe future is open, might as well get started.  \r\n\r\nThe OpenStack foundation is now a not-for-profit organisation which is now 5 years of age and still innovatively growing.  If you've not been to an OpenStack summit you are missing one of the best open events of the year.  The OpenStack summit will be in Barcelona late October, hope to see you there. "
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Educational",
        "DevOps",
        "DevOps",
        "Data Science"
      ],
      "emails": "denise@openstack.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/openstack-cloud-native-deployment-for-application-developers",
      "admin_type": "",
      "companies": "OpenStack Foundation"
    },
    "475": {
      "abstract_short": "_Try major async web frameworks in playful use-cases, learn which tool works best for which task_\r\n\r\nWorkshop reveals Python capabilities for async web development, focusing on production-ready tools for the time being. It contains an overview and sample tasks for most established Python solutions:\r\n\r\n- AsyncIO\r\n- Tornado\r\n- Twisted\r\n\r\nWorkshop does not promote any particular framework; we try each option to build the personal preference mapping of project requirements and corresponding tools.",
      "sub_title": "Try major async web frameworks in playful use-cases, learn which tool works best for which task",
      "timerange": "2016-07-19 10:15:00, 2016-07-19 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@PyMunich",
      "id": 475,
      "speakers": "Anton Caceres",
      "title": "Present-day Async Web development training: from Twisted to Tornado and AsyncIO",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Use Case",
        "Web Track",
        "Best Practice",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "**Objective**\r\n\r\nGet hands-on experience with async Python frameworks, learn which tool works best for which task.\r\n\r\n**Description**\r\n\r\nThis beginner-friendly workshop contains an overview, code tasks and a benchmark for production-ready Python async tools for the time being:\r\n\r\n- AsyncIO\r\n- Tornado\r\n- Twisted\r\n\r\nWorkshop does not promote any particular framework; we practically try each option and develop personal preferences.\r\n\r\n**Plan**\r\n\r\n 1. Introduction to async web servers and frameworks (15 min)\r\n 2. Formulating typical web tasks that need async design (10 min)\r\n 3. for task in tasks: (1 h)\r\n   - implement with Twisted\r\n   - Tornado\r\n   - AsyncIO\r\n 4. Take a realistic parallel requests use-case and use LAN to experiment (30 min)\r\n 4. Discuss peculiarities of implementations (10 min)\r\n 5. Run same task on different platforms with a benchmark (10 min)\r\n 6. Integrate frameworks: (15 min)\r\n   - run Tornado on AsyncIO loop\r\n   - convert Future objects\r\n7. Q & A (10 min)\r\n\r\n**Practical part**\r\n\r\nWe try different frameworks to implement typical web tasks: handling requests, fetching data from external APIs and proxying connections. In case of reliable LAN we will use laptops of each other as services to call asynchronously. This part is interactive, everyone is a creator of own service. Then we will put some service down and do error handling, try to integrate future objects of different frameworks, run a benchmark.\r\n\r\n**Pre-requirements**\r\n\r\n- Laptop with Python 3.4+"
      ],
      "abstract_extra": " - This workshop is an evolution of my talk series, eg last _[EuroPython talk][1]_\r\n - I also had similar but more AsyncIO-focused workshops at _[PyCon.es][2]_ and _[PyCon Sette][3]_.\r\n - Current workshop will be presented for the first time\r\n - I'm the organiser and tutor of _[PyMunich][4]_\r\n\r\n  [1]: https://www.youtube.com/watch?v=NKPHP5p0WXA\r\n  [2]: http://2015.es.pycon.org/en/schedule/\r\n  [3]: https://www.pycon.it/conference/talks/beautiful-async-code-in-python-3\r\n  [4]: http://www.pymunich.com",
      "tag_categories": [
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "anton@caceres.me",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/present-day-async-web-development-training-from-twisted-to-tornado-and-asyncio",
      "admin_type": "",
      "companies": "Skoobe"
    },
    "631": {
      "abstract_short": "Modern Python development is sophisticated: large code bases with many libraries, multiple developers, and rich frontend stacks for web development. Better tooling can be a big help, including an integrated development environment (IDE). This tutorial introduces PyCharm, covers its major features, and shows a web development workflow in a hands-on environment.",
      "sub_title": "",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@paulweveritt",
      "id": 631,
      "speakers": "Paul Everitt",
      "title": "Productive Coding with PyCharm",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Programming"
      ],
      "abstract_long": [
        "PyCharm is a powerful development environment for Python and web programming, with many tools and features to boost productivity. This tutorial covers a broad selection of these features, in the context of hands-on development. The outline focuses on Python, but includes a treatment of the HTML/JS/CSS features PyCharm inherits from its IntelliJ/WebStorm foundation.\r\n\r\nDuring this tutorial we'll also take a look on how good code practices can help the IDE to assist you on Python coding: writing docstrings, type hints with Python 3.5 latest standards, etc.\r\n\r\nAfter this tutorial, attendees should part with a basic understanding of the myriad of PyCharm features: what they are, why they help, how to use them, and how to find more information.\r\n\r\nAttendees should arrive at the tutorial with an installation of Python and and installation of the latest PyCharm. A list of required packages will be provide the week before, to help minimize the network impact of PyPI access. (An attempt will be made to run a local mirror.)"
      ],
      "abstract_extra": "##Tutorial format\r\n\r\nHands-on environment with multiple people from the PyCharm team to walk around and help. The approach is based on how I taught my \u201cPython 3 Web Development with Pyramid\u201d at two previous PyCons, a format that received strong feedback scores. The tutorial is broken into 10-12 sections. Each section begins with some talking, then has the students do hands-on work, then finishes with a wrap-up.\r\n\r\n## Class Size\r\n\r\nWe can handle a large class (I have a lot of experience over the years teaching Python in larger settings.)\r\n\r\n## Previous Experience\r\n\r\nI have conducted two PyCon tutorials in the past 3 years, plus a tutorial at PyCon Brasil. Before that, my tutorial work goes back to teaching CGI at the Python workshop in 1995.",
      "tag_categories": [
        "Programming"
      ],
      "emails": "pauleveritt@me.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/productive-coding-with-pycharm",
      "admin_type": "",
      "companies": "JetBrains s.r.o."
    },
    "587": {
      "abstract_short": "Learn to test your code more effectively with Hypothesis.",
      "sub_title": "Let your testing do more of your work for you",
      "timerange": "2016-07-18 10:15:00, 2016-07-18 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@DRMacIver",
      "id": 587,
      "speakers": "David MacIver",
      "title": "Property-based testing with Hypothesis",
      "have_tickets": [
        false
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Test Libraries (pyTest/node/...)",
        "Testing"
      ],
      "abstract_long": [
        "Hypothesis is a library for writing smarter tests.\r\n\r\nInstead of hand-writing every example in your tests, you describe what sorts of examples you need and let it fill in the blanks. It uses this to actively go looking for bugs in your code.\r\n\r\nIt's proven very effective, and is being used by an ever growing number of open source projects (including pypy, cryptography, and mercurial), but people sometimes struggle to get started.\r\n\r\nIn this session we'll help you overcome that by going through a number of illustrative examples that will help you understand this style of testing better.\r\n\r\nThe first two hours will be spent on these, start with a discussion of the problem, a sample test to start you off, and then people will work through it at their own pace, with me there to answer questions and help people when they get stuck. After people have had some time on a given problem, I'll go over some possible tests for the example and why they are useful, and give people time to try anything they like out before moving on to the next problem.\r\n\r\nFor the final hour, people will work on testing some more substantial code. You should feel free to bring your own, but I will provide some interesting projects for people to work on for anyone who doesn't have anything specific.\r\n\r\nAt the end of this you should feel much more comfortable with the general concepts of property based testing, and be able to use Hypothesis effectively to test your own code."
      ],
      "abstract_extra": "I'm the primary author of Hypothesis.\r\n\r\nI've previously given a few talks about it, including this one at PyCon UK (https://www.youtube.com/watch?v=62ubHXzD8tM) and a more recent one at PyCon Namibia (No video, unfortunately, but here are the slides: https://bit.ly/how-do-i-know-1).\r\n\r\nI've run similar trainings before, both at PyCon Namibia and for companies.\r\n\r\nLast year's EuroPython had a number of talks about Hypothesis ( https://ep2015.europython.eu/conference/talks/whats-the-fuzz-all-about-randomized-data-generation-for-robust-unit-testing, https://ep2015.europython.eu/conference/talks/testing-with-two-failure-seeking-missiles-fuzzing-and-property-based-testing and somewhat https://ep2015.europython.eu/conference/talks/static-type-checking-is-dead-long-live-static-type-checking-in-python) , although I wasn't able to attend myself.",
      "tag_categories": [
        "Testing",
        "Testing"
      ],
      "emails": "david.maciver@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/property-based-testing-with-hypothesis",
      "admin_type": "",
      "companies": ""
    },
    "622": {
      "abstract_short": "The py.test tool presents a rapid and simple way to write tests for your Python code. This training gives a quick introduction with exercises into some distinguishing features. We\u2019ll do exercises where we get existing non-pytest test suites to run with pytest and discuss migration strategies. We\u2019ll finish with discussing topics and questions of participants related to their own test suites and usages.",
      "sub_title": "",
      "timerange": "2016-07-22 10:15:00, 2016-07-22 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@the_compiler",
      "id": 622,
      "speakers": "Florian Bruhin",
      "title": "pytest - simple, rapid and fun testing with Python",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Test Driven Development (TDD)",
        "Test Libraries (pyTest/node/...)",
        "Testing"
      ],
      "abstract_long": [
        "The py.test tool presents a rapid and simple way to write tests for your Python code. This training gives a quick introduction with exercises into some distinguishing features. We\u2019ll do exercises where we get existing non-pytest test suites to run with pytest and discuss migration strategies. We\u2019ll finish with discussing topics and questions of participants related to their own test suites and usages.\r\n\r\nThis is the planned outline:\r\n\r\n- (30 minutes) pytest feature walkthrough: automatic test discovery, assert statement, modular parametrizable fixtures, 150 plugins\r\n\r\n- (60 minutes) pytest fixture mechanism: dependency injection, declaring and using function/module/session scoped fixtures, using fixtures from fixture functions, parametrizing fixtures. Exercises.\r\n\r\n- (30 minutes): running nose/unittest/trial/Django suites with pytest. Discussing advantages and limitations. Exercise with a select existing real-life open source project.\r\n\r\n- (30 minutes): Strategies for a) migrating to pytest b) using \u201cautouse\u201d fixtures in conjunction with XUnit-based setup/tearodwn methods. Exercise.\r\n\r\n- (30 minutes): open space for questions and interactively solving pytest/unittest integration problems on real-life problems as time permits."
      ],
      "abstract_extra": "I did the pytest training at EuroPython last year and it was quite popular with good feedback, so I thought I'd submit it again.",
      "tag_categories": [
        "Testing",
        "Testing",
        "Testing"
      ],
      "emails": "europython.eu@the-compiler.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/pytest-simple-rapid-and-fun-testing-with-python-1",
      "admin_type": "",
      "companies": ""
    },
    "439": {
      "abstract_short": "Python allows system administrators to replace a wide set of tools like awk, perl and gnuplot.\r\n\r\nThe students will learn - thru various examples presented in ipython notebook - to speed up their everyday work and trasform their scripts in reusable libraries. Moreover they will see a large showcase of libraries and their usage.\r\n\r\nA Test Driven Deployment approach using Ansible will be shown.\r\n",
      "sub_title": "One language to rule them all.",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@ioggstream",
      "id": 439,
      "speakers": "Roberto Polli",
      "title": "Python for System Administrators",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "DevOps general",
        "System Administration"
      ],
      "abstract_long": [
        "##Goal\r\nUse python to replace sysadmin tools like awk, perl and gnuplot and:\r\n\r\n - gather system data on different platforms (Linux, Windows, Mac);\r\n - parse them efficiently (\u00b5-benchmarks, defaultdict, re.compile, dstat plugins); \r\n - basic statistics and data visualization (distributions, correlation, scatter);\r\n - showcase of useful libraries (smtplib, ansible, mysql-utilities);\r\n - plan test driven deployments with Ansible\r\n\r\nTimings are [in the **draft** slides][2] \r\n\r\n## Methodology\r\nThe training is interactive,  [jupyter notebooks stubs here][6] with [sources][1] and a [Docker image][4].\r\nStudents will be driven performing the exercises and sharing their results. A couple of volunteers will be prepared to support the students.\r\n\r\n## Prerequisites\r\nThe training is multi-platform, though focused on Linux + Python2.7:\r\n\r\n  - Linux, Windows, Mac\r\n\r\nFeel free to contact me for any issue or question!\r\n\r\n  \r\n  [1]: https://github.com/ioggstream/python-course/tree/master/python-for-sysadmin\r\n \u00a0\r\n  [2]: http://www.slideshare.net/ioggstream/python-for-system-administrators-59499282\r\n \u00a0\r\n  [3]: https://github.com/ioggstream/python-course/tree/master/python-for-sysadmin/requirements.txt\r\n \u00a0\r\n  [4]: https://registry.hub.docker.com/u/ioggstream/python-course/\r\n \u00a0\r\n  [5]: https://github.com/ioggstream/python-course/tree/master/python-basic\r\n\r\n  [6]: http://nbviewer.jupyter.org/github/ioggstream/python-course/tree/corso-interno/python-for-sysadmin/notebooks/"
      ],
      "abstract_extra": "EuroPython speaker since 2012.\r\nRed Hat Opensource Days Italy: 2011, 2015",
      "tag_categories": [
        "DevOps",
        "DevOps"
      ],
      "emails": "robipolli@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/python-for-system-administrators",
      "admin_type": "",
      "companies": "Par-Tec Spa"
    },
    "643": {
      "abstract_short": "Our cloud platform, Aldryn, is probably the world\u2019s biggest host of Docker-powered Django websites. \r\n\r\nWe work with Docker every day, and also with less-technical users of the platform, so we have built up a good understanding of how to introduce and explain the technology for practical purposes, and of the numerous and multiple difficulties that users of it can stumble across.\r\n\r\nWe want to share that experience, and help people take advantage of Docker from a Python/Django perspective.\r\n",
      "sub_title": "A hands-on workshop to familiarise Django developers with key Docker concepts and techniques",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@EvilDMP, @stefanfoulis",
      "id": 643,
      "speakers": "Daniele Procida, Stefan Foulis",
      "title": "So, what's all the fuss about Docker?",
      "have_tickets": [
        false,
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Django",
        "Docker"
      ],
      "abstract_long": [
        "Ou cloud platform, Aldryn, is probably the world\u2019s biggest host of Docker-powered Django websites. \r\n\r\nWe work with Docker every day, and also with less-technical users of the platform, so we have built up a good understanding of how to introduce and explain the technology for practical purposes, and of the numerous and multiple difficulties that users of it can stumble across.\r\n\r\nWe want to share that experience, and help people take advantage of Docker from a Python/Django perspective.\r\n\r\nWhat does Docker offer you, the Django developer? Even if you already know a bit about Docker, you\u2019re probably more familiar with it as a deployment tool, but in fact it offers some powerful advantages for the Python/Django developer too.\r\n\r\nThis is a hands-on workshop that also aims to clarify some key questions for the Django developer:\r\n\r\n- Why is Docker such a big deal?\r\n- What problems can Docker solve for me?\r\n- How does it work?\r\n- How can it enhance my development experience?\r\n\r\nIn the workshop we\u2019ll help install and configure Docker on your laptop (Linux/OS X/Windows), to have it working in a clear and manageable way.\r\n\r\nThen we\u2019ll step through setting up a Django project with Docker.\r\n\r\nIf we have time, we\u2019ll go on to show how Docker can help you move your project from development to deployment with minimum friction.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "I will be running this training workshop together with a colleague or two from Divio.",
      "tag_categories": [
        "Application Frameworks",
        "DevOps"
      ],
      "emails": "daniele.procida@divio.ch, stefan@foulis.ch",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/so-whats-all-the-fuss-about-docker",
      "admin_type": "",
      "companies": "Divio"
    },
    "616": {
      "abstract_short": "Practice writing implementation-agnostic tests and using the test-driven reuse (TDR) development strategy, a natural extension of test-driven development (TDD), with [pytest-nodev][2] an Open Source test-driven search engine for Python code.\r\n\r\n[2]: http://pytest-nodev.readthedocs.org/en/stable/quickstart.html\r\n\r\nIncluding:\r\n\r\n- test-driven code search of functions and classes\r\n- test-suite validation, identification of weak tests\r\n- implementation-agnostic tests resilient to code refactoring",
      "sub_title": "Writing good tests is more challenging and more rewarding than writing good code.",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 17:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@alexamici",
      "id": 616,
      "speakers": "Alessandro Amici",
      "title": "Test-driven code search and the art of writing implementation-agnostic tests",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "A4",
      "tags": [
        "Test Driven Development (TDD)",
        "Educational Track",
        "Test Libraries (pyTest/node/...)",
        "Testing",
        "Best Practice"
      ],
      "abstract_long": [
        "This is the hands-on counterpart of the regular talk \"Test-driven code search and reuse coming to Python with pytest-nodev\", it is suggested to attend it first.\r\n\r\nWe will practice writing implementation-agnostic tests and using the test-driven reuse (TDR) development strategy, a natural extension of test-driven development (TDD), with [pytest-nodev][2] an Open Source test-driven search engine for Python code.\r\n\r\n[2]: http://pytest-nodev.readthedocs.org/en/stable/quickstart.html\r\n\r\nTDR aims to address the limits of usual keyword-based search by focusing on code behaviour and semantics instead. Developing a new feature in TDR starts with the developer writing the tests that will validate candidate implementations of the desired functionality. Before writing any functional code the tests are run against all functions and classes of all available projects. Any code passing the tests is presented to the developer as a candidate implementation for the feature.\r\n\r\nApplications will include:\r\n\r\n- test-driven code search of auxiliary functions and classes\r\n  - full code reuse by adding dependencies\r\n  - full code reuse by forking code samples\r\n  - partial code reuse by integrating features and identifying problem corner cases\r\n- test-suite validation, identification of weak tests\r\n- using implementation-agnostic tests to make regular test-suites more resilient to code refactoring."
      ],
      "abstract_extra": "This is the hands-on counterpart of the regular talk [\"Test-driven code search and reuse coming to Python with pytest-nodev\"][1], it is suggested to attend it first, but it is not strictly needed.\r\n\r\n[1]: http://ep2016.europython.eu/conference/talks/test-driven-source-code-search-for-python-with-pytest-nodev\r\n",
      "tag_categories": [
        "Testing",
        ">>> Suggested Track",
        "Testing",
        "Testing",
        "Best Practice and Use Cases"
      ],
      "emails": "a.amici@bopen.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/test-driven-code-search-and-the-art-of-writing-implementation-agnostic-tests",
      "admin_type": "",
      "companies": "B-Open Solutions srl"
    },
    "397": {
      "abstract_short": "Spend time using and abusing advanced features of Python for fun, with little\r\nconsideration of what is a good or bad idea.\r\n\r\nPython has fun and powerful language features: operator overriding, decorators,\r\nmagic methods, and metaclasses. Developers steer away\r\nfrom using these features to avoid creating code that is difficult to\r\nunderstand. *Don't be one of those developers!* Come on an adventure to push\r\nPython syntax to its limits. (We will also cover what each feature is *really* for.)",
      "sub_title": "Learn advanced Python features by writing code that would get you fired.",
      "timerange": "2016-07-21 10:15:00, 2016-07-21 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@judy2k",
      "id": 397,
      "speakers": "Mark Smith",
      "title": "The Stupid Python Workshop",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "Meta Classes",
        "Python general",
        "Educational Track",
        "Mind Bending",
        "Fun and Humor"
      ],
      "abstract_long": [
        "Spend time using and abusing advanced features of Python, for\r\nfun, with little consideration of what is a good or bad idea.\r\n\r\nDevelopers avoid using advanced language features because they don't want to\r\nwrite code that is difficult to understand. *Don't be one of those developers!*\r\nCome on an adventure to push Python syntax to its limits.\r\n\r\nThis workshop is aimed at intermediate Python developers. Attendees should be\r\ncomfortable with Python's syntax and should be intrigued or confused by:\r\nmagic methods; how `@property` works; and *what on Earth* a metaclass is.\r\nAttendees will learn how these things work, starting with the more\r\nstraightforward features. I'll introduce each concept assuming the attendees\r\nhave never used them before.\r\n\r\nWe'll be writing *silly* and *bad* things. We aim to understand how they work,\r\nnot whether they are a good idea, but in each case there will be a brief\r\ndiscussion of what each feature was really designed for. The exact contents are\r\nnot confirmed, but should include some or all of the following:\r\n\r\n* Override operators for more flexible syntax.\r\n* Using `__new__` for fun and profit.\r\n* Functions that behave differently depending on the values in the\r\n  caller's scope.\r\n* Tacking extra methods on to classes we don't own.\r\n* Abuse of the descriptor protocol.\r\n* Messing with imports.\r\n* Decorators that do things decorators were never meant to do.\r\n* Write a metaclass and see if the world ends."
      ],
      "abstract_extra": "This workshop is based on a bunch of experiments I've partly published in my\r\n[GitHub Repo][stupid-python-tricks-repo]. It's basically a ridiculously\r\nexpanded, hands-on version of my [Lightning Talk][stupid-python-tricks-lightning-talk]\r\nat last year's EuroPython.\r\n\r\nI'm an experienced trainer and speaker. Two years ago I gave a talk on\r\n[command line programming][command-line-talk] at EuroPython, which has now been\r\nviewed 20000 times and seems to have been well received.\r\n\r\n[command-line-talk]: https://youtu.be/gR73nLbbgqY\r\n[stupid-python-tricks-repo]: https://github.com/judy2k/stupid-python-tricks\r\n[stupid-python-tricks-lightning-talk]: https://youtu.be/LQSWi3QJV8s?t=55m10s",
      "tag_categories": [
        "Programming",
        "Python",
        ">>> Suggested Track",
        "Everything Else",
        "Everything Else"
      ],
      "emails": "pornbypost@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/the-stupid-python-workshop",
      "admin_type": "",
      "companies": "FanDuel"
    },
    "511": {
      "abstract_short": "uWSGI application server training from a simple web application hosting to an asynchronous task runner.",
      "sub_title": "Learn to use and leverage the uWSGI power",
      "timerange": "2016-07-18 10:15:00, 2016-07-18 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@ultrabug",
      "id": 511,
      "speakers": "Alexys Jacob",
      "title": "uWSGI: the full stack application server",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "E",
      "tags": [
        "System Architecture",
        "Infrastructure",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "ASYNC / Concurreny",
        "System Administration"
      ],
      "abstract_long": [
        "Come and **learn how to use the uWSGI application server stack** with us.\r\n\r\nWe'll start from the basics to some more advanced usages :\r\n\r\n- what is uWSGI and why it can help you\r\n- what is the dynamic emperor mode and how it works\r\n- 1: run a simple Flask web application\r\n- 2: run a gevent based Flask web application\r\n- 3: run an external daemon using uWSGI\r\n- 4: create and run a task deferral application\r\n\r\nNote : we will provide and open source the Flask web application code we'll start from and iterate from there"
      ],
      "abstract_extra": "We at Numberly propose this training and propose that 2 of us run it.",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "Web",
        "Programming",
        "DevOps"
      ],
      "emails": "ultrabug@ultrabug.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/uwsgi-the-full-stack-application-server",
      "admin_type": "",
      "companies": "Numberly"
    }
  },
  "poster": {
    "555": {
      "abstract_short": "The EDARA code, currently in FORTRAN 77, is used at CERN to assess the environmental impact of airborne releases of radioactivity and will be significantly upgraded in the next years. Therefore a python prototype has been developed using the numba just-in-time compiler for the Monte Carlo simulation core routines and the pandas library for data analysis. This prototype lead to a much cleaner code base with comparable performance and increased flexibility, ensuring its long-term maintainability.",
      "sub_title": "Leveraging powerful data analysis libraries with just-in-time compilation techniques",
      "timerange": "2016-07-19 11:30:00, 2016-07-19 13:10:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 555,
      "speakers": "Robert Froeschl",
      "title": "A case study of porting a Fortran77 Monte Carlo simulation code to python&numba",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "All Other Programming Languages",
        "Science Track",
        "Case Study",
        "Physics"
      ],
      "abstract_long": [
        "The EDARA code is used at CERN (European Council for Nuclear Research) to assess the environmental impact of airborne releases of radioactivity. Its development has started in the 1990ies and the code is written in FORTRAN 77.\r\nThe EDARA code will be significantly upgraded in the next years to meet the future legal requirement of including additional age groups in the impact assessments, to have the capability of choosing among several different atmospheric dispersion models and to be interfaced from other software packages.\r\nTherefore it has been decided to port the EDARA code to python and a prototype has been developed with the following characteristics:\r\n - The numba just-in-time compiler has been used for the computationally demanding Monte Carlo simulation core routines. Closures over just-in-time compiled functions have been used to implement function pointer like features for the atmospheric dispersion model selection.\r\n - The data analysis and reporting features have been implemented using the pandas library.\r\n - implementation.\r\n - An API is provided for scripting and interfacing from other codes.\r\nThis prototype demonstrates that the python/numba/pandas implementation leads to a much smaller and cleaner code base that the FORTRAN 77 implementation without incurring a significant performance penalty for the computationally demanding parts. It has substantially increased the flexibility and extensibility of the code and will ensure its long-term maintainability.\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Other Programming Languages",
        ">>> Suggested Track",
        "Case Study",
        "Sciences"
      ],
      "emails": "robert.froeschl@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/a-case-study-of-porting-a-fortran77-monte-carlo-simulation-code-to-pythonnumba",
      "admin_type": "",
      "companies": "CERN, Geneva, Switzerland"
    },
    "725": {
      "abstract_short": "Shiv is Facebook layer 4 load balancer control plane built in Python, it is responsible for handling healthchecks, and configuration changes amongst other things and configure Linux IPVS to properly handle IP traffic.",
      "sub_title": "",
      "timerange": "2016-07-18 11:30:00, 2016-07-18 13:10:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@chantr4",
      "id": 725,
      "speakers": "Emmanuel Bretelle",
      "title": "Building a billion user load balancer",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "System Architecture",
        "Distributed Systems",
        "Infrastructure",
        "Open-Source",
        "Scaling"
      ],
      "abstract_long": [
        "At Facebook, we make intensive use of Python in our infrastructure. Back in mid-2012, our engineers started to work on replacing the hardware load balancers that were powering Facebook with an in-house brew that would leverage Linux IPVS. Python was naturally chosen as the language to control, configure and manage the load balancers. By mid-2013, the whole of Facebook layer 4 load balancers in our datacenters had been replaced with Shiv and have been handling traffic ever since.\r\n\r\nAt the core of Shiv, we use libraries open-sourced by Facebook like Sparts [0], to set up a Thrift service, run and manage tasks, and gnlpy [1], to control IPVS via netlink. Add some python-fu to the mix and you can get a layer 4 load balancer that serves traffic for 1.65 billion people.\r\n\r\nIn this poster I will explain how our L4 load balancers are architected and how we use Python to leverage IPVS, setup individual VIPs and manage their backends, and make those load balancers operate in a fully automated way.\r\n\r\n\r\n[0] https://github.com/facebook/sparts\r\n\r\n[1] https://github.com/facebook/gnlpy\r\n\r\n[2] https://www.youtube.com/watch?v=MKgJeqF1DHw\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps",
        "Open Source",
        "DevOps"
      ],
      "emails": "chantra@fb.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/building-a-billion-user-load-balancer",
      "admin_type": "",
      "companies": "Facebook"
    },
    "732": {
      "abstract_short": "TBD",
      "sub_title": "An EEG-Based Control of a simulated four-wheeled Rover using ROS and Gazebo",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 12:10:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 732,
      "speakers": "Enrico Carbognani",
      "title": "Driving a Rover on the Moon with the Power of your Mind",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Robotics",
        "Human-Machine-Interaction"
      ],
      "abstract_long": [
        "Humans have been dreaming  for centuries about controlling their surroundings solely by the power of their minds. Nowadays, these dreams are slowly becoming reality due to a variety of inexpensive brain-computer interfaces (BCI) that detect neural activation patterns and support the control of devices by brain signals.\r\nIn this experimental setup, we intend to evaluate the performance of  a commercial electroencephalographic (EEG) headset (Emotiv EPOC) in combination with a robotic simulation environment based on the Robot Operating System (ROS) and the Gazebo 3D simulator,  and highlight the advantages and limitations of this approach. \r\nThe user will able to control one degree of freedom (yaw) of a four-wheeled rover (the CLEARPATH Robotics Husky)  via the EPOC EEG and drive it trough simulated Moon terrains constructed using images and topographic (elevation) satellite data and integrated into Gazebo. \r\nWe are also planning to extend the experimental setup to include the use of Virtual Reality for the 3D visualization (this is subject to the successful integration of the Oculus Rift DK2 headset support in Gazebo which we are currently testing).\r\n"
      ],
      "abstract_extra": "In this simulation we will evaluate the performance of  a commercial electroencephalographic (EEG) headset (Emotiv EPOC) in combination with a robotic simulation environment based on ROS and the Gazebo 3D simulator,  and highlight the advantages and limitations of this approach. \r\nThe user will able to control one degree of freedom (yaw) of a four-wheeled rover via the EEG and drive it trough simulated Moon terrains.\r\nWe are also planning to possibly extend the experimental setup to include the use of Virtual Reality for the 3D visualization.",
      "tag_categories": [
        "Hardware",
        "Hardware"
      ],
      "emails": "enrico.carbognani@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/driving-a-rover-on-the-moon-with-the-power-of-your-mind",
      "admin_type": "",
      "companies": ""
    },
    "550": {
      "abstract_short": "Plone has, for the last 15 years, pushed the boundaries of Python-based CMSs. \r\nNow, in a world where JS frontends and delivery to multiple devices is key, we use the knowledge gained to get the **good** parts of this in a sensible, secure, developer- and integrator friendly, reliable Python backend.\r\n\r\n",
      "sub_title": "Secure, social, responsive and scalable.",
      "timerange": "2016-07-20 11:30:00, 2016-07-20 13:10:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@polyester",
      "id": 550,
      "speakers": "Paul Roeland",
      "title": "Plone, the premier Python CMS and intranet",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Web General",
        "Plone",
        "Open-Source",
        "CMS",
        "Community"
      ],
      "abstract_long": [
        "Plone 5.1 brings more ways to integrate all that is needed for a modern website and intranet:\r\n\r\n - rapid theming independent of the backend, so designers can do what they do best\r\n - testable, standard ways of integrating JavaScript widgets and frameworks\r\n - integrate best-of-breed search\r\n - all with a solid, secure, Python backend\r\n - flexibility and TTW rapid prototyping,  combined with CI and controlled development techniques\r\n\r\nPlone, now in its 15th year,  has evolved together with Python. As shown in one of this year's [keynotes at PyCon][1], the relationship is still going strong, and there is much we can learn from one another.\r\n\r\n  [1]: https://us.pycon.org/2016/events/keynotes/\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Application Frameworks",
        "Open Source",
        "Web",
        "Community"
      ],
      "emails": "paul.roeland@plone.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/plone-the-premier-python-cms-and-intranet",
      "admin_type": "",
      "companies": "Plone"
    },
    "720": {
      "abstract_short": "Many problems in statistics, finance, biology, pharmacology, physics, mathematics, economics, and chemistry involve the determination of the global minimum of multidimensional functions. The PyGenSA python module has been developed for generalized simulated annealing to process complicated non-linear objective functions with a large number of local minima.\r\n\r\n",
      "sub_title": "An Efficient Global Optimization Python Module based on Generalized Simulated Annealing",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 12:10:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 720,
      "speakers": "St\u00e9phane Cano",
      "title": "PyGenSA: An Efficient Global Optimization for Generalized Simulated Annealing",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Science",
        "Algorithms",
        "Science Track",
        "Open-Source",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)"
      ],
      "abstract_long": [
        "Many problems in statistics, finance, biology, pharmacology, physics, mathematics, economics, and chemistry involve the determination of the global minimum of multidimensional functions. Python modules from SciPy and PyPI for the implementation of different stochastic methods (i.e.: pyEvolve, SciPy optimize) have been developed and successfully used in the Python scientific community. Based on Tsallis statistics, the PyGenSA python module has been developed for generalized simulated annealing to process complicated non-linear objective functions with a large number of local minima. Testing PyGenSA, basinhopping and differential evolution (SciPy) on many standard test functions used in optimization problems shows that PyGenSA is more reliable in general and very efficient in particular for high dimension problems."
      ],
      "abstract_extra": "Pull request submitted to SciPy: \r\nhttps://github.com/scipy/scipy/pull/6197\r\n\r\nBranch corresponding to the pull request:\r\nhttps://github.com/sgubianpm/scipy.git\r\n",
      "tag_categories": [
        "Sciences",
        "Data Science",
        ">>> Suggested Track",
        "Open Source",
        "Data Science"
      ],
      "emails": "stephane.john.cano@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/pygensa-an-efficient-global-optimization-for-generalized-simulated-annealing",
      "admin_type": "",
      "companies": "Philip Morris R&D"
    },
    "713": {
      "abstract_short": "The IntelliCage\u2122 is a system for long-term behavioural experiments on cohorts of mice in social context. The robustness of IntelliCage data analysis may be improved with computer programs analysing the data in batch mode.\r\n\r\nTo simplify development of such programs, we developed the PyMICE library (RRID:nlx_158570). The library provides an user-friendly and intuitive API to access IntelliCage data, encouraging programming according to object-oriented and functional programming paradigms.",
      "sub_title": "Facilitating reproducible research on mice behaviour.",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 12:10:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 713,
      "speakers": "Jakub Kowalski",
      "title": "PyMICE - a library for analysis of IntelliCage\u2122 data",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Science",
        "Python general",
        "Science Track",
        "Open-Source",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)"
      ],
      "abstract_long": [
        "Life sciences are suffering badly from a \"research reproducibility crisis\". One of possible countermeasures is automation of data acquisition and analysis. \r\n\r\nAutomated data acquisition systems facilitate standardization of conditions and measurements by minimization of human disturbance. One of such systems is IntelliCage\u2122, dedicated for long-term behavioural experiments on cohorts of mice in social context.\r\n\r\nThe robustness of data analysis may be improved with automated data analysis workflows (ADAWs): computer programs analysing the data in batch mode. Also, the source code of such program is an unequivocal, formal specification of the performed analysis. The only drawback of such approach is a significant effort and technical knowledge necessary to define an ADAW.\r\n\r\nOur goal was to simplify development of ADAWs and to shift the developer's focus from technical details (like data format) to the analysis itself. To meet the goal, we developed the PyMICE library (resource identifier: RRID:nlx_158570). The library provides an user-friendly and intuitive API to access IntelliCage data, encouraging development of ADAWs according to object-oriented and functional programming paradigms.\r\n\r\n**Acknowledgements**\r\nProject sponsored by Symfonia NCN grant: UMO-2013/08/W/NZ4/00691\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "My experience is mostly from presenting posters at neuroscientific conferences.",
      "tag_categories": [
        "Sciences",
        "Python",
        ">>> Suggested Track",
        "Open Source",
        "Data Science"
      ],
      "emails": "j.kowalski@nencki.gov.pl",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/pymice-library",
      "admin_type": "",
      "companies": ""
    },
    "733": {
      "abstract_short": "Python is the most used language by production engineers , and the second most used by Facebook infrastructure teams. We use it in domains such as infrastructure management (network/server provisioning, service turnup, auto-remediation of server and services failures), platform services (package deployment, job scheduling, TFTP and kernel upgrades), service configuration management or operational tooling.\r\n",
      "sub_title": "",
      "timerange": "2016-07-19 14:45:00, 2016-07-19 16:25:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@chantr4",
      "id": 733,
      "speakers": "Emmanuel Bretelle",
      "title": "Python in Production Engineering",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Operations",
        "Infrastructure",
        "Distributed Systems",
        "Scaling"
      ],
      "abstract_long": [
        "Python is the most used language by production engineers [0], and the second most used by Facebook infrastructure teams. We use it in domains such as infrastructure management (network/server provisioning, service turnup, auto-remediation [1] of server and services failures), platform services (package deployment, job scheduling, TFTP [2] and kernel upgrades), service configuration management [3] or operational tooling.\r\n\r\nProduction engineers working on those services will be attending Europython 16 and happy to answer your questions on how Python helps us build service quickly and enables us to move fast and scale.\r\n\r\n\r\n[0] https://code.facebook.com/posts/1040181199381023/python-in-production-engineering/\r\n\r\n[1] https://www.facebook.com/notes/facebook-engineering/making-facebook-self-healing/10150275248698920/\r\n\r\n[2] https://ep2016.europython.eu/conference/talks/fbtftp-facebooks-python3-framework-for-tftp-servers\r\n\r\n[3] https://us.pycon.org/2016/schedule/presentation/2059/"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "chantra@fb.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/python-in-production-engineering",
      "admin_type": "",
      "companies": "Facebook"
    },
    "694": {
      "abstract_short": "Juju is a devops tool for automated deployments, with full stack\r\nservice modelling and orchestration, in the cloud. Fully\r\ncontrollable with Python through \"charms\".",
      "sub_title": "Devops distilled: deploy and orchestrate your services with Juju and Python",
      "timerange": "2016-07-20 14:45:00, 2016-07-20 16:25:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 694,
      "speakers": "Michael Foord",
      "title": "To the Clouds: Service Orchestration and Cloud Deployment with Juju",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Public Cloud (AWS/Google/...)",
        "Go-Lang",
        "Linux",
        "DevOps general",
        "OpenStack"
      ],
      "abstract_long": [
        "Juju is a devops tool for automated deployments, with full stack\r\nservice modelling and orchestration, in the cloud. Fully\r\ncontrollable with Python through \"charms\".\r\n\r\nAbstract\r\n\r\nDo you deploy your Python services to Amazon EC2, or to Openstack,\r\nor even to HP cloud, joyent or Azure? Do you want to - without being\r\ntied into any one of them? What about local full stack deployments\r\nwith lxc or kvm containers?\r\n\r\nEven if you're convinced you don't need \"the cloud\" because you\r\nmanage your own servers, amazing technologies like Private clouds\r\nand MaaS, for dynamic server management on bare metal, may change\r\nyour mind.\r\n\r\nFed up with the cloud hype? Let me rehabilitate the buzzword! (A bit\r\nanyway.)\r\n\r\nA fully automated cloud deployment system is essential for rapid\r\nscaling, but it's also invaluable for full stack testing on\r\ncontinuous integration systems. Even better, your service deployment\r\nand infrastructure can be managed with Python code? (Devops distilled)\r\n\r\nTreat your servers as cattle not as pets, for service oriented\r\nrepeatable deployments on your choice of back-end. Learn how service\r\norchestration is a powerful new approach to deployment management,\r\nand do it with Python! If any of this sounds interesting then Juju\r\nmaybe for you!\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Other Programming Languages",
        "Operating Systems",
        "DevOps",
        "DevOps"
      ],
      "emails": "fuzzyman@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/juju",
      "admin_type": "",
      "companies": "Canonical"
    },
    "627": {
      "abstract_short": "The BBC micro:bit is a small programmable device. It is being given, this year, to every 11 to 12-year-old child in the UK. One of the programming languages available for the micro:bit is Python. This poster will look at using Python, on the micro:bit, in informal learning environments. It is based on a six-month, in residence, project at a library.",
      "sub_title": "Introducing Python and the Internet of Things, to the next generation, through libraries and clubs.",
      "timerange": "2016-07-18 14:45:00, 2016-07-18 16:25:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@corinnewelsh",
      "id": 627,
      "speakers": "Corinne Welsh",
      "title": "Using Python on the BBC micro:bit in informal learning environments",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session",
      "tags": [
        "Education",
        "Teaching",
        "MicroPython",
        "Internet of Things (IoT)",
        "Community"
      ],
      "abstract_long": [
        "This year, in an aspirational project led by the BBC, every 11 to 12-year-old child in the UK  is being given a small programmable device. The BBC micro:bit has LEDs, input buttons, an accelerometer, a compass, input/output pins, power supply pins, and Bluetooth connectivity. It is supported by four different programming languages, one of which is Python.\r\n\r\nSchools are central in delivering the project: the micro:bits are being distributed, through schools, to Year 7 pupils. However, the vision of the micro:bit project is that the devices are given directly to children. They are owned by the children themselves to do with as they wish.\r\n\r\nI am involved in a six-month project based in a London borough library. The project's aim is to develop support to use Python, on the micro:bit, in the context of informal learning spaces. These include extra-curricular STEM clubs, libraries, and Saturday coding clubs.\r\n\r\nMy poster will be a reportage of the project. It will cover the challenges of introducing Python for the micro:bit and the benefits Python brings. I will also consider some wider issues, such as the role of gender, in the roll-out of the micro:bit."
      ],
      "abstract_extra": "I will bring a couple of micro:bits, with me, to accompany the poster presentation and discussion with a demonstration.",
      "tag_categories": [
        "Educational",
        "Everything Else",
        "Python",
        "Hardware",
        "Community"
      ],
      "emails": "corinne@lilycat.co.uk",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/using-python-on-the-bbc-microbit-in-informal-learning-environments",
      "admin_type": "",
      "companies": "JustOutsource.it"
    }
  },
  "helpdesk": {
    "731": {
      "abstract_short": "We'll try to help everybody, especially new comers in Python, to understand better the asynchronous pattern, and AsyncIO in general.\r\n\r\nDon't hesitate to ask us any question, especially if you think it's a stupid question: No stupid questions, only stupid answers.",
      "sub_title": "If you're curious to write code with AsyncIO but you don't know how to start or you have issues",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 12:00:00, 2016-07-18 14:15:00, 2016-07-18 17:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@GMLudo",
      "id": 731,
      "speakers": "Ludovic Gasc",
      "title": "AsyncIO support for new comers",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Python 3",
        "Databases",
        "Architecture",
        "APIs",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "We'll try to help everybody, especially new comers in Python, to understand better the asynchronous pattern, and AsyncIO in general.\r\n\r\nDon't hesitate to ask us any question, especially if you think it's a stupid question: No stupid questions, only stupid answers.\r\n\r\nExample of questions we'll try to answer, it's a compilation of questions we'll already received:\r\n\r\n- Where is the 101 of AsyncIO ?\r\n- When I can use AsyncIO ?\r\n- Why to add async/await keywords ? It's only aliases of @asyncio.coroutine/yield from ?\r\n- I don't understand the difference between a task and a coroutine, could you explain me ?\r\n- When I need to add await before a call function ?\r\n- How to spot quickly the code can be asynchronous with synchronous code ?\r\n- How I can use synchronous libraries in my asynchronous code ?\r\n- How to architecture my source code with AsyncIO ?\r\n- I don't understand the internals of AsyncIO with event loop and how yield from works internally. (Spoiler alert: To start to code with Python itself, did you understand before the CPython's internals ?)\r\n - Why another asynchronous network framework ? Need already covered by Twisted/Tornado/Gevent/...\r\n- Why some libraries need to be reimplemented, like aiohttp or aiopg ?\r\n- Now that Django channels exist, AsyncIO is useless, isn't it ?\r\n- What's the difference between AsyncIO and curio ?"
      ],
      "abstract_extra": "We'll try to be the most pedagogical as possible with some concrete examples of source code with a laptop.",
      "tag_categories": [
        "Python",
        "Databases",
        "Programming",
        "Web",
        "Programming"
      ],
      "emails": "gmludo@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/asyncio-support-for-new-comers",
      "admin_type": "",
      "companies": "Eyepea/ALLOcloud"
    },
    "721": {
      "abstract_short": "Helpdesk will help people to know more about code analysis tools that they should be using in their projects for better, clean code. The aim is to get people familiar with static code analysis tool and how to use coala to make linting and other analysis super easy in their projects.  ",
      "sub_title": "Our goal is to make code analysis easy while remaining completely modular, extensible and language i",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 12:00:00, 2016-07-20 14:00:00, 2016-07-20 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@karansharma1295",
      "id": 721,
      "speakers": "Karan Sharma",
      "title": "Code analysis made super easy.",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Beginners",
        "Clean Code",
        "Open-Source",
        "Static Analysis",
        "Python Software Foundation (PSF)"
      ],
      "abstract_long": [
        "The helpdesk will get the audience acquainted with code  analysis tools and how coala helps to make this whole process of static code analysis easier.  The goal of the helpdesk will be to get the user setup coala and demonstrate live on how to use it on projects etc, configure it, how to be able to customise it. coala helps to manage a lot of different tools together in one single configuration file. Also, as coala is an ever growing community of happy developers, I will assist them to get acquainted with how to contribute to coala and solve baby issues at Github to mark their first Open source contribution if they are interested in doing that. \r\n"
      ],
      "abstract_extra": "I've been contributing to coala since March 2016 and I am a Google Summer of Code student, working with them this year. \r\n\r\nMy code commits which have been accepted at upstream repo at coala are https://github.com/coala-analyzer/coala-bears/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Amr-karan+",
      "tag_categories": [
        "Educational",
        "Educational",
        "Open Source",
        "Everything Else",
        "Community"
      ],
      "emails": "karansharma1295@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/code-analysis-made-super-easy",
      "admin_type": "",
      "companies": "coala"
    },
    "668": {
      "abstract_short": "Chat with the core developers about how to extend django CMS, integrate your own apps seamlessly or brainstorm a hard-to-solve problem.",
      "sub_title": "Talk about your django CMS project with the core devs",
      "timerange": "2016-07-21 10:30:00, 2016-07-21 12:00:00, 2016-07-21 14:00:00, 2016-07-21 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@stefanfoulis",
      "id": 668,
      "speakers": "Stefan Foulis",
      "title": "django CMS",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Web General",
        "Django",
        "CMS"
      ],
      "abstract_long": [
        "Chat with the core developers about how to extend django CMS or how to integrate your own apps seamlessly. Lets talk about your plugins, apphooks, toolbar extensions, content-creation wizards, menu extensions or anything else django CMS related.\r\nWe can brainstorm a hard-to-solve problem you've encountered. Maybe you have the nagging feeling there ought to be simpler way to solve something you've done in a project. We're also happy to discuss feedback or ideas for something that could be added to django CMS.\r\nBring your code. Lets chat!"
      ],
      "abstract_extra": "My colleague  has also submitted a matching training which I'll be  part of: https://ep2016.europython.eu/conference/talks/application-integration-with-django-cms\r\n\r\nStefan Foulis' previous talk stuff:\r\n- various talks at local meetups in Z\u00fcrich, Switzerland\r\n- \"Local development with docker\" talk at DjangoCon 2015 (http://2015.djangocon.eu/talks/  https://vimeo.com/133154447 )\r\n- \"Advanced django CMS\" workshop at DjangoCon 2015 (http://2015.djangocon.eu/event/advanced-django-cms/)\r\n",
      "tag_categories": [
        "Web",
        "Application Frameworks",
        "Web"
      ],
      "emails": "stefan@foulis.ch",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/django-cms",
      "admin_type": "",
      "companies": "Divio"
    },
    "553": {
      "abstract_short": "Tips, best practices, health check and a general good workout for your documentation. There is both science, and art, to writing and maintaining good docs.  And, as your docs are your first point of contact for new community members, there is every reason to make it the best you can.\r\n\r\nWhile this helpdesk won't *write* docs for you,  we will give you a solid headstart in making them better. ",
      "sub_title": "A health-check and excercise session for your docs",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 12:00:00, 2016-07-18 14:15:00, 2016-07-18 15:45:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@polyester",
      "id": 553,
      "speakers": "Paul Roeland",
      "title": "DOCtors are in!",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Communication",
        "Teaching",
        "Documentation",
        "DevOps general",
        "Community"
      ],
      "abstract_long": [
        "There's a whole community, and a wealth of experience, that aim to bring the science, the art, and the fun of documentation to a higher level. Come learn some best practices on how to keep your docs maintainable, testable, deployable and up to date.\r\n\r\n\"Give me your tired, your poor,\r\nYour huddled docs yearning to breathe free,\r\nThe wretched refuse of your teeming shore.\r\nSend these, the homeless, tempest-tost to me,\r\nI lift my lamp beside the golden door!\""
      ],
      "abstract_extra": "We (Mikey Ariel, Maciej Szlosarczyk and me) held a similar session last year in Bilbao, which was well visited and fun to do.\r\n\r\nAs I'm traveling  I haven't had time to contact them to see if they had already submitted a Helpdesk proposal. So there may be a double proposal; just wanted to get it in before the deadline.",
      "tag_categories": [
        "Community",
        "Everything Else",
        "Programming",
        "DevOps",
        "Community"
      ],
      "emails": "paul.roeland@plone.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/doctors-are-in",
      "admin_type": "",
      "companies": "Plone"
    },
    "594": {
      "abstract_short": "Come ask me anything about Elasticsearch or associated technologies. We can talk design/use cases/integrations and/or try and debug your problems.",
      "sub_title": "Ask Me Anything about deploying/architecting/scaling",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 12:00:00, 2016-07-20 14:00:00, 2016-07-20 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@honzakral",
      "id": 594,
      "speakers": "Honza Kr\u00e1l",
      "title": "Elasticsearch and the Elastic Stack",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Debugging",
        "Architecture",
        "Best Practice",
        "Scaling",
        "Elastic Search"
      ],
      "abstract_long": [
        "Elasticsearch and other parts of the Elastic stac (beats, logstash and kibana) are becoming more popular for many different use cases - from pure search all the way to log storage and analysis.\r\n\r\nIn case you have any questions, problems or suggestions, come talk to me."
      ],
      "abstract_extra": "I have been working for the company behind elasticsearch for over three years, mostly developing the Python client but also doing support, training and consulting for our paying customers. I would love to help the members of the Python community to be successful when using elasticsearch.",
      "tag_categories": [
        "Testing",
        "Programming",
        "Best Practice and Use Cases",
        "DevOps",
        "Databases"
      ],
      "emails": "honza.kral@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/elasticsearch-and-the-elastic-stack",
      "admin_type": "",
      "companies": "Elastic"
    },
    "740": {
      "abstract_short": "> \u201cMake things as simple as possible, but not simpler.\u201d \u2014 Albert Einstein\r\n> \u201cPremature optimization is the root of all evil.\u201d \u2014 Donald E. Knuth\r\n\r\nWe've all heard that Python is slow and that we have to use a compiled language to get the maximum performance. While this is true to a certain extent, it is also true that we can work out certain bits of our Python code and gain some microseconds. Bring your code and let's try to make it as fast as possible together!",
      "sub_title": "Use profiling techniques and certain Python libraries to optimize your code",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 12:00:00, 2016-07-19 14:00:00, 2016-07-19 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@astrojuanlu",
      "id": 740,
      "speakers": "Juan Luis Cano",
      "title": "Make Python as fast as possible, but not faster",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Performance",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Code Analysis"
      ],
      "abstract_long": [
        "> \u201cMake things as simple as possible, but not simpler.\u201d \u2014 Albert Einstein\r\n> \u201cPremature optimization is the root of all evil.\u201d \u2014 Donald E. Knuth\r\n\r\nIt's often said that Python is necessarily slow and that we have to write the critical parts of our program in a compiled language to get the maximum performance. While this is true to a certain extent, it is also true that we can work out certain bits of our Python code and gain some microseconds, leaving the rewriting of our program in C++ or Fortran as a last resource.\r\n\r\nBring your slow Python algorithm and we will use profiling, memory profiling, numba and a bit of common sense to try and make it run as fast as possible! Sometimes we will be able to make some suggestions of new algorithms or architectures, other times we will be able to spot the single line that consumes 90 % of our running time, but either way we will both learn about software performance a lot.\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Data Science",
        "Programming"
      ],
      "emails": "juanlu001@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/make-python-as-fast-as-possible-but-not-faster",
      "admin_type": "",
      "companies": "Indizen"
    },
    "514": {
      "abstract_short": "Design or usage questions of mongoDB from python ? Come over and ask !",
      "sub_title": "Use cases and pymongo helpdesk",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 12:00:00, 2016-07-19 14:00:00, 2016-07-19 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@ultrabug",
      "id": 514,
      "speakers": "Alexys Jacob",
      "title": "Python and mongoDB",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "NoSQL",
        "Use Case",
        "MongoDB",
        "Best Practice"
      ],
      "abstract_long": [
        "The Numberly DevOps team members will help and share their experience in using mongoDB on python applications.\r\n\r\nCome with your code or design questions and we'll do our best to help you find the best answers and test them live !\r\n\r\n_The Numberly team has been running mongoDB in production for more than 5 years now and used it on various use cases, from simple web applications to real time analytics serving thousands transactions per second._\r\n\r\n"
      ],
      "abstract_extra": "This is not a personal proposal but a team one from Numberly, at least 2 of us will be made available for this helpdesk (myself not included).",
      "tag_categories": [
        "Databases",
        "Best Practice and Use Cases",
        "Databases",
        "Best Practice and Use Cases"
      ],
      "emails": "ultrabug@ultrabug.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/python-and-mongodb",
      "admin_type": "",
      "companies": "Numberly"
    },
    "416": {
      "abstract_short": "I",
      "sub_title": "YAML libraries are not always the most developer friendly, stop by if you have any questions.",
      "timerange": "2016-07-22 10:30:00, 2016-07-22 12:00:00, 2016-07-22 14:00:00, 2016-07-22 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 416,
      "speakers": "Anthon van der Neut",
      "title": "YAML is one of the more human friendly data serialisation formats",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Data",
        "Structures"
      ],
      "abstract_long": [
        "There are several human parsable data serialisation possibilities but there are only a handful that are human friendly. Arbitrarily human friendly means that:\r\n - you can include comments in your format to explain things to other readers\r\n - it means what you think that it means\r\n - no need to quote things that are clear without\r\n - visual nesting through indentation, not through lisp like ( (( (()()))) or <abc> </abc>\r\n- easy to edit without breaking things (trailing comma's anyone).\r\n\r\nYAML supports most of the above,  but the \"standard\" YAML library would \r\n- rearrange mapping (dictionary) entries on dumping making comparison using diff difficult\r\n- drop comments when reading data to YAML, so dumping leads to data loss for humans\r\n- was not updated for YAML 1.2 published in 2009\r\nby upgrading the standard library to deal with these issues in the increasingly often used  ruamel.yaml round-trip library, in-dept knowledge was built up both on how to effectively use YAML as well on how to do some unplanned for things in YAML. \r\nPlease stop by with any questions you have beginner, or advanced on how to make the use of YAML in you project not only more human-friendly, but also more developer friendly. \r\n(You're also welcome if you don't understand how someone can like to work with JSON)\r\n\r\n"
      ],
      "abstract_extra": "I have professionally supported many developers that worked (in)directly for me or for other departments in the organisation I was employed.\r\n\r\nI like helping out people and online I do so both on StackOverflow (primarily\r\nanswering [YAML related questions][1], on [Unix&Linux][2] and [Ebooks][3] StackExchange\r\n\r\n  [1]: http://stackoverflow.com/search?q=user%3A1307905+[yaml]+is%3Aanswer\r\n  [2]: http://unix.stackexchange.com/users?tab=Reputation&filter=all\r\n  [3]: http://ebooks.stackexchange.com/users?tab=Reputation&filter=all\r\n",
      "tag_categories": [
        "",
        ""
      ],
      "emails": "a.van.der.neut@ruamel.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/yaml-is-one-of-the-more-human-friendly-data-serialisation-format",
      "admin_type": "",
      "companies": "RUAMEL bvba"
    }
  },
  "interactive": {
    "572": {
      "abstract_short": "Technical debt lives among us regardless if we are in the services business or building products. \r\nWe discuss about it, we try to fix it or live with it, but can we actually prevent it? \r\nMy reason for discussing this openly is because once it is there you do not only deal with the technical debt itself but also with the interest you must pay.\r\nWhat qualifies as debt? What qualifies as interest? How do we manage it? Is it really unavoidable?",
      "sub_title": "",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 15:15:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@mircea_zetea",
      "id": 572,
      "speakers": "Mircea Zetea",
      "title": "Managing technical debt",
      "have_tickets": [
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Management",
        "Best Practice",
        "Business Track"
      ],
      "abstract_long": [
        "Technical debt lives among us regardless if we are in the services business or building products. \r\nWe discuss about it, we try to fix it or live with it, but can we actually prevent it? \r\nMy reason for discussing this openly is because once it is there you do not only deal with the technical debt itself but also with the interest you must pay.\r\nMy reason for discussing this openly is because once it is there you do not only deal with the technical debt itself but also with the interest you must pay. Comparing the two, probably the highest cost that we see is with the interest.\r\n As our code base grows and our deadlines get tougher we tend to forget about the cost our project will have to pay for every functionality that we implement in a hurry, for which we \u201cforget\u201d about tests or for which we write in a comment \u201cthis needs to be refactored\u201d or \u201cthis is a temporary solution. refactor later\u201d.\r\nWhat qualifies as debt? What qualifies as interest? How do we manage it? At what levels in our projects can we see the debt and the interest? Is it really unavoidable?  "
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Development Methods",
        "Best Practice and Use Cases",
        ">>> Suggested Track"
      ],
      "emails": "mircea@zetea.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/managing-technical-debt",
      "admin_type": "",
      "companies": "Spyhce"
    },
    "510": {
      "abstract_short": "Sharing our worst production experiences and the tricks, good practices and code we developed to address them.",
      "sub_title": "Let's share our worst experiences and tricks we used to avoid them",
      "timerange": "2016-07-21 15:45:00, 2016-07-21 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@ultrabug, @r4mnes",
      "id": 510,
      "speakers": "Alexys Jacob, Guillaume Gelin",
      "title": "Planning for the worst",
      "have_tickets": [
        true,
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "The Answer to Life the Universe and Everything Else",
        "Use Case",
        "Best Practice",
        "Mind Bending",
        "failures/mistakes"
      ],
      "abstract_long": [
        "This talk is about sharing our experience about how we handled production problems on all levels of our applications.\r\n\r\nWe'll begin with common problems, errors and failures and dig on to more obscure ones while sharing concrete tips, good practices and code to address them !\r\n\r\nThis talk will make you feel the warmth of not being alone facing a problem :)",
        "",
        "",
        ""
      ],
      "abstract_extra": "Can also be a \"standard\" talk, I just wanted to try the idea of having it more interactive with the audience because a lot of people can relate to quick a lot of problems.\r\n\r\nThere will be slides to guide the conversation but it will be open to everyone to share their experience.",
      "tag_categories": [
        "Everything Else",
        "Best Practice and Use Cases",
        "Best Practice and Use Cases",
        "Everything Else",
        "Best Practice and Use Cases"
      ],
      "emails": "ultrabug@ultrabug.net, ramnes@1000mercis.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/planning-for-the-worst",
      "admin_type": "",
      "companies": "Numberly"
    },
    "712": {
      "abstract_short": "First we will talk about coding interviews: How to prepare and\r\nwhat to expect.  Then, we will cover software engineering resumes, typical coding\r\nquestions and tasks that companies usually give to candidates.\r\n\r\nWe end with a discussion on long-term career paths\r\nof software engineers. The hypothesis is that true engineering careers\r\nexist at maybe Google but normal firms unfortunately only allow growth by\r\nforcing engineers into management.",
      "sub_title": "Going from junior to senior and from interviewee to interviewer",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@",
      "id": 712,
      "speakers": "Iwan Gulenko",
      "title": "Programming interviews and careers",
      "have_tickets": [
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "General",
        "Use Case",
        "Business",
        "Best Practice",
        "failures/mistakes"
      ],
      "abstract_long": [
        "First we will talk about coding interviews: How to prepare and\r\nwhat to expect.  Then, we will cover software engineering resumes, typical coding\r\nquestions and tasks that companies usually give to candidates.\r\n\r\nWe end with a discussion on long-term career paths\r\nof software engineers. The hypothesis is that true engineering careers\r\nexist at maybe Google but normal firms unfortunately only allow growth by\r\nforcing engineers into management."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "",
        "Best Practice and Use Cases",
        "",
        "Best Practice and Use Cases",
        "Best Practice and Use Cases"
      ],
      "emails": "iwan@gulenko.ch",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/coding-interviews-what-to-expect-and-how-to-prepare",
      "admin_type": "",
      "companies": ""
    },
    "697": {
      "abstract_short": "EuroPython Meeting of the Python Software Foundation\r\n\r\nMembers and non-members are invited to this EuroPython meeting of the PSF! Please join us for some updates from the PSF board.",
      "sub_title": "",
      "timerange": "2016-07-20 15:45:00, 2016-07-20 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@NaomiCeder",
      "id": 697,
      "speakers": "Naomi Ceder",
      "title": "PSF Meeting",
      "have_tickets": [
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Conferences and Meet-Ups",
        "Python Software Foundation (PSF)",
        "Community"
      ],
      "abstract_long": [
        "EuroPython Meeting of the Python Software Foundation\r\n\r\nMembers and non-members are invited to this EuroPython meeting of the PSF! Please join us for some updates from the PSF board.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Community",
        "Community",
        "Community"
      ],
      "emails": "naomi.ceder@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/psf-meeting-2016",
      "admin_type": "",
      "companies": "Trans*Code"
    },
    "639": {
      "abstract_short": "This interactive game teaches the basic of ip and ethernet protocol using just paper and pens, and become very popular with our interns and in our LUG meetings. \r\n\r\nParticipants are divided in teams, simulating simple network infrastructures (eg. computers connected by an hub and a switch).\r\n",
      "sub_title": "Learn IP protocol basics with an interactive game.",
      "timerange": "2016-07-18 16:00:00, 2016-07-18 17:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@ioggstream",
      "id": 639,
      "speakers": "Roberto Polli",
      "title": "The Router Game",
      "have_tickets": [
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Internet of Things (IoT)"
      ],
      "abstract_long": [
        "This interactive game teaches the basic of ip and ethernet protocol using just paper and pens, and become very popular with our interns and LUG meetings. \r\n\r\nParticipants are divided in teams, simulating simple network infrastructures (eg. computers connected by an hub and a switch).\r\n\r\nEvery player has a role:  a PC or mobile phone, an HUB, a Switch, a Router, and must communicate with the others following the associate specification (eg. an hub should broadcast message to every neighbour, a switch should populate the mac address table, ...)\r\n\r\nThe team which is faster in exchanging messages  wins.\r\n\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Hardware"
      ],
      "emails": "robipolli@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/the-router-game",
      "admin_type": "",
      "companies": "Par-Tec Spa"
    }
  },
  "talk": {
    "729": {
      "abstract_short": "Creating 3D model for 3D printing is pretty hard for non 3D CG designer or non 3D CAD engineer. But recently, so many 3D software (like Maya,  Blender, Fusion360 and so on) provides Python API to manipulate 3D data in those software. So in this session,  I will introduce Python API of Blender  and Autodesk Fusion 360 and share some basic knowledge and tips when you use these API. I will also introduce my past projects with those APIs.",
      "sub_title": "Generate 3D model for 3D printing using Python API proveded by 3D softwares",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@taxpon",
      "id": 729,
      "speakers": "Takuro Wada",
      "title": "3D Modeling and Printing by Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Developing with Python",
        "3D",
        "Blender"
      ],
      "abstract_long": [
        "### Abstract\r\n\r\n- Creating 3D model for 3D printing is pretty hard for **non 3D CG designer or non 3D CAD \r\nengineer**.\r\n\r\n- Recently, so many 3D software (like Maya,  Blender, Fusion360 and so on) provides Python API to manipulate 3D data in those software. Once you learn these Python API, you can generate 3D model by Python  and 3D print those generated model.\r\n\r\n- In this session,  I will introduce Python API of some softwares and share some basic knowledges and tips when you use these API. I will also introduce my past projects with those APIs and my products.\r\n\r\n![][1]\r\n\r\n### Goal\r\n- Introduce 3D model generation and 3D printing with Python to audience\r\n\r\n### After this session, you will\r\n- Acquire the basic knowledge of 3D data structure\r\n- Understand basic concepts of Python API provided by 3D softwares\r\n- Acquire knowledge to start your 3D model generation project by Python\r\n- Know past 3D model generation projects by Python\r\n\r\n### Prerequisite\r\n- Basic knowledge of Python\r\n- Interests for 3D modeling and 3D printing by Python\r\n\r\n  [1]: http://takuro.ws/img/euro_python.jpg\r\n"
      ],
      "abstract_extra": "### Blog articles about 3D manipulation by Python\r\n- Articles about 3D modeling for 3D printing by Python (only Japanese)\r\n    - [https://www.rinkak.com/jp/blog/blender-python-modeling-1][1]\r\n    - [https://www.rinkak.com/jp/blog/blender-python-modeling-2][2]\r\n    - [https://www.rinkak.com/jp/blog/blender-python-modeling-3][3]\r\n    - [https://www.rinkak.com/jp/blog/blender-python-modeling-4][4]\r\n    - [https://www.rinkak.com/jp/blog/blender-python-modeling-5][5]\r\n    - Sample codes\r\n        - [https://github.com/kabuku/blender-python][6]\r\n\r\n- 3D model and Minecraft (only Japanese)\r\n    - [http://www.kabuku.co.jp/developers/blender2minecraft-by-python][7]\r\n    - Source code\r\n        - [https://github.com/taxpon/b2mine][8]\r\n\r\n### Created library to manipulate 3D model\r\n- [Pymesh][9]\r\n- [Openpyscad][10]\r\n\r\n### Presentation Slides\r\n- Past talks\r\n    - [http://www.slideshare.net/TakuroWada/3d-modeling-by-python-scripts][11]\r\n    - [http://www.slideshare.net/TakuroWada/3d-printing-by-python-scripts-and-blender-54557221][12]\r\n\r\n  [1]: https://www.rinkak.com/jp/blog/blender-python-modeling-1\r\n  [2]: https://www.rinkak.com/jp/blog/blender-python-modeling-2\r\n  [3]: https://www.rinkak.com/jp/blog/blender-python-modeling-3\r\n  [4]: https://www.rinkak.com/jp/blog/blender-python-modeling-4\r\n  [5]: https://www.rinkak.com/jp/blog/blender-python-modeling-5\r\n  [6]: https://github.com/kabuku/blender-python\r\n  [7]: http://www.kabuku.co.jp/developers/blender2minecraft-by-python\r\n  [8]: https://github.com/taxpon/b2mine\r\n  [9]: https://github.com/taxpon/pymesh\r\n  [10]: https://github.com/taxpon/openpyscad\r\n  [11]: http://www.slideshare.net/TakuroWada/3d-modeling-by-python-scripts\r\n  [12]: http://www.slideshare.net/TakuroWada/3d-printing-by-python-scripts-and-blender-54557221",
      "tag_categories": [
        ">>> Suggested Track",
        "Everything Else",
        "Everything Else"
      ],
      "emails": "taxpon@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/3d-modeling-and-printing-by-python",
      "admin_type": "",
      "companies": "Kabuku Inc."
    },
    "509": {
      "abstract_short": "The Pymongo driver is one of MongoDB\u2019s most popular driver interfaces for\r\nconnecting to MongoDB. But developers rarely look under the cover to see\r\nwhat\u2019s happening inside the driver.\r\nBy having a deeper insight into how the driver constructs server requests\r\nand responds, developers will be able to write more effective MongoDB\r\napplications in Python.",
      "sub_title": "What work does the driver do before sending requests to the MongoDB server",
      "timerange": "2016-07-21 15:45:00, 2016-07-21 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@jdrumgoole",
      "id": 509,
      "speakers": "Joe Drumgoole",
      "title": "A deep dive into the Pymongo MongoDB driver",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Educational Track",
        "MongoDB",
        "Open-Source"
      ],
      "abstract_long": [
        "*The Pymongo driver is one of MongoDB\u2019s most popular driver interfaces for\r\nconnecting to MongoDB. But developers rarely look under the cover to see\r\nwhat\u2019s happening inside the driver. *\r\n\r\n*By having a deeper insight into how the driver constructs server requests\r\nand responds, developers will be able to write more effective MongoDB\r\napplications in Python.*\r\n\r\n*We will look at :*\r\n\r\n-\r\n\r\n*Initial connection*\r\n-\r\n\r\n*A query*\r\n-\r\n\r\n*A simple write operation*\r\n-\r\n\r\n*A bulk write operation*\r\n-\r\n\r\n*How the driver responds when we have a node failure*\r\n\r\n*We will also give insight into the driver\u2019s approach to server selection\r\nwhen connecting to a replicas set (a multi-node instance of MongoDB).*",
        "",
        "",
        ""
      ],
      "abstract_extra": "I've been  doing public presentations for over twenty years. I'm a regular speaker at MongoDB technical events .\r\n\r\n",
      "tag_categories": [
        ">>> Suggested Track",
        "Databases",
        "Open Source"
      ],
      "emails": "joe.drumgoole@10gen.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/a-deep-dive-into-the-pymongo-mongodb-driver",
      "admin_type": "",
      "companies": "MongoDB"
    },
    "409": {
      "abstract_short": "A gentle introduction to neural networks, and making your own with Python.\r\n\r\nThis session is deliberately designed to be accessible to everyone, including anyone with no expertise in mathematics, computer science or Python.\r\n\r\nFrom this session you will have an intuitive understanding of what neural networks are and how they work. If you are more technically capable, you will see how you could make your own with Python and numpy.",
      "sub_title": "Gain an understanding of the ideas behind simple neural networks, and make your own with Python.",
      "timerange": "2016-07-22 10:30:00, 2016-07-22 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@postenterprise",
      "id": 409,
      "speakers": "Tariq Rashid",
      "title": "A Gentle Introduction to Neural Networks (with Python)",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1 [PyData Track]",
      "tags": [
        "Python 3",
        "Beginners",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Algorithms",
        "Machine-Learning"
      ],
      "abstract_long": [
        "A gentle introduction to neural networks, and making your own with Python.\r\n\r\nThis session is deliberately designed to be accessible to everyone, including anyone with no expertise in mathematics, computer science or Python.\r\n\r\nFrom this session you will have an intuitive understanding of what neural networks are and how they work. If you are more technically capable, you will see how you could make your own with Python and numpy.\r\n\r\nPart 1 - Ideas:\r\n - the search for AI, hard problems for computers easy fro humans\r\n - learning from examples (simple classifier)\r\n - biologically inspired neurons and networks\r\n - training a neural network - the back propagation breakthrough\r\n - matrix ways of working (good for computers)\r\n\r\nPart 2 - Python:\r\n - Python is easy, and everywhere\r\n - Python notebooks\r\n - the MNIST data set\r\n - a very simple neural network class\r\n - focus on concise and efficient matrix calculations with bumpy\r\n - 97.5% accuracy recognising handwritten numbers - with just a few lines of code!\r\n\r\nPart 3 - Q&A\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "The core reason for my proposal is to open access to interesting ideas to as many people as possible - especially those with no technical background, and no university level expertise in maths or computer science.\r\n\r\nI seem to have a talent for this - and enjoy this immensely. \r\n\r\nI have started teaching Python in London (eg Meetups) for complete beginners, and they are well received and over subscribed. \r\n\r\nI have a book published, introducing complete beginners or students of approx age 15, to fractals using complex numbers, and introducing them to Python to make their own. The book is well reviewed and sells approx 3 a week, and was serialised in Linux Voice magazine.\r\nhttp://www.amazon.com/dp/B00JFIEC2A\r\nhttp://makeyourownmandelbrot.blogspot.com\r\n\r\nMy latest book (almost published) applies the same idea of making complex and sometimes scary concepts accessible and easy to as many people as possible. \r\nhttp://makeyourownneuralnetwork.blogspot.co.uk\r\n\r\nQualifications? Why should anyone believe me?\r\nI have a degree in Physics from Cambridge University, and a second Masters degree in Machine Leaning and Data Mining.\r\nI have worked in tech in some serious organisations like civil nuclear, international finance and media, and most recently in the UK government. If you search google, you'll find talks on open source, digital and security reform by myself - eg http://www.embecosm.com/2015/11/17/how-to-start-your-own-open-source-business/",
      "tag_categories": [
        "Python",
        "Educational",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "tariq.rashid50@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/a-gentle-introduction-to-neural-networks-with-python",
      "admin_type": "",
      "companies": "Digital Dynamics"
    },
    "561": {
      "abstract_short": "At the LEAP Encryption Access Project we aim to make secure communications both easy to use and easy to provide.\r\n\r\nWe bring some tales (and some, hopefully, tools) from the quest for user-friendly crypto software. How to make people love the email experience in the 21st century, without risking their privacy. How to encrypt data locally, sync it to servers that you can lose, and still be sexy.",
      "sub_title": "tales and tools for applications that need encrypted, synchronized data, with minimal-trust servers",
      "timerange": "2016-07-20 11:15:00, 2016-07-20 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 561,
      "speakers": "Kali Kaneko",
      "title": "Against the silos: usable encrypted email & the quest for privacy-aware services",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Fun and Humor",
        "clients",
        "Distributed Systems",
        "Cryptography",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Technologies that allow for privacy in the communications, allowing the escape from the pervasive massive surveillance, have been there for some years now, but yet its use by the general public is far from widespread. The challenge, in our view, can be defined by one of making usable crypto. Usable for the end user, usable for the sysadmin and for the fellow application developer. In the quest for massive adoption of encryption technologies, we've been forging several python packages to solve different problems, always standing in the shoulders of giants. \r\nWe bring some tales from the trenches to share, from our humble experience trying to deploy clients and servers to provide Secured Encrypted Internet Tunnels and Encrypted Email. This includes interesting challenges dealing with key management, automatic and secure software updates, and processing of email while using stock cloud providers, while still being resistant to hostile environments.\r\nWe'll show a webmail email user agent based on this architecture, a promising future for decentralization and privacy.\r\nWe'll also talk about how to store locally encrypted data, and will present Soledad (Synchronization of Locally Encrypted Data Across Devices). Soledad is a library with server and client components that allows the development of different applications based on client-side, end-to-end and cloud-syncable encryption of private data. We'll play with some toy apps to showcase its features and potential."
      ],
      "abstract_extra": "https://github.com/leapcode/\r\nhttps://leap.se/docs/\r\nsome previous presentations at (random order):\r\nHOPE, IFF, hackmeeting, squatconf",
      "tag_categories": [
        "Everything Else",
        "Business",
        "DevOps",
        "Security",
        "Programming"
      ],
      "emails": "bennomadic@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/against-the-silos-usable-encrypted-email-the-quest-for-privacy-aware-services",
      "admin_type": "",
      "companies": "LEAP Encrypted Access Project"
    },
    "715": {
      "abstract_short": "This is a look behind the scenes at Winton Capital Management- one of Europe\u2019s most successful systematic investment managers. The talk will mainly focus on how Python gives researchers fine-grained control over the data and trading systems, without requiring them to interact directly with the underlying, highly-optimised technology.",
      "sub_title": "",
      "timerange": "2016-07-21 14:30:00, 2016-07-21 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@, @",
      "id": 715,
      "speakers": "iztok kucan, Joris Peeters",
      "title": "Algorithmic Trading with Python",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Algorithms"
      ],
      "abstract_long": [
        "Have you ever wondered what technologies are used in a systematic trading system that utilises computer models and accounts for the majority of trading on the stock market? This is a look behind the scenes at Winton Capital Management- one of Europe\u2019s most successful systematic investment managers. In this talk, we\u2019ll run through an overview of Winton\u2019s trading infrastructure, including data management, signal generation and execution of orders on global exchanges. The talk will mainly focus on how Python gives researchers fine-grained control over the data and trading systems, without requiring them to interact directly with the underlying, highly-optimised technology.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science"
      ],
      "emails": "i.kucan@wintoncapital.com, j.peeters@wintoncapital.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/algorithmic-trading-with-python",
      "admin_type": "",
      "companies": ""
    },
    "584": {
      "abstract_short": "Deep learning: how it works, how to train a deep neural network, the theory behind deep learning, recent developments and applications.",
      "sub_title": "",
      "timerange": "2016-07-22 11:15:00, 2016-07-22 12:15:00",
      "sub_community": "pydata",
      "duration": 60,
      "twitters": "@Brittix1023",
      "id": 584,
      "speakers": "Geoff French",
      "title": "An Introduction to Deep Learning",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "A1 [PyData Track]",
      "tags": [
        "Deep Learning",
        "Science Track",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "In the last few years, deep neural networks have been used to generate state of the art results in image classification, segmentation and object detection. They have also successfully been used for speech recognition and textual analysis. In this talk, I will give an introduction to deep neural networks. I will cover how they work, how they are trained, and a little bit on how to get going. I will briefly discuss some of the recent exciting and amusing applications of deep learning. The talk will primarily focus on image processing."
      ],
      "abstract_extra": "I have given this talk previously at PyData London and at the Cambridge Python User Group where it was well received:\r\nSlides are here:\r\nhttps://speakerdeck.com/britefury/introduction-to-deep-learning-cambridge-python-user-group\r\n",
      "tag_categories": [
        "Data Science",
        ">>> Suggested Track",
        "Data Science",
        "Data Science"
      ],
      "emails": "britefury@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/an-introduction-to-deep-learning",
      "admin_type": "",
      "companies": ""
    },
    "670": {
      "abstract_short": "Docker is a powerful tool for packaging software and services in containers and running them on a virtual infrastructure. Python is a very powerful language for data analysis. What happens if we combine the two? We get a very versatile and robust system for analyzing data at small and large scale!\r\n\r\nI will show how we can make use of Python and Docker to build repeatable, robust data analysis workflows which can be used in many different contexts (possibly with a live demo).",
      "sub_title": "Creating reproducible and robust data analysis workflows with containers",
      "timerange": "2016-07-21 10:30:00, 2016-07-21 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@japh44",
      "id": 670,
      "speakers": "Andreas Dewes",
      "title": "Analyzing Data with Python & Docker",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Deployment/Continuous Integration and Delivery",
        "Docker",
        "Data Science"
      ],
      "abstract_long": [
        "Docker is a powerful tool for packaging software and services in containers and running them on a virtual infrastructure. Python is a very powerful language for data analysis. What happens if we combine the two? We get a very versatile and robust system for analyzing data at small and large scale!\r\n\r\nI will show how we can make use of Python and Docker to build repeatable, robust data analysis workflows that can be used in many different contexts. I will explain the core ideas behind Docker and show how they can be useful in data analysis. I will then discuss an open-source Python library (Rouster) which uses the Python Docker-API to analyze data in containers and show several interesting use cases (possibly even a live-demo).\r\n\r\nOutline:\r\n\r\n1. Why data analysis can be frustrating: Managing software, dependencies, data versions, workflows\r\n2. How Docker can help us to make data analysis easier & more reproducible\r\n3. Introducing Rouster: Building data analysis workflows with Python and Docker\r\n4. Examples of data analysis workflows: Business Intelligence, Scientific Data Analysis, Interactive Exploration of Data\r\n5. Future Directions & Outlook"
      ],
      "abstract_extra": "This is a technical talk about data analysis & Python intended for the PyData conference. I have started using Docker and Python for data analysis recently and I think the topic could be very interesting to the Python & data analysis community. I also work on an open-source library for data analysis using Python & Docker called *Rouster* (http://rouster.7scientists.com), which makes it very easy to build data analysis workflows with Python and Docker. I want to use the talk to introduce the tool to a wider audience and get feedback and ideas for the further development (currently the tool is still in its alpha stage).\r\n\r\n",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "Data Science"
      ],
      "emails": "andreas.dewes@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/analyzing-data-with-python-docker",
      "admin_type": "",
      "companies": "7scientists UG"
    },
    "585": {
      "abstract_short": "Many of us have been taught to code, but we know that software engineering jobs are so much more than that.\r\nProgrammers can spend 5-6 hours per week on code review, but doing that is almost ignored as a skill.\r\nHow many of us have seen poor reviews, which don't catch bugs, make people feel bad or block important features being merged?\r\nAn introduction to what code review is alongside guidelines, tips, tricks and anecdotes to help make your code reviews be as productive as possible.",
      "sub_title": "Improve your code and your team by reviewing code (well)",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@adamdangoor",
      "id": 585,
      "speakers": "Adam Dangoor",
      "title": "Another pair of eyes: Reviewing code well",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Clean Code",
        "Tooling",
        "Best Practice",
        "Development"
      ],
      "abstract_long": [
        "Many of us have been taught to code, but we know that software engineering is so much more than that. Programmers can spend 5-6 hours per week on code review, but doing that is almost ignored as a skill, and instead it is often treated as a rote chore.\r\n\r\nHow many of us have seen poor reviews - those which upset people, don't catch bugs or block important features being merged? This talk explores the social and technical impacts of various code review practices as well as helpful tooling. The goal is to provide a structure to help improve how teams review code, and to introduce the costs and benefits of code review to anyone unfamiliar with the practice.\r\n\r\nThere are always trade-offs to be made - e.g. think how costly a security flaw in this code could be to your organisation - perhaps intense scrutiny is not necessary for prototypes soon to be thrown away. It is useful to consider the  trade-offs in order to optimise for a particular problem domain. Perhaps right now it is more important to look for issues with maintainability, functionality or performance.\r\n\r\nI talk about how some fantastic code reviews from mentors, colleagues and strangers have helped me become a better programmer and team member, as well as occasions where code review has been detrimental by slowing things down and causing arguments.\r\n\r\nThis is aimed at everyone from beginner to advanced programmers."
      ],
      "abstract_extra": "I gave my first conference talk last year at Write the Docs Prague - I was nervous but it went down well. The video is at https://www.youtube.com/watch?v=PoVwyPipHzc. The talk was on the topic of how to keep instructions in software documentation working as the code changes.",
      "tag_categories": [
        "Educational",
        "Programming",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "adamdangoor@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/another-pair-of-eyes-reviewing-code-well",
      "admin_type": "",
      "companies": ""
    },
    "562": {
      "abstract_short": "In this talk we show how the Go language helped us get a high performance in a concise and simple API. Everything will be exemplified using the backdrop of a real case of Globo.com: API registrations. We will see how we went from 200 to 19,000 records per second to the impacts of this rapid growth and the consequences of Go of use. We also show how our microservices architecture was used in the project.",
      "sub_title": "",
      "timerange": "2016-07-19 15:45:00, 2016-07-19 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@ViniciusPach",
      "id": 562,
      "speakers": "Vinicius Pacheco",
      "title": "APIs and Microservices With Go",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Architecture",
        "Go-Lang",
        "Microservices"
      ],
      "abstract_long": [
        "This talk is about Go, software architecture and parallelism. How we went from legacy, complex and slow software to new, speed, resilient and maintainable software.\r\nI'll start the talk showing the problemas and the challenges that my team had received. After that, I'll show the tests, tests of performance and the options that we did considering technologies and strategies of development. The difficulties and problems also will be show. Also I talk about:\r\n\r\n- Goroutines\r\n- Resilient patterns\r\n- Go tools\r\n- Architecture\r\n- Web performance\r\n\r\nHow we leave of the Java ecosystem to new free ecosystem with microservices and how Go help us."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Other Programming Languages",
        "Programming"
      ],
      "emails": "vfpweb@gmail.com",
      "language": "Spanish",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/apis-and-microservices-with-go",
      "admin_type": "",
      "companies": "globo.com"
    },
    "547": {
      "abstract_short": "async/await is here, everybody can use it in Python 3.5.  It's great and awesome, yet only a few understand it.  As a PEP 492 author, I'd really like to have a chance to better explain the topic, show why async/await is important and how it will affect Python. I'll also tell a story on how I worked on the PEP -- starting from an idea that I discussed with Guido on PyCon US 2015, and landing to CPython source code one and a half moths later!",
      "sub_title": "What and why is async/await in Python, and where it's headed",
      "timerange": "2016-07-21 12:00:00, 2016-07-21 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@1st1",
      "id": 547,
      "speakers": "Yury Selivanov",
      "title": "async/await in Python 3.5 and why it is awesome",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Python 3",
        "Educational Track",
        "Architecture",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "The talk will start with a brief coverage of the story of asynchronous programming in Python -- Twisted, Tornado, Stackless Python & greenlets, eventlet, Tornado, asyncio & curio.  We've come a really long road, and it's important to understand how we ended up with async/await.\r\n\r\nThen I'll go over asyncio and curio, showing async/await by example, explaining that in reality it's a very easy to use language feature.  You don't need to know all the details to be able to successfully use the new syntax, and even build new frameworks on top of it.\r\n\r\nI'll then explain the async/await machinery in CPython, starting with generators and 'yield' expression, showing what is 'yield from' and finally, demonstrating how async/await is implemented in CPython.  This will ensure that those who want to invent some new crazy ways of using async/await will have a starting point!\r\n\r\nI'll end the talk with a story of how I came up with the idea.  How I shared it with Guido van Rossum, Victor Stinner, and Andrew Svetlow.  How the first version of the PEP was born, and how we managed to push it to Python 3.5 in under two months period.  The goal is to make people understand that it's possible to change your programming language -- in fact, Python, as any other programming language, wants new features and capabilities to be relevant."
      ],
      "abstract_extra": "I'm the author and implementor of PEP 492 -- async/await syntax in Python 3.5.  I'm also working on a new PEP to add asynchronous generators in CPython 3.6.  If it's accepted before the EuroPython (there chances are high!) I'll have a unique opportunity to be the first one to present it to the EuroPython crowd!",
      "tag_categories": [
        "Python",
        ">>> Suggested Track",
        "Programming",
        "Programming"
      ],
      "emails": "yury@magic.io",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/asyncawait-in-python-35-an-why-it-is-awesome",
      "admin_type": "",
      "companies": "MagicStack"
    },
    "687": {
      "abstract_short": "Introducing  asynchronous calls from within an endpoint in a web app can be desirable but hard to achieve.\r\nThis talk will explore different solutions for this (running Twisted event loop, Co-Routines, Asyncio, \u2026) and how well they play with the different parallelization models of common WSGI web servers.",
      "sub_title": "",
      "timerange": "2016-07-21 10:30:00, 2016-07-21 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@laucia_julljen",
      "id": 687,
      "speakers": "Lauris Jullien",
      "title": "Asynchronous network requests in a web application",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Performance",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "In the more and more popular SOA paradigm, it\u2019s common for services to have to compose responses with resources from many different services. Everyone\u2019s first idea will probably be to call each service synchronously with your favorite python HTTP library. This unfortunately doesn\u2019t scale well and tens of successive network calls will make your endpoints painfully slow. \r\n\r\nOne solution is to parallelize these network calls. If you are already using an asynchronous web app (such as Tornado or Twisted), more asynchronous in your asynchronous shouldn\u2019t be much of a challenge. But if you chose not to dive into the madness of chained Deferred calls, and used a standard prefork/threaded WSGI web server (such as Gunicorn or uWSGI) to run your Django/Flask/Pyramid application, you might find yourself wondering how to manage these asynchronous calls.\r\n\r\nThis talk will explore different solutions (running Twisted event loop, Co-Routines, Asyncio, \u2026) and how well they play with the different parallelization models of WSGI web servers."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Web",
        "Programming"
      ],
      "emails": "lauris@yelp.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/asynchronous-network-requests-in-a-web-application",
      "admin_type": "",
      "companies": "Yelp"
    },
    "467": {
      "abstract_short": "At Ableton we love music and we love open-source. Ansible is an amazing tool which allows us to free more time for music by automating boring and repetitive tasks, and to contribute back to the open-source community with ease. Here's an opportunity to share our love for it, our experience with it, and our contributions to it with you. ",
      "sub_title": "Automate everything and contribute back to the community with ansible",
      "timerange": "2016-07-19 12:00:00, 2016-07-19 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@oleiade",
      "id": 467,
      "speakers": "Theo Crevon",
      "title": "Automate, contribute, repeat.",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Infrastructure",
        "Open-Source",
        "Development",
        "DevOps general"
      ],
      "abstract_long": [
        "Computers are never as convenient as when they work for us. If you agree with this motto, then Ansible, a deployment and automation tool written in Python, might come in handy.\r\n\r\nAt Ableton, Ansible is involved in every aspect of deployment and automation. From local machine setup, to vm creation and deployment in our self-hosted datacenter, to our services in the immensity of the cloud.\r\n\r\nBecause it is dead simple to use, can deal with any number of hosts in parallel and has robust compatibility with Unix as well as Windows systems, you will probably never have to write a shell script again.\r\n\r\nBecause it is written in Python and exposes a clean, extensible and easy to adapt design and architecture; contributing features to the project and fixing the bugs you might encounter during the journey is extremely easy. \r\n\r\nAt Ableton we love music and we love open-source. Ansible is an amazing tool which allows us to free more time for music by automating boring and repetitive tasks, and to contribute back to the open-source community with ease. Here's an opportunity to share our love for it, our experience with it, and our contributions to it with you. \r\n\r\nAutomate, contribute, repeat. "
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Open Source",
        "Programming",
        "DevOps"
      ],
      "emails": "tcr@ableton.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/automate-contribute-repeat",
      "admin_type": "",
      "companies": "Ableton"
    },
    "476": {
      "abstract_short": "A modern application has a lot of passwords and keys floating around. Encryptions keys, database passwords, and API credentials; often typed in to text files and forgotten. Fortunately a new wave of tools are emerging to help manage, update, and audit these secrets. Come learn how to avoid being the next TechCrunch headline. ",
      "sub_title": "",
      "timerange": "2016-07-18 16:00:00, 2016-07-18 16:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 476,
      "speakers": "Noah Kantrowitz",
      "title": "Behind Closed Doors: Managing Passwords in a Dangerous World",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Security",
        "Configuration Management (Ansible/Fabric/Chef/...)",
        "DevOps general"
      ],
      "abstract_long": [
        "Secrets come in many forms, passwords, keys, tokens. All crucial for the operation of an application, but each dangerous in its own way. In the past, many of us have pasted those secrets in to a text file and moved on, but in a world of config automation and ephemeral microservices these patterns are leaving our data at greater risk than ever before.\r\n\r\nNew tools, products, and libraries are being released all the time to try to cope with this massive rise in threats, both new and old-but-ignored. This talk will cover the major types of secrets in a normal web application, how to model their security properties, what tools are best for each situation, and how to use them with major web frameworks."
      ],
      "abstract_extra": "## Outline\r\n\r\n* Intros\r\n* Types of secrets\r\n  * Passwords (internal control)\r\n  * Key files (TLS, whole files)\r\n  * Tokens (external control)\r\n  * Other (PCI, etc)\r\n  * Hot vs. cold access\r\n* Properties of a secrets management system\r\n  * Audit trail\r\n  * Least access\r\n  * Integrations\r\n  * Pre-encryption systems\r\n* The usual solutions, and why they are dangerous\r\n* Attack surfaces and threat modelling\r\n  * Code leak\r\n  * Backup leak\r\n  * Directory traversal/transclude\r\n  * RCE\r\n  * Laptop theft\r\n  * Higher power (gov, etc)\r\n* Identity Management\r\n  * Tokens\r\n  * Cloud Systems\r\n  * HSMs\r\n* Tools\r\n  * Text files\r\n  * Chef encrypted bags\r\n  * Ansible Vault\r\n  * Chef Vault\r\n  * Hashicorp Vault\r\n  * KeyWhiz\r\n  * AWS KMS\r\n  * Sneaker\r\n  * Confidant\r\n  * Trousseau\r\n  * Sops\r\n  * Red October\r\n  * Barbican\r\n  * Conjur\r\n* Framework Integration\r\n  * HVAC\r\n  * KeywhizFS\r\n  * Consul Template\r\n  * botocore\r\n",
      "tag_categories": [
        "Security",
        "DevOps",
        "DevOps"
      ],
      "emails": "coderanger@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/behind-closed-doors-managing-passwords-in-a-dangerous-world",
      "admin_type": "",
      "companies": ""
    },
    "487": {
      "abstract_short": "\r\nl\r\nThis talk show how a to create a simple, evolving, client server architecture combining  zeromq, selenium and beautifulsoup, which allows you to scrape data even from variable dynamic sites like Sporcle and KhanAcademy. Once the page analysis has been implemented regular \"downloads\" can easily be deployed without cluttering your desktop,  your headless server and/or anonymously.\r\n",
      "sub_title": "Choosing the right combination of tools for getting data from the web can make your life easier",
      "timerange": "2016-07-20 11:15:00, 2016-07-20 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 487,
      "speakers": "Anthon van der Neut",
      "title": "Beyond scraping, getting data from dynamic, heavily javascript driven, websites",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Tooling",
        "Web Crawling",
        "Web Track"
      ],
      "abstract_long": [
        "Scraping  static websites can be done with `urllib2` from the standard library, or with some slightly more sophisticated packages like `requests`. \r\nHowever as soon as JavaScript comes into play on the website you want to download information from, for things like logging in via openid or constructing the pages content, you almost always have to fall back to driving a real browser.\r\nFor web sites with variable content this is can be  time consuming and  cumbersome process.\r\n\r\nThis talk show how a to create a simple, evolving, client server architecture combining  zeromq, selenium and beautifulsoup, which allows you to scrape data from sites like Sporcle, StackOverflow and KhanAcademy. Once the page analysis has been implemented regular \"downloads\" can easily be deployed without cluttering your desktop,  your headless server and/or anonymously.\r\n\r\nThe described client server setup allows you to restart your changed analysis program without having to redo all the previous steps of logging in and stepping through instructions to get back to the page where you got \"stuck\" earlier on. This often decreases the time between entering a possible fix in your HTML analysis code en testing it, down to less than a second from a few tens of seconds in case you have to restart a browser.\r\n\r\nUsing such a setup you have time to focus on writing robust code instead of code that breaks  with every little change the sites designers make."
      ],
      "abstract_extra": "I have previously spoken at PyCon 2006 in Dallas and at other conferences, non-python related, in the Netherlands, when I still lived there.\r\nI will prepare some new and update some existing packages on PyPI so that attendees can easily reproduce the presented talk on their own.",
      "tag_categories": [
        "Programming",
        "Web",
        ">>> Suggested Track"
      ],
      "emails": "a.van.der.neut@ruamel.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/beyond-scraping-getting-data-from-dynamic-heavily-javascript-driven-websites",
      "admin_type": "",
      "companies": "RUAMEL bvba"
    },
    "392": {
      "abstract_short": "This talk is about using our **Python** skills to explore the **secrets of our brains**.   Using the Neurosky Mindwave as a bluetooth connected EEG device, I'll talk about new experiments I have performed inside the Jupyter notebook, for example \"Evoked Response Potentials\" and more about \"Neuro Feedback\" training. \r\n\r\n",
      "sub_title": "Hacking the brain",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@BayesianHorse ",
      "id": 392,
      "speakers": "Andreas Klostermann",
      "title": "Brainwaves for Hackers 3.0",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Visualization",
        "Beginners",
        "Other Hardware",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Electroencephalography **(EEG)** measures potential waves originating within the brain. Billions of brain cells fire  inside your brain, each sending out a minuscule wave. The summed potential waves can be measured, even with quite cheap and **portable devices**.\r\n\r\nBeing the third major version of this talk, I'll talk briefly about the Neurosky Mindwave and the Muse headset. I have also developed more interactive Jupyter experiments, which I'll demonstrate in the talk. For example **Evoked Response Potentials (ERP)** can be demonstrated with relatively simple means. Also I'll talk some more about experiments with **Neuro Feedback**.\r\n\r\n"
      ],
      "abstract_extra": "This is the third \"version\" and contains new and updated content. It requires no knowledge from the previous two major versions, but also contains mostly new material. So those who haven't seen the other talks yet will still understand it, those who have won't be bored.  That's the plan, anyway.",
      "tag_categories": [
        "Data Science",
        "Educational",
        "Hardware",
        "Programming"
      ],
      "emails": "andreasklostermann@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/brainwaves-for-hackers-3",
      "admin_type": "",
      "companies": ""
    },
    "735": {
      "abstract_short": "During this talk you will see how to make a robot able to recognize people with a Raspberry Pi as main board and Python as language. The talk will cover the hardware and modules, discuss briefly the alternatives, and finally show a live demo.",
      "sub_title": "",
      "timerange": "2016-07-18 14:45:00, 2016-07-18 15:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ilovelinux02",
      "id": 735,
      "speakers": "Antonio Spadaro",
      "title": "Build and control a Python-powered robot.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Raspberry PI",
        "Robotics",
        "OpenCV"
      ],
      "abstract_long": [
        "During this talk you will see how to make a robot able to recognize people with a Raspberry Pi as main board and Python as language. The talk will cover the hardware and modules, discuss briefly the alternatives, and finally show a live demo.\r\n\r\nThe robot uses two main modules:\r\n\r\n - **OpenCV** (_Open Source Computer Vision Library_), an open-source library that includes several hundreds of computer vision algorithms. Usage ranges from interactive art, to mines inspection, stitching maps on the web or through advanced robotics.\r\n\r\n - **gpiozero**, a simple interface to everyday GPIO components used with Raspberry Pi.\r\n\r\nThe first is used to recognize the people and the object; the second to control the robot.\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Hardware",
        "Hardware",
        "Hardware"
      ],
      "emails": "antoniospadaro45@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/build-and-control-a-python-powered-robot",
      "admin_type": "",
      "companies": ""
    },
    "618": {
      "abstract_short": "Join this talk to learn about the OpenStack Python SDK and how to deploy your web app  step by step using different components in OpenStack.",
      "sub_title": "",
      "timerange": "2016-07-19 11:15:00, 2016-07-19 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@vkmc",
      "id": 618,
      "speakers": "Victoria Martinez de la Cruz",
      "title": "Build your first OpenStack application with OpenStack PythonSDK",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Open-Source"
      ],
      "abstract_long": [
        "How many times you heard about OpenStack and all the cool things it is being used for? Most of the use cases are big players that need to handle huge amounts of data and automate complex infrastructures. But what about actually using it, for you as a developer, to deploy a simple app? In my case, at least, that has not be an usual topic of discussion when talking about OpenStack. In this talk I'll introduce the OpenStack Python SDK, a project relatively new in the OpenStack ecosystem, and show you step by step how to deploy your own web app using different components in OpenStack."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Open Source"
      ],
      "emails": "victoria@vmartinezdelacruz.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/build-your-first-openstack-application-with-openstack-pythonsdk",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "596": {
      "abstract_short": "While microservices are rather commonly implemented using JSON over\r\nHTTP this is merely an implementation choice.  This talk will cover\r\nthe reasons why you might want to choose ZeroMQ as communication\r\ntransport between your microservices instead.  It will show how ZeroMQ\r\nis used from within Python and the common patterns which can simplify\r\nthe overal architecture while at the same time providing reliable and\r\nlow-latency communications between your services.",
      "sub_title": "Low-latency communications for your backend architecture",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@flubdevork",
      "id": 596,
      "speakers": "Floris Bruynooghe",
      "title": "Build your Microservices with ZeroMQ",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Software Design",
        "System Architecture",
        "Microservices"
      ],
      "abstract_long": [
        "Microservices is the popular term for the trend to build backend\r\narchitectures as a number of smaller independent processes.  As an\r\nevolution from the Service Oriented Architecture the core aims are to\r\ncreate independent services which are easy to operate and even replace\r\nwhile all of them together compose into providing the business logic\r\nrequired for your application.\r\n\r\nWhile it is rather common for microservices to choose JSON over HTTP\r\nto communicate with each other, this is purely an implementation\r\nchoice.  HTTP is a protocol using a strict request-response format,\r\nthis can become a little burdensome when needing to deal with\r\nasynchronous requests and forces some architectural descisions to be\r\nnot as ideal as they could be.  ZeroMQ has more flexible communication\r\npatterns allowing for easier mapping of real-life interactions between\r\nservices.  Coupled with an easy to use asynchronous user-level API and\r\nvery fast underlying communication on persistent TCP connections\r\nZeroMQ is a rather attractive transport to build your microservices\r\nbased applications in.\r\n\r\nThis talk will show how to use ZeroMQ within Python to build your\r\nmicroservices.  It will show the benefits of ZeroMQ's asynchronous\r\nAPI, common usage patterns and how to handle backpressure.\r\nFurthermore different communication patterns will be explored and the\r\nimpact this has on how to simplify the overall architecture using\r\nthese patterns."
      ],
      "abstract_extra": "Previous talks I have given:\r\n- EuroPython 2011 - Exploring CPython's bytecode\r\n- PyConUK 2011 - Exploring CPython's bytecode\r\n- EuroPython 2012 - Using Sockets in Python\r\n- EuroPython 2013 - Taming greenlets using eventlet\r\n- FOSDEM 2014 - Introduction to py.test Fixtures\r\n- FOSDEM 2014 - Integrating Python and C using CFFI\r\n- EuroPython 2014 - Advanced Uses of py.test Fixtures\r\n- PyConUK 2014 - Advanced Uses of py.test Fixtures\r\n- EuroPython 2015 - The hook-based plugin architecture of py.test\r\n- PyConUK 2015 - Shipping your application using Conda",
      "tag_categories": [
        "Programming",
        "DevOps",
        "Programming"
      ],
      "emails": "flub@devork.be",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/build-your-microservices-with-zeromq",
      "admin_type": "",
      "companies": "Cobe.io"
    },
    "612": {
      "abstract_short": "These are the lessons learned when scaling a SaaS web application which grew much faster than any one us could have ever expected.\r\n\r\n - Log and monitor from day one.\r\n - Things will fail, be sure you know when they do.\r\n - Choose components which allow language interoperability.\r\n - Horizontally scalable everything.\r\n - Plan for database downtime.\r\n - Have a way to share settings between backend and frontend.\r\n - Have a way to enter maintenance mode.\r\n - And more...\r\n\r\n",
      "sub_title": "The things you knew you'd have to deal with, and some that you probably didn't.",
      "timerange": "2016-07-20 12:00:00, 2016-07-20 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@eriknhj",
      "id": 612,
      "speakers": "Erik N\u00e4slund",
      "title": "Building a reasonably popular web application for the first time.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Web Track",
        "Case Study",
        "RESTful",
        "APIs",
        "failures/mistakes"
      ],
      "abstract_long": [
        "My name is Erik N\u00e4slund - I\u2019m the co-founder and Head of Engineering at Hotjar.\r\n\r\nI'd love to share the lessons learned when scaling a SaaS web application which grew much faster than any one us could have ever expected.\r\n\r\nWords like \u201cbig\u201d and \u201cpopular\u201d carry very little meaning, so let me define how big Hotjar is right now using some numbers.\r\n\r\nWe onboard about 500 new users on a daily basis.\r\nWe process around 250 000 API requests every minute.\r\nOur CDN delivers about 10 TB of data per day.\r\nWe have roughly 3 TB of data in our primary data store (PostgreSQL), another 1 TB in our Elasticsearch cluster, and a LOT more on Amazon S3.\r\n\r\nThese are the key things we wish we knew when we started. They would have made our life so much easier!\r\n\r\n - Log and monitor from day one.\r\n - Have a way to profile your API calls.\r\n - Things will fail, be sure you know when they do.\r\n - Have a way to keep secrets.\r\n - Everything needs a limit (even if it's really big).\r\n -  Be wary of hitting data type limits.\r\n - Don't get too attached to a framework.\r\n - Choose components which allow language interoperability.\r\n - Horizontally scalable everything.\r\n - Plan for database downtime.\r\n - Features are a great way to test things out before launching them to the public.\r\n - Have a way to share settings between back end and front end.\r\n - Have a way to enter maintenance mode.\r\n - Require different quality of code for different parts of your application."
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Case Study",
        "Web",
        "Web",
        "Best Practice and Use Cases"
      ],
      "emails": "erik@hotjar.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/building-a-reasonably-popular-web-application-for-the-first-time",
      "admin_type": "",
      "companies": "Hotjar Ltd"
    },
    "606": {
      "abstract_short": "This talk demonstrates a technique for developing RESTful APIs using Flask and Flask-Restplus. These tools automate common API tasks such as: validating input, serializing output, routing requests to methods, and turning Python exceptions into HTTP responses.\r\n\r\nThe final API comes with a Swagger interactive UI, which documents all endpoints and makes testing easy. The described tools tools provide just enough syntactic sugar to make your code readable, scalable and easy to maintain.",
      "sub_title": "Using Flask-Restplus to easily develop an API documented by Swagger",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@postrational",
      "id": 606,
      "speakers": "Micha\u0142 Karzy\u0144ski",
      "title": "Building beautiful RESTful APIs using Flask",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Open-Source",
        "Web Track",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "Documentation",
        "Development"
      ],
      "abstract_long": [
        "Modern software is powered by APIs. User facing apps may run in the browser or on mobile platforms, but they almost universally rely on data stored in the cloud. More often then not apps use a RESTful API to exchange data with the server.\r\n\r\nIn my talk I will demonstrate a technique for developing RESTful APIs using the [Flask][1] micro-framework and [Flask-Restplus][2]. These powerful tools automate most common tasks associated with API development: validating input, serializing output, routing requests to methods, and turning Python exceptions into machine-readable HTTP responses.\r\n\r\nA Flask-Restplus API is fully documented by [Swagger][3] which lists all defined endpoints, their query parameters and the format of input and output JSON objects. Swagger generates an [interactive UI][4] for selecting options and easily testing queries. Flask and Flask-Restplus provide just enough syntactic sugar to make your code readable, scalable and easy to maintain.\r\n\r\nMy presentation will give an overview of the features of Flask and Flask-Restplus; I will describe how easy it is to get started and discuss some best practices for building complex APIs using this approach. I will wrap up by briefly mentioning other components of the Flask ecosystem, which give this micro-framework power to match fully-loaded systems such as Django.\r\n\r\n [1]: http://flask.pocoo.org/\r\n [2]: http://flask-restplus.readthedocs.org/en/latest/\r\n [3]: http://swagger.io/\r\n [4]: http://petstore.swagger.io/#/pet\r\n"
      ],
      "abstract_extra": "Hi there, my name is Michal. I write a [blog][1], which you may have come across Googling for Django how-tos. I'm also an author of a [book on Linux server administration using Webmin][2]. I have spoken at a number of conferences, including a lightning talk at DjangoCon 2013, a talk at a Python users' group in Warsaw ([PyWaw][3]) and a talk at a DevCon meeting in Warsaw.\r\n\r\nI want to give a presentation about creating RESTful APIs using Flask. As a companion to this talk, I am in the process of writing a blog article which will describe the technique with code samples and working boilerplate code. Attendees who are interested in the topic will be able to use the article as a practical way to get started building APIs in this way.\r\n\r\nI don't have a YouTube video with a talk in English, but you can hear me speak if you take a look at this [short demo][4] for a proof-of-concept I was working on a few years ago.\r\n\r\n  [1]: http://michal.karzynski.pl/\r\n  [2]: https://www.packtpub.com/networking-and-servers/webmin-administrators-cookbook\r\n  [3]: http://pywaw.org/27/\r\n  [4]: https://youtu.be/5dxLyt6cfAA?t=47s\r\n",
      "tag_categories": [
        "Open Source",
        ">>> Suggested Track",
        "Web",
        "Programming",
        "Programming"
      ],
      "emails": "europython@karzyn.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/building-beautiful-restful-apis-using-flask-1",
      "admin_type": "",
      "companies": "Intel Corporation"
    },
    "682": {
      "abstract_short": "Ever wondered how to keep track of all of your services and their APIs? I'm going to explore how to build your Python services with OpenAPI/Swagger and how it helps you solve problems like communication between services, request and response validation, and documentation of your API. I'll also discuss some challenges you might face, gathered from over a year of heavy usage at Yelp.",
      "sub_title": "Document, validate and connect your Python services",
      "timerange": "2016-07-20 12:00:00, 2016-07-20 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@s_jaensch",
      "id": 682,
      "speakers": "Stephan Jaensch",
      "title": "Building Service interfaces with OpenAPI / Swagger",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Microservices",
        "Best Practice",
        "python",
        "Pyramid"
      ],
      "abstract_long": [
        "Implementing a service-oriented architecture (SOA) is a proven way to split up large monolithic codebases and to scale development when your organization grows to hundreds or thousands of engineers. I'm going to explore how to build and document your services with OpenAPI (formerly known as Swagger). I\u2019ll discuss the benefits and why you should standardize on the API and protocols, but not on SDKs or client libraries. Find out how to make sure the caller as well as your service is conforming to the specification by using request and response validation, how to generate a beautiful HTML documentation for your API, and how you can effortlessly make calls to your services. I'll also discuss and tell you how to overcome challenges you might face, gathered from over a year of heavy usage at Yelp for hundreds of services. I'll present the OpenAPI tools and libraries available for the Python ecosystem for client and server development.\r\n\r\nThe OpenAPI initiative is a cross-vendor consortium focused on creating, evolving and promoting a vendor neutral description format. As an open governance structure under the Linux Foundation, its members include Google, IBM, Atlassian and PayPal.",
        "",
        "",
        ""
      ],
      "abstract_extra": "I'm a tech lead at Yelp, working on the backend for our Business Owner apps amongst other things. I'm a long-time user of Swagger and recently started contributing to the Python tools for it like bravado. I gave a talk at last year's EuroPython and I had a blast doing it. This is the video: https://youtu.be/UUkyzCwgqPw\r\n\r\nIf possible (and if I'm accepted), I'd prefer a slot during the first half of EuroPython.",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "",
        "Application Frameworks"
      ],
      "emails": "sjaensch@yelp.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/building-service-interfaces-using-OpenAPI",
      "admin_type": "",
      "companies": "Yelp"
    },
    "517": {
      "abstract_short": "Hainbat zerbitzaritan  dauden eta plataforma  bakar batean oinarrituta dagoen plataforma baten mantentzea  Buildout Django Fabric eta erabiliz. Kasu praktikoa euskarazko tokiko hedabideak.",
      "sub_title": "",
      "timerange": "2016-07-20 15:45:00, 2016-07-20 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@jatsu",
      "id": 517,
      "speakers": "Jatsu Argarate",
      "title": "Buildout Django eta Fabric. Kasu praktikoa euskarazko tokiko hedabideetan",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Django"
      ],
      "abstract_long": [
        "Hainbat bezerorentzako neurrira egindako edukiak kudeatzeko  plataforma bat garatu dugu Django Frameworka erabiliz. Guztia kudeatzeko eta erabilitako bertsioak kontrolatzeko zc.buildout erabiltzen dugu, baina plataforma hazten doa eta iada dozena bat instalazio ditugu hainbat zerbitzaritan zehar banatuta. Plataformaren oinarria berbera denez, instalazio guztietan eguneraketak argitaratzeko  buildout eta  fabric-en oinarritutako sistema erabiltzen dugu.\r\nHitzaldi honetan azalduko duguna.",
        "",
        "",
        ""
      ],
      "abstract_extra": "Hainbat zerbitzaritan  dauden eta plataforma  bakar batean oinarrituta dagoen plataforma baten mantentzea  Buildout Django Fabric eta erabiliz. Kasu praktikoa euskarazko tokiko hedabideak.",
      "tag_categories": [
        "Application Frameworks"
      ],
      "emails": "jargarate@codesyntax.com",
      "language": "Basque",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/buildout-django-eta-fabric-kasu-praktikoa-euskarazko-tokiko-hedabideetan",
      "admin_type": "",
      "companies": "CodeSyntax"
    },
    "667": {
      "abstract_short": "In this talk, we will see an intro to CFFI, an alternative to using the standard C API to extend Python.  CFFI works on CPython and on PyPy.  It\r\nis a possible solution to a problem that hits notably PyPy --- the\r\nCPython C API.\r\n\r\nThe CPython C API was great and contributed to the present-day success\r\nof Python, together with tools built on top of it like Cython and SWIG.\r\nI will argue that it may be time to look beyond it, and present CFFI as\r\nsuch an example.\r\n",
      "sub_title": "CFFI, on CPython and PyPy, as a potentially better way to call C code",
      "timerange": "2016-07-20 12:00:00, 2016-07-20 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 667,
      "speakers": "Armin Rigo",
      "title": "CFFI: calling C from Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "PyPy",
        "C-Languages",
        "CPython"
      ],
      "abstract_long": [
        "I will introduce CFFI, a way to call C libraries from Python.\r\n\r\n    http://cffi.readthedocs.org/\r\n\r\nCFFI was designed in 2012 to get away from Python's C extension modules,\r\nwhich require hand-written CPython-specific C code.  CFFI is arguably\r\nsimpler to use: you call C from Python directly, instead of going\r\nthrough an intermediate layer.  It is not tied to CPython's internals,\r\nand works natively on two different Python implementations: CPython and\r\nPyPy.  It could be ported to more implementations.\r\n\r\nIt is also a big success, according to the download statistics.  Some\r\nhigh-visibility projects like Cryptography have switched to it.\r\n\r\nPart of the motivation for developing CFFI is that it is a minimal layer\r\nthat allows direct access to C from Python, with no fixed intermediate C\r\nAPI.  It shares ideas from Cython, ctypes, and LuaJIT's ffi, but the\r\nnon-dependence on any fixed C API is a central point. \r\n\r\nIt is a possible solution to a problem that hits notably PyPy --- the CPython C API.  The CPython C API was great and, we can argue, it contributed a lot to\r\nthe present-day success of Python, together with tools built on top of\r\nit like Cython and SWIG.  However, it may be time to look\r\nbeyond it.  This talk will thus present CFFI as such an example.\r\nThis independence is what lets CFFI work equally well on CPython and\r\non PyPy (and be very fast on the latter thanks to the JIT compiler).\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Other Programming Languages",
        "Python"
      ],
      "emails": "armin.rigo@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/cffi-calling-c-from-python",
      "admin_type": "",
      "companies": ""
    },
    "400": {
      "abstract_short": "Introduction to the clean code principles applied to Python code. Let's honor the readable nature of the Python syntax so anyone can maintain our code: \"readability counts\".\r\n\r\nThis talk introduces general concepts of code quality and how they apply for Python. We analyse technical debt, refactoring, and unit testing in the context of a project striving for a better code base.",
      "sub_title": "Achieving quality code in Python projects",
      "timerange": "2016-07-20 15:45:00, 2016-07-20 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@rmarianoa",
      "id": 400,
      "speakers": "Mariano Anaya",
      "title": "Clean code in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Education",
        "Best Practice",
        "Clean Code",
        "Agile",
        "Development"
      ],
      "abstract_long": [
        "Introduction to the clean code principles tailored for Python projects. The goal is to achieve better code quality and a more maintainable code base. Python has a nature of being clear, and easy to follow, so let's take advantage of it in our own code, in order to enforce the principle \"readability counts\" by writing pythonic code.\r\n\r\nThis talk introduces general concepts of code quality for Python developers, analyzing technical debt, with examples on how to achieve a more legible, maintainable and clean code base, by refactoring, writing unit tests and having good coding guidelines for the project. If you are giving your first steps with Python, you will gain insight on best practices for writing good software from the start. If you are a experienced developer, the ideas should work as food for thought, helping with recommendations for code reviews, best practices, etc."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Best Practice and Use Cases",
        "Educational",
        "Development Methods",
        "Programming"
      ],
      "emails": "marianoanaya@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/clean-code-in-python",
      "admin_type": "",
      "companies": "Onapsis"
    },
    "420": {
      "abstract_short": "Take POSIX, add capability-based security, then remove anything that conflicts. The result is CloudABI, available for BSD, Linux, OSX et al. \r\n\r\nA CloudABI process is incapable of any action that has a global impact It can only affect the file descriptors you provide. As a result even unknown binaries can safely be executed - without the need for containers, virtual machines, or other sandboxes. \r\n\r\nThis talk will introduce CloudABI, how to use it with Python, the benefits, and the trade-offs.",
      "sub_title": "Why is my webapp doing `rm -rf $HOME`, and how can I prevent it?",
      "timerange": "2016-07-19 11:15:00, 2016-07-19 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@moreati",
      "id": 420,
      "speakers": "Alex Willmer",
      "title": "CloudABI: Capability based security on Linux/Unix",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Unix",
        "Security",
        "Web Track",
        "System Architecture",
        "Microservices"
      ],
      "abstract_long": [
        "[CloudABI](https://nuxi.nl/) is a new POSIX based computing environment that brings [capability-based security](https://en.wikipedia.org/wiki/Capability-based_security) to BSD, Linux, OSX et al.\r\n\r\nUnlike traditional Unix, if a CloudABI process goes rogue it _cannot_ execute random binaries, or read arbitrary files. This is achieved by removing `open()` & any other API able to acquire global resources. Instead a CloudABI process must be granted _capabilities_ to specific resources (e.g. directories, files, sockets) in the form of file descriptors. If a process only has a descriptor for `/var/www` then it's _incapable_ of affecting any file or folder outside that directory.\r\n\r\nThis talk will\r\n\r\n - Review the security & reusability problems of Linux & Unix processes\r\n - Introduce capability-based security\r\n - Summarize the design of CloudABI - its benefits & trade-offs\r\n - Demonstrate how to write Python software for CloudABI & run it\r\n - Point out the pitfalls & gotchas to be aware of\r\n - Discuss the current & future status of CloudABI\r\n \r\nCloudABI began life on FreeBSD. It also runs DragonFly BSD, NetBSD, PC-BSD, Arch Linux, Debian, Ubuntu, & OS X. The API & ABI are kernel agnostic - a CloudABI binary can run on any supported kernel. The design is evolved from [Capsicum](https://www.cl.cam.ac.uk/research/security/capsicum/), a library that allows processes to drop access to undesired syscalls at runtime. CloudABI applies this at build time to make testing & lock-down easier.",
        "",
        "",
        ""
      ],
      "abstract_extra": "I can contract this talk to 30 minutes, or expand it to 60 minutes if you prefer.",
      "tag_categories": [
        "Operating Systems",
        "Security",
        ">>> Suggested Track",
        "DevOps",
        "Programming"
      ],
      "emails": "alex@moreati.org.uk",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/capability-based-security-on-unix-with-cloudabi",
      "admin_type": "",
      "companies": ""
    },
    "597": {
      "abstract_short": "Learn about `conda`, the package installer from the scientific community. It offers very interesting features that can improve your installation experience considerably.  The talk gives an overview of the basic usage of `conda`.  It covers the topics installation and building of packages.\r\n`conda` can be combined with `pip`  to use all PyPi packages. Its cross-platform and multi-languages features combined with power environments can help to improve your productivity.  \r\n",
      "sub_title": "A better solution to the packing problem!?",
      "timerange": "2016-07-19 14:30:00, 2016-07-19 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@pyacademy",
      "id": 597,
      "speakers": "Mike M\u00fcller",
      "title": "Conda - Easier Installs and Simpler Builds",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Python general",
        "Packaging",
        "Cross-Platform-Development"
      ],
      "abstract_long": [
        "The BSD license `conda` is a package installer for Python and other languages.\r\nWhile it originates form the scientific Python community, it can be really useful for\r\nall Python programmers.\r\n\r\nInstallation of Python packages has become much simpler over the last years.\r\nThe use of  `pip`  and `virtualenv` simplify the installation of Python packages a lot.\r\nHowever,  they are specific to Python.  The Python-agnostic `conda`  has advantages\r\nfor packages with C or Fortran extension that are very common for scientific libraries. \r\n`conda` is cross-platform. According to different statistics,  the most Python users work on Windows. Often is especially complicate to get extensions with many dependencies installer on this platform. `conda` facilities the installation for Windows considerably.\r\n\r\nThis talk introduces the basic usage of  `conda` to install packages. This includes the basic commands for searching  and installing of packages. Furthermore, the talk demonstrates the creation of environments for different Python versions and combinations of packages.\r\n\r\nThe building of a packages is simple. The talk shows how to build recipes that contain declarations of dependencies .\r\n\r\n`conda` can work together  with `pip`. This allows to use all packages from the Python Package Index ( PyPI). The talk explains the concept of channels that allow to get packages from different sources.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "This hands-on talk  introduces a very useful tool to a new audience.  While very well know in the scientific Python community, `conda`  might not that well know outside this community. This talk can help to change this situation.",
      "tag_categories": [
        "Python",
        "Python",
        "Python"
      ],
      "emails": "mmueller@python-academy.de",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/conda-easier-installs-and-simpler-builds",
      "admin_type": "",
      "companies": "Python Academy GmbH & Co. KG"
    },
    "610": {
      "abstract_short": "The purpose of this talk if pointing out that using Docker in production is perfectly valid, not just for develop and CI environments.\r\n\r\n",
      "sub_title": "Security considerations and best practices",
      "timerange": "2016-07-18 16:00:00, 2016-07-18 16:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@musghost",
      "id": 610,
      "speakers": "Andr\u00e9s Cidel",
      "title": "Create secure production environment using Docker",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Virtualization",
        "Security",
        "Best Practice",
        "Docker"
      ],
      "abstract_long": [
        "Docker is a relatively new technology platform that helps teams develop, deploy and scale applications with greater ease and speed. However, there are doubts about using Docker in production environments. One important reason is that containers don't provide the same security layer as hypervisors do.\r\n\r\nThe purpose of this talk is pointing out that using Docker in production is perfectly valid, not just for develop and CI environments.\r\n\r\nWe'll learn:\r\n\r\n - How Docker works.\r\n - Main risks.\r\n - How create and maintain secure images.\r\n - How defend containers.\r\n - How delimit security risks in containers.\r\n - Best practices for running containers.\r\n\r\n"
      ],
      "abstract_extra": "I'm the organizer of a Meetup about Docker and I've held some talks about it.\r\nThis is the meetup website: http://www.meetup.com/Mexico-City-Docker-friends/\r\nThese are my blogs, English and Spanish versions http://blog.cidel.com.mx/ and http://dockerfriends.mx/\r\n",
      "tag_categories": [
        "DevOps",
        "Security",
        "Best Practice and Use Cases",
        "DevOps"
      ],
      "emails": "andres@cidel.com.mx",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/create-secure-production-environment-using-docker",
      "admin_type": "",
      "companies": "Vinco Orbis"
    },
    "746": {
      "abstract_short": "please fill here",
      "sub_title": "",
      "timerange": "2016-07-22 16:15:00, 2016-07-22 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 746,
      "speakers": "Miguel Reguero",
      "title": "Cybersecurity in the financial sector with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Security"
      ],
      "abstract_long": [
        "please fill here"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Security"
      ],
      "emails": "miguel.reguero@i4s.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/ciberseguridad-en-el-sector-financiero-con-python",
      "admin_type": "",
      "companies": "Innovation 4 Security"
    },
    "666": {
      "abstract_short": "The CSV is the most widely adopted data format. It used to \r\nstore and share *not-so-big* scientific data. However, this format is not particularly \r\nsuited in case data require any sort of internal\r\nhierarchical structure, or if data are too big. To this end, other data formats must be considered. \r\nIn this talk, the different data formats will be presented and compared w.r.t. their\r\nusage for scientific computations along with corresponding Python libraries.",
      "sub_title": "Different format solutions for tiny and big data, beyond CSV and HDFS",
      "timerange": "2016-07-21 10:30:00, 2016-07-21 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@leriomaggio",
      "id": 666,
      "speakers": "Valerio Maggio",
      "title": "Data Formats for Data Science",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Physics",
        "Big Data",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Databases"
      ],
      "abstract_long": [
        "The *plain text* is one of the simplest yet most intuitive format in which data could be stored. \r\nIt is easy to create, human and machine readable, \r\n*storage-friendly* (i.e. highly compressible), and quite fast to process.\r\nTextual data can also be easily *structured*; in fact to date the \r\nCSV (*Comma Separated Values*) is the most common data format among data scientists.\r\n\r\nHowever, this format is not properly suited in case data require any sort of internal\r\nhierarchical structure, or if data are too big to fit in a single disk. \r\n\r\nIn these cases other formats must be considered, according to the shape of data, and the \r\nspecific constraints imposed by the context. \r\nThese formats may leverage *general purpose* solutions, e.g. [No]SQL databases, HDFS (Hadoop File System); \r\nor may be specifically designed for scientific data, e.g. hdf5, ROOT, NetCDF.\r\n\r\nIn this talk, the strength and flaws of each solution will be discussed, focusing on their usage for scientific computations. The goal is to provide some practical guidelines for data scientists, derived from the the comparison of the different Pythonic solutions presented for the case study analysed. These will include\r\n`xarray`, \r\n`pyROOT` *vs* `rootpy`, `h5py` *vs* `PyTables`, `bcolz`, and `blaze`.\r\nFinally, few notes about the new trends for **columnar databases** (e.g. *MonetDB*) will be also presented, for very fast\r\nin-memory analytics."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        "Data Science",
        "Data Science",
        "Data Science",
        "Databases"
      ],
      "emails": "valerio.maggio@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/data-science-formats-beyond-csv-and-hdfs",
      "admin_type": "",
      "companies": ""
    },
    "693": {
      "abstract_short": "Laburbilduz, kontsumo energetikoaren datuak modu sinple eta argi batean bistaratzen dituen web orrialde bat sortu da Django erabiliz.",
      "sub_title": "",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 693,
      "speakers": "Iker Martinez de Agirre Mendia",
      "title": "Datu bistaratze soluzioen garapena Smartcity proiektuetan",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Web",
        "General"
      ],
      "abstract_long": [
        "Mondragon Unibertsitateko inbestigazio taldea Smartcity-en aplikazio eta monitorizazioen inguruko proiektuetan lanean ari da, non herrialde ezberdinetako gune konkretuetan bizi diren pertsonen kontsumo energetikoa jaso eta aztertzen den. Proiektu hauetako bi CITyFiED eta ARROWHEAD dira. \r\n\r\nKontsumo hori eta horren harira ondorioztatutako aholku energetikoak erabiltzailearengana heltzeko, bistaratze soluzio bat garatu da, web orrialde bat alegia. \r\n\r\nErabiltzailean oinarritutako diseinua (User Centered Design) aplikatuz, gailu ezberdinetara moldatzen den (Responsive Web Design, Mobile-First) web bat sortu da, Django Web Framework tresnaren bitartez. REST API (Django Rest Framework) baten bidez, informazioa gordetzen den datu basea atzitzen da, kontsumoak eta beraien bilakaera bistaratze libreriak (D3.js) erabiliz irudikatuz. Horrez gain, Djangok eskaintzen dituen aukerak baliatuz, web orrialdea hizkuntza ezberdinetan bistaratu daiteke.\r\n\r\nLaburbilduz, kontsumo energetikoaren datuak modu sinple eta argi batean bistaratzen dituen web orrialde bat sortu da Django erabiliz.\"\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "Mondragon Unibertsitateko inbestigazio taldea Smartcity-en aplikazio eta monitorizazioen inguruko proiektuetan lanean ari da, non herrialde ezberdinetako gune konkretuetan bizi diren pertsonen kontsumo energetikoa jaso eta aztertzen den. Proiektu hauetako bi CITyFiED eta ARROWHEAD dira. \r\n\r\nKontsumo hori eta horren harira ondorioztatutako aholku energetikoak erabiltzailearengana heltzeko, bistaratze soluzio bat garatu da, web orrialde bat alegia. \r\n\r\nErabiltzailean oinarritutako diseinua (User Centered Design) aplikatuz, gailu ezberdinetara moldatzen den (Responsive Web Design, Mobile-First) web bat sortu da, Django Web Framework tresnaren bitartez. REST API (Django Rest Framework) baten bidez, informazioa gordetzen den datu basea atzitzen da, kontsumoak eta beraien bilakaera bistaratze libreriak (D3.js) erabiliz irudikatuz. Horrez gain, Djangok eskaintzen dituen aukerak baliatuz, web orrialdea hizkuntza ezberdinetan bistaratu daiteke.\r\n\r\nLaburbilduz, kontsumo energetikoaren datuak modu sinple eta argi batean bistaratzen dituen web orrialde bat sortu da Django erabiliz.\"",
      "tag_categories": [
        "",
        ""
      ],
      "emails": "iker.martinezm@alumni.mondragon.edu",
      "language": "Basque",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/datu-bistaratze-soluzioen-garapena-smartcity-proiektuetan-1",
      "admin_type": "",
      "companies": ""
    },
    "418": {
      "abstract_short": "Python has lots of scientific, data analysis, and machine learning libraries. But there are many problems when starting out on a machine learning project. Which library do you use? How do they compare to each other? How can you use a model that has been trained in your production app? In this talk I will discuss how you can use TensorFlow to create Deep Learning applications. I will discuss how it compares to other Python machine learning libraries, and how to deploy into production.",
      "sub_title": "Find out how TensorFlow compares to other Machine Learning libraries",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 15:00:00",
      "sub_community": "pydata",
      "duration": 60,
      "twitters": "@IanMLewis",
      "id": 418,
      "speakers": "Ian Lewis",
      "title": "Deep Learning with Python & TensorFlow",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Deep Learning",
        "Science Track",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Python has lots of scientific, data analysis, and machine learning libraries. But there are many problems when starting out on a machine learning project. Which library do you use? How do they compare to each other? How can you use a model that has been trained in your production application?\r\n\r\nTensorFlow is a new Open-Source framework created at Google for building Deep Learning applications. Tensorflow allows you to construct easy to understand data flow graphs in Python which form a mathematical and logical pipeline. Creating data flow graphs allow easier visualization of complicated algorithms as well as running the training operations over multiple hardware GPUs in parallel.\r\n\r\nIn this talk I will discuss how you can use TensorFlow to create Deep Learning applications. I will discuss how it compares to other Python machine learning libraries like Theano or Chainer. Finally, I will discuss how trained TensorFlow models could be deployed into a production system using TensorFlow Serve.",
        "",
        "",
        ""
      ],
      "abstract_extra": "Here is a high level outline of the talk:\r\n\r\nOutline\r\n\r\n - Overview of Machine Learning Problems\r\n - What is TensorFlow and How Does it Work?\r\n - Creating a Deep Learning Model with Tensorflow\r\n - Comparing Tensorflow to Theano & Chainer\r\n - Productionizing Deep Learning Models",
      "tag_categories": [
        "Data Science",
        ">>> Suggested Track",
        "Data Science"
      ],
      "emails": "ianlewis@google.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/deep-learning-with-python-tensorflow",
      "admin_type": "",
      "companies": "Google"
    },
    "388": {
      "abstract_short": "This talk shares some insights into Aldryn, a platform used daily to execute hundreds of Django based website-deployments, and the various components that intervene to deploy a Django project from its git repository to the cloud.\r\n\r\nWe will discuss some of the problems we faced, and the solutions we adopted, to deploy Django projects at scale to the cloud, including topics like PyPI wheel proxies, dynamic traffic-rerouting, live data-center migrations, etc.",
      "sub_title": "A journey through various challenges and solutions we adopted to deploy Django at scale on Aldryn",
      "timerange": "2016-07-22 14:30:00, 2016-07-22 15:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@garet_jax",
      "id": 388,
      "speakers": "Jonathan Stoppani",
      "title": "Deploying Django at scale: what happens inside the cloud",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Django Track",
        "Configuration Management (Ansible/Fabric/Chef/...)",
        "Django",
        "Distributed Systems",
        "Deployment/Continuous Integration and Delivery"
      ],
      "abstract_long": [
        "Aldryn is used daily to execute hundreds of Django based website-deployments. It consists of a control panel to help backend developers, frontend developers, project managers and content-editors collaborate to successfully build and maintain web apps, coupled to a scalable and highly available Docker-based build and deployment infrastructure currently used to host more than 6000 django-cms based websites.\r\n\r\nWhile the control panel is oriented mainly towards the Django/django-CMS match, the structure of the single projects and the deployment infrastructure allow to continuously deploy, upgrade and scale any type of HTTP service.\r\n\r\nThe goal of this talk is to share some insights into the various components that intervene to deploy a Django project from its git repository to the cloud.\r\n\r\nThis talk will discuss some of the problems we faced, and the solutions we adopted, to deploy Django projects at scale to the cloud. I'll share the lessons we learned and present the tools we built to reach our goal. I\u2019ll be covering topics like:\r\n - Using a PyPI proxy to both build platform-specific wheels, on order to both to withstand PyPI downtimes and cut on deployment times;\r\n - Dynamic traffic re-routing for zero-downtime deployments and horizontal scaling;\r\n - Massive TLS termination on a custom built Twisted/PyPy reverse proxy;\r\n - Live server and datacenter migrations for both apps and their data."
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "DevOps",
        "Application Frameworks",
        "DevOps",
        "DevOps"
      ],
      "emails": "jonathan.stoppani@divio.ch",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/deploying-django-at-scale-what-happens-inside-the-cloud",
      "admin_type": "",
      "companies": "Divio"
    },
    "593": {
      "abstract_short": "When designing an abstraction for a complex system (an ORM-like library in our case) you face a lot of design decisions and challenges. This talk details how we chose to tackle those when designing elasticsearch-dsl.",
      "sub_title": "Lessons learned while bulding elasticsearch-dsl",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@honzakral",
      "id": 593,
      "speakers": "Honza Kr\u00e1l",
      "title": "Designing a Pythonic Interface",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Software Design",
        "Best Practice",
        "failures/mistakes"
      ],
      "abstract_long": [
        "The json query language for elasticsearch, as well as its other APIs, can be very daunting to new users and can be a bit cumbersome when working with python. That is why we created elasticsearch-dsl - a sort of ORM for elasticsearch.\r\n\r\nWe will go through the design philosophy and obstacles found during the development - trying to make a more pythonic interface for elasticsearch while maintaining access to all of the features of the underlying query language.\r\n\r\nThe focus of the talk is more on the library and interface design than on elasticsearch and its query language itself, that is used only to demonstrate the principles."
      ],
      "abstract_extra": "I just want to stress that this is not a talk about elasticsearch, but about designing a pythonic API, using elasticsearch-dsl as an example (since it's a practical \"lessons learned\" talk).",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "Best Practice and Use Cases"
      ],
      "emails": "honza.kral@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/designing-a-pythonic-interface",
      "admin_type": "",
      "companies": "Elastic"
    },
    "505": {
      "abstract_short": "Nowadays Python is the perfect environment for developing a real-time automated trading tool. In this talk we will discuss the development of: a general-purpose multiagent-system module using Pyro and ZeroMQ; a platform, based on it, for developing automated trading strategies using Numpy, Numba, Theano, etc.; and a GUI for visualizing real-time market data using PyQtGraph and Qt.",
      "sub_title": "",
      "timerange": "2016-07-18 12:00:00, 2016-07-18 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 505,
      "speakers": "Miguel S\u00e1nchez de Le\u00f3n Peque",
      "title": "Developing a real-time automated trading platform with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Distributed Systems",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "In OpenSistemas we have developed a general-purpose multi-agent system which is written in pure Python: *osBrain*. Agents communicate with each other using ZeroMQ, allowing the user to define different communication patterns based on their needs.\r\n\r\nBased on this multi-agent system, we have also developed a broker-independent platform for real-time automated trading: *osMarkets*. This platform implements specialized agents:\r\n\r\n- **Feeder** is an agent which receives real-time data from the broker.\r\n- **Router** is an agent which receives data from feeders. It manages the historical data and distributes updates to all the subscribed agents in the network.\r\n- **Brain** is the most common agent. It receives data from router or from other brains and processes them, sending the results to other brains or sending orders to be executed. Brains can make use of many useful packages avilable in the Python ecosystem: NumPy, SciPy, Numba, Theano...\r\n- **Trader** is an agent which is designed to interact with the broker, just as the feeder, but to execute market orders.\r\n\r\n![system](http://i.imgur.com/A9vsWee.png)\r\n\r\nWhile it is still in its earliest stages, we are developing a tool for real-time visualization of trading strategies using PyQtGraph. This tool acts as an agent in the multi-agent system.\r\n\r\n![chart](http://i.imgur.com/5XS7oBQ.png)"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "msanchez@opensistemas.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/developing-a-real-time-automated-trading-platform-with-python",
      "admin_type": "",
      "companies": "OpenSistemas"
    },
    "565": {
      "abstract_short": "Nowadays, there is a lot of buzz about Go. In this talk we'll learn the basics and most important concepts of the language, we'll further discuss differences and similarities in Go and Python and dive into the cool features of Go. Finally we'll talk about why popularity of Go is raising so fast and try to answer the most important question: Do I need to switch to Go ?",
      "sub_title": "An opinion on the topic after working with Go for 6 months",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 565,
      "speakers": "Max Tepkeev",
      "title": "Do I need to switch to Go(lang) ?",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Educational Track",
        "Go-Lang"
      ],
      "abstract_long": [
        "Nowadays, there is a lot of buzz about Go. It happened so that for the last 6 months I've been mostly programming Go, and frankly speaking I fell in love with this language.\r\n\r\nWe'll first do a quick review of the language. Go doesn't have some language constructs, for example classes and exceptions and at first it may seem hard to write proper Go code, but in practice the language is so easy that I will try to teach you the basics and most important concepts of the language. We'll further discuss differences and similarities in Go and Python and dive into the cool features of Go.\r\n\r\nFinally we'll talk about why popularity of Go is raising so fast and try to answer the most important question: Do I need to switch to Go ?"
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Other Programming Languages"
      ],
      "emails": "tepkeev@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/do-i-need-to-switch-to-golang",
      "admin_type": "",
      "companies": "Aidata"
    },
    "563": {
      "abstract_short": "This talk is about dynamic class generation in python: the practice of writing code that generates classes and their functionality at runtime. It will use boto3, the AWS SDK for Python, as a basis to dive into the basics, the benefits, and the drawbacks to dynamically generating classes.",
      "sub_title": "",
      "timerange": "2016-07-18 12:00:00, 2016-07-18 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 563,
      "speakers": "Kyle Knapp",
      "title": "Dynamic Class Generation in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Software Design",
        "Python general",
        "Use Case",
        "APIs",
        "Educational Track"
      ],
      "abstract_long": [
        "This talk is about the concept of dynamic class generation in python. The whole idea is writing code that generates classes and their functionality at runtime. You now may be asking yourself, \u201cThat sounds like a neat trick. Why would I ever generate my classes at runtime?\u201d Here are a few reasons why:\r\n\r\n\u2022\tIt can decrease the physical size of your code.\r\n\r\n\u2022\tIt can improve the workflow in adding new functionality.\r\n\r\n\u2022\tIt can improve reliability of your code.\r\n\r\nOne example where the power of this concept has really been leveraged is in boto3, the AWS SDK for Python. Dynamic class generation has allowed boto3 to become heavily data driven such that most of its classes and methods are generated based off JSON models representing aspects of an AWS service\u2019s API. For example, to add support for a new AWS service API in boto3, just plop in a JSON file into the library with no additional Python code required.\r\n\r\nUsing lessons and techniques drawn from developing boto3, this talk will dive into the following topics related to dynamic class generation:\r\n\r\n\u2022\tThe basics of dynamic class generation such as how to effectively dynamically generate classes.\r\n\r\n\u2022\tHow to overcome some of the challenges of dynamic class generation.\r\n\r\n\u2022\tThe tradeoffs in dynamically generating classes and discussion on when it is appropriate.\r\n\r\nBy the end of this talk, the hope is that you will have a better understanding of dynamic class generation and come away with helpful ideas for your next big project."
      ],
      "abstract_extra": "Talk from last EuroPython: https://ep2015.europython.eu/conference/talks/it-works-on-my-machine-writing-python-code-for-any-environment",
      "tag_categories": [
        "Programming",
        "Python",
        "Best Practice and Use Cases",
        "Web",
        ">>> Suggested Track"
      ],
      "emails": "kyknapp1@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/dynamic-class-generation-in-python",
      "admin_type": "",
      "companies": "Amazon"
    },
    "532": {
      "abstract_short": "Developers usually state that finding defects is the primary motivation for doing code reviews. However, research has shown that the main benefits of code reviews are; knowledge transfer, team awareness and finding alternative solutions.\r\n\r\nCode reviews when done well are more than just finding defects; it should be a discussion and conversation with other developers about finding the best solutions. We will talk about re-framing code review to encourage open discussions.",
      "sub_title": "Get the most out of code review. Learn best practices and avoid common pitfalls.",
      "timerange": "2016-07-19 12:00:00, 2016-07-19 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@d0ugal",
      "id": 532,
      "speakers": "Dougal Matthews",
      "title": "Effective Code Review",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Communication",
        "Best Practice",
        "Clean Code",
        "Open-Source"
      ],
      "abstract_long": [
        "Developers usually state that finding defects is the primary motivation for doing code reviews. However, research has shown that the main benefits of code reviews are; knowledge transfer, team awareness and finding alternative solutions.\r\n\r\nCode reviews when done well are more than just finding defects; it should be a discussion and conversation with other developers about finding the best solutions. We will talk about re-framing code review to encourage open discussions.\r\n\r\nThis talk is for everyone that is already involved in regular code review and those hoping to start. I will talk through the code review process with the aim of making it a better and more useful experience for both the authors and the reviewers.\r\n\r\nThe talk will follow the following rough outline:\r\n\r\n- Introduction\r\n  - Why do code reviews\r\n  - What are we aiming to get out of it\r\n- Submitting code for review\r\n  - How can you help reviewers?\r\n  - What should you avoid doing?\r\n  - Removing ownership of the code\r\n- Reviewing code\r\n  - How should you give feedback?\r\n  - What should you look for?\r\n  - How can you encourage people to review more?\r\n  - How to avoid and remove bike-shedding\r\n- Code review tools and how they impact on the process.\r\n- Wrap up and conclusion"
      ],
      "abstract_extra": "As a developer on the OpenStack project and the maintainer of multiple open source projects, doing code review is a big part of my day. I've been lucky enough to have worked in a strong code review culture for a number of years and given the subject a lot of thought.\r\n\r\nI have spoken at EuroPython previously a few times, last year I spoke about the MkDocs project which was well received albeit a somewhat niched topic.",
      "tag_categories": [
        "Community",
        "Best Practice and Use Cases",
        "Educational",
        "Open Source"
      ],
      "emails": "dougal@dougalmatthews.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/effective-code-review",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "611": {
      "abstract_short": "We will explore the lessons learned on maintaining a Selenium test suite against a webapplication and how to leverage python tools to make this process easy and transparent.",
      "sub_title": "Lessons learned from testing a webapplication with Selenium and python tools",
      "timerange": "2016-07-18 16:30:00, 2016-07-18 17:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@festerc",
      "id": 611,
      "speakers": "Andrei Coman",
      "title": "Effectively test your webapp with Python and Selenium",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Case Study",
        "Test Libraries (pyTest/node/...)",
        "Testing",
        "failures/mistakes"
      ],
      "abstract_long": [
        "How often do you run your Selenium test suite? How fast do you get a result from it?\r\nWould you like to answer with: \"Whenever I feel like it\" and \"Well, about the time it takes me to finish a coffee\" ? This talk will try to get you closer to these answers.\r\n\r\nWe will have a look at the lessons learned and the challenges my team faced  maintaining a Selenium test suite against a long-lived Django web application.\r\n\r\nWe will go over the pros and cons of:\r\n  - test design approaches\r\n  - technologies we used (nose, py.test, LiveServerTestCase)\r\n  - reporting tools ",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Case Study",
        "Testing",
        "Testing",
        "Best Practice and Use Cases"
      ],
      "emails": "comandrei@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/effectively-test-your-webapp-with-python-and-selenium",
      "admin_type": "",
      "companies": "3Pillar Global"
    },
    "675": {
      "abstract_short": "Does Django scale? How to manage traffic peaks? What happens when the database grows too big? How to find the bottlenecks?\r\n\r\nWe will overview the basics concepts on scalability and performance, and then see some tips and tricks. These statements will be backed up with experiments and numbers, to show the timing improvements.",
      "sub_title": "Tips and best practices for avoiding scalability issues and performance bottlenecks in Django",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@DZPM",
      "id": 675,
      "speakers": "David Arcos",
      "title": "Efficient Django",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Django Track",
        "System Architecture",
        "Performance",
        "Django",
        "Best Practice"
      ],
      "abstract_long": [
        "**Does Django scale?** How to manage traffic peaks? What happens when the database grows too big? How to find the bottlenecks?\r\n\r\nWe will overview the basics concepts on scalability and performance, and then see some tips and tricks. These statements will be backed up with experiments and numbers, to show the timing improvements.\r\n\r\nMain topics:\r\n\r\n- System architecture\r\n- Database performance\r\n- Queues and workers\r\n- Profiling with django-debug-toolbar\r\n- Caching queries and templates\r\n- Dealing with a slow admin\r\n- Optimizing the models\r\n- Faster tests\r\n\r\n"
      ],
      "abstract_extra": "I've given talks at EuroPython 2015, PySS, PyConES, PyBCN.",
      "tag_categories": [
        ">>> Suggested Track",
        "DevOps",
        "Programming",
        "Application Frameworks",
        "Best Practice and Use Cases"
      ],
      "emails": "david.arcos@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/efficient-django",
      "admin_type": "",
      "companies": "Lead Ratings"
    },
    "484": {
      "abstract_short": "EITB Nahieran zerbitzuaren informazioa era erabilgarrian erakusteko APIaren nondik norakoak erakutsiko ditut hitzaldian.",
      "sub_title": "EITB Nahieran datuak erabiltzeko API erabilterraz bat nola egin dudan azalduko dut",
      "timerange": "2016-07-20 14:30:00, 2016-07-20 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@erralin",
      "id": 484,
      "speakers": "Mikel Larreategi",
      "title": "EITB Nahieran: askatu bideoak API honen bidez",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "RESTful",
        "APIs",
        "Pyramid"
      ],
      "abstract_long": [
        "Iaz Raspberry PI bat erosi nuen eta ez nekien zer egin berarekin... Aurten Kodi softwarea erabiliz media-center bihurtu dut Raspberrya.\r\n\r\nKodirako 'tvalacarta' izeneko plugin bat zegoen berarekin EITB Nahieran ikusteko, baina ez zebilen. Saiatu nintzen EITB Nahieranen kodea funtzionarazten, eta asko kostata informazioa hiru era ezberdinetan ateratzea lortu nuen. Azkenean, funtzionamendua errazteko API bat prestatu dut EITB Nahieranen dagoen informazioa atzitzeko eta edozeinek erabili ahal dezan."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Web",
        "Application Frameworks"
      ],
      "emails": "mlarreategi@codesyntax.com",
      "language": "Basque",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/eitb-nahieran-askatu-bideoak-api-honen-bidez",
      "admin_type": "",
      "companies": "CodeSyntax"
    },
    "604": {
      "abstract_short": "Aurkezpen honetan Nao robotaren Choreographe programazio ingurumenaren sarrera bat egiten da, pythonek errobotikan duen erabilpena erakutsiz. Aurkezpen guztia aurkezleak orain arte egindako lanean oinarritzen da. Lehenik eta behin, programa baten estruktura erakutsiko da. Ondoren, liburutegi bat nola gehitu erakutsiko da, liburutegiaren instalazioak ekar ditzakeen arazoak aztertuz. Azkenik, Naoaren gorputz jarreran zein diskurtsoaren naturaltasunean egindako aurrerapenak azalduko dira. ",
      "sub_title": "Pertsona-robot interakzioan lehenego pausuak Choreographe erabilita.",
      "timerange": "2016-07-20 16:15:00, 2016-07-20 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 604,
      "speakers": "Leire Ozaeta",
      "title": "Endor, ipuinak kontatzen zituen Nao robota.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Beginners",
        "Robotics",
        "Human-Machine-Interaction"
      ],
      "abstract_long": [
        "Aurkezpen honetan Nao robotaren Choreographe programazio ingurumenaren sarrera bat egiten da, pythonek errobotikan duen erabilpena erakutsiz. Aurkezpen guztia aurkezleak orain arte egindako lanean oinarritzen da. Lehenik eta behin, programa baten estruktura erakutsiko da. Ondoren, liburutegi bat nola gehitu erakutsiko da, liburutegiaren instalazioak ekar ditzakeen arazoak aztertuz. Azkenik, Naoaren gorputz jarreran zein diskurtsoaren naturaltasunean egindako aurrerapenak azalduko dira. \r\nHonekin lortu nahi diren helburuak honako hauek dira: \r\n - Choreographeko proiektu baten estruktura ezagutzea.\r\n - Nao robot baten oinarrizko programa bat ikustea.\r\n - Chorepgraphek ematen dituen programazio blokeak eraldatzen jakitea, python erabiliz.\r\n - Choreographen eskaintzen diren tresnen bitartez, programan python liburutegi bat gehitzen ikastea.\r\nAurkezpen hau ulertzeko ez dago eskakizunik. Python pixka bat dakien edonork (\u201chello world\u201d bat egiten jakitearekin balio du) ulertzeko mailan emango da eta ez da konplexutasun tekniko handiko azalpenik emango. Printzipioz python ezagutzen ez duen edonor ere aurkezpen ia osoa ulertzeko gai izango da, programazio ingurumen bezala ez baita kodean gehiegi sartzen, pythonekin hasteko aukera ona izanez.\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Educational",
        "Hardware",
        "Hardware"
      ],
      "emails": "lozaeta001@gmail.com",
      "language": "Basque",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/endor-ipuinak-kontatzen-zituen-nao-robota",
      "admin_type": "",
      "companies": ""
    },
    "531": {
      "abstract_short": "Charla que explica qu\u00e9 es Unicode y otros conceptos relacionados para poder usar esta tecnolog\u00eda",
      "sub_title": "Cansados de los UnicodeDecodeEncodeErrors? Frenen ese desastre! Vengan y entiendan Unicode :)",
      "timerange": "2016-07-19 15:45:00, 2016-07-19 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@facundobatista",
      "id": 531,
      "speakers": "Facundo Batista",
      "title": "Entendiendo Unicode",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Python 3",
        "Python general",
        "Python 2"
      ],
      "abstract_long": [
        "La charla muestra de forma te\u00f3rica/pr\u00e1ctica qu\u00e9 son Unicode, las planillas de c\u00f3digos, los caracteres, y las codificaciones, entra en detalle en las distintas codificaciones, para saber c\u00f3mo usarlas, ejemplifica las reglas de oro para utilizar Unicode en nuestros programa, y termina mostrando algunas funciones \u00fatiles para el manejo de esa tecnolog\u00eda."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Python",
        "Python"
      ],
      "emails": "facundobatista@gmail.com",
      "language": "Spanish",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/entendiendo-unicode",
      "admin_type": "",
      "companies": "Canonical"
    },
    "442": {
      "abstract_short": "Python, as well as offering an ecosystem of tools for testing security and application pentesting.Python offers a tool ecosystem for developing our own tools security for testing applications and the servers security,identifying information about servers and potential vulnerabilities.\r\n\r\nThe ultimate objective is show a pentesting tool integrating some of the modules commented and try a demo showing info about our domain target and find vulnerabilities in it,\r\n",
      "sub_title": "",
      "timerange": "2016-07-21 11:15:00, 2016-07-21 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@jmortegac",
      "id": 442,
      "speakers": "Jose Manuel Ortega",
      "title": "Ethical hacking with Python tools",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Security",
        "Tooling",
        "Science Track",
        "Development"
      ],
      "abstract_long": [
        "Nowdays, Python is the language more used for developing tools within the field of security. Many of the tools can be found today as port scanner, vulnerability analysis, brute force attacks and hacking of passwords are written in python. The goal of the talk would show the tools available within the Python API and third-party modules  for developing our own pentesting and security tools and finally show a pentesting tool integrating some of the modules.\r\n\r\nThe main topics of the talk could include:\r\n\r\n**1.Enter Python language as platform for developing security tools**\r\n\r\nIntroduction about the main libraries we can use for introducing in development of security    tools such as socket and requests.\r\n\r\n**2.Libraries for obtain servers information such as Shodan, pygeocoder,pythonwhois**\r\n\r\nShodan is a search engine that lets you find specific computers (routers, servers, etc.) and get information about ports and services that are opened.\r\n\r\n**3.Analysis and metadata extraction in Python for images and documents**\r\n\r\nShow tools for scraping web data and obtain metadata information  in documents and images\r\n\r\n**4.Port scanning with tools like python-nmap**\r\n\r\nWith python-nmap module we can check ports open for a target ip or domain.\r\n\r\n**5.Check vulnerabilities in FTP and SSH servers**\r\n\r\nWith libraries like ftplib and paramiko we can check if the server is vulnerable to ftp and ssh anonymous connections.\r\n\r\n"
      ],
      "abstract_extra": "I will discuss some of the tools that can be found in\r\n\r\nhttp://www.pythonsecurity.org/libs\r\n\r\nand i will show a practice pentesting tool where we can found integrated all tools mentioned,this tool is available in my github repository \r\n\r\nhttps://github.com/jmortega/python-pentesting\r\n\r\nI have been speaker in some python conferences like europython and pycones in 2015.\r\n\r\nIn my speakerdeck space you can see my presentations,some relationed with python https://speakerdeck.com/jmortega",
      "tag_categories": [
        "Security",
        "Programming",
        ">>> Suggested Track",
        "Programming"
      ],
      "emails": "jmoc25@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/ethical-hacking-with-python-tools",
      "admin_type": "",
      "companies": ""
    },
    "652": {
      "abstract_short": "During the last CPython sprints at PyCon US (Montreal), I started to contribute to the CPython project and I\r\nwanted to understand the beast.\r\nIn this case, there is only one solution, trace the code from the beginning.\r\nFrom the command line to the interpreter, we will take part to an adventure. The idea behind is just to show how CPython works for a new contributor.",
      "sub_title": "",
      "timerange": "2016-07-19 15:45:00, 2016-07-19 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@matrixise",
      "id": 652,
      "speakers": "Stephane Wirtel",
      "title": "Exploring our Python Interpreter",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python 3",
        "CPython",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "During my last CPython sprint, I started to contribute to the CPython code and I\r\nwanted to understand the beast.\r\n\r\nIn this case, there is only one solution, trace the code from the beginning.\r\nFrom the command line to the interpreter, we will take part to an adventure\r\n\r\n* Overview of the structure of the project and the directories.\r\n* From the Py_Main function to the interpreter.\r\n* The used technics for the Lexer, Parser and the generation of the AST and of\r\ncourse of the Bytecodes.\r\n* We will see some bytecodes with the dis module.\r\n* How does VM works, it's a stack machine.\r\n* The interpreter and its main loop of the Virtual Machine.\r\n\r\nThe idea behind is just to show how CPython works for a new contributor to\r\nCPython.\r\n\r\nFrom the command line, we will learn that Python is a library and that we can\r\nembed it in a C project. In fact we will see the Py_Main function to the ceval.c\r\nfile of the interpreter.\r\n\r\nBut there is no magic in the CPython code, we will travel in the lexer and the\r\nparser of CPython, and why not, by the AST for one Python expression.\r\n\r\nAfter the AST, we will visit the Compiler and the Bytecodes for the\r\ninterpreter.\r\nOf course, we will learn there is the peepholer where some basic instructions\r\nare optimised by the this component.\r\n\r\nAnd of course, the interpreter, this virtual machine is really interesting for\r\nthe newbiew, because it's a big stack where the bytecodes are executed one by\r\none on the stack and the ceval.c file."
      ],
      "abstract_extra": "1. Intro (2 min)\r\n   1. Who am I?\r\n   2. Why we will visit the interpreter\r\n2. How to start ? (5 min)\r\n   1. The DevGuide\r\n   2. The Core Mentorship\r\n   3. Directories of Python \r\n3. What's the result of python -c \"x = 2 + 2\"? (20 min)\r\n   1. Command line \r\n   2. Lexer, Parser\r\n   3. Compiler \r\n   4. Bytecodes\r\n   5. Peepholer\r\n   4. Interpreter\r\n4. How to contribute (3min)\r\n\r\nAlready presented at PyCon Ireland 2015 and PyCon Canada 2015 at Toronto and PythonFOSDEM 2016 in Brussels.\r\nYou can find the slides at this address:\r\n\r\nhttps://speakerdeck.com/matrixise/exploring-our-python-interpreter",
      "tag_categories": [
        "Python",
        "Python",
        "Python"
      ],
      "emails": "stephane@wirtel.be",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/exploring-our-python-interpreter",
      "admin_type": "",
      "companies": "Mgx.IO"
    },
    "433": {
      "abstract_short": "Do you ever wonder how your Python code looks to the interpreter? What those `.pyc` files are? Why one program outperforms another, even if the code is similar? Then let\u2019s dive into Python bytecode! Bytecode is the \"intermediate language\" that expresses your source code as machine instructions the interpreter can understand. In this talk we\u2019ll see what role it plays in executing Python programs, learn to read it with the `dis` module, and analyze it to better understand a program\u2019s performance.",
      "sub_title": "What it is, how to read it, and why you should care",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@AnjanaVakil",
      "id": 433,
      "speakers": "Anjana Vakil",
      "title": "Exploring Python Bytecode",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "CPython",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "Do you ever wonder what your simple, beautiful Python code looks like to the interpreter? Are you starting to get curious about those `.pyc` files that always pop up in your project, and you always ignore? Would you like to start investigating your Python code's performance, and learn why some programs you write run faster than others, even if the code looks more or less the same? Have you simply fallen so completely in love with Python that you're ready to peer deep inside its soul?\r\n\r\nIf you, like me, answered \"yes\" to any of these questions, join me in an illuminating adventure into the world of Python bytecode! Bytecode is the \"intermediate language\" that expresses your Python source code as machine instructions the interpreter (specifically CPython, the \"standard\" interpreter) can understand. Together we'll investigate what that means, and what role bytecode plays in the execution of a Python program. We'll discover how we simple humans can read this machine language using the `dis` module, and inspect the bytecode for some simple programs. We'll learn the meaning of a few instructions that often appear in our bytecode, and we'll find out how to learn the rest. Finally, we'll use bytecode to understand why a piece of Python code runs faster if we put it inside of a function.\r\n\r\nWhen you go home, you'll be able to use bytecode to get a deeper understanding of your Python code and its performance. The adventure simply starts here; where it ends is up to you!\r\n\r\n"
      ],
      "abstract_extra": "Approximate timeline (30 minute talk):\r\n\r\n  - :00 - Hello: Speaker intro. Gauge audience experience with bytecode. (1 min.)\r\n  - :01 - What does the interpreter do? What is bytecode? What are .pyc files? (5 min.)\r\n  - :06 - The dis module: What is it for? What objects can it be used on? How? (3 min.)\r\n  - :09 - Understanding bytecode: Examples. What does each column mean? What are some common opcodes? (10 min.)\r\n  - :19 - Case study: Python code runs faster inside of a function; different operations in the bytecode let us understand the performance difference (5 min.)\r\n  - :24 - Further resources (1 min.)\r\n  - :25 - Q&A (5 min.)\r\n\r\nAs far as I can tell, the last time a talk on this subject was given at EuroPython, it was by Larry Hastings in 2013 [(abstract and video )][1]. My talk will differ from his in that:\r\n\r\n  - It will be only a 30-minute introduction\r\n  - It will be accessible even to beginners\r\n  - It will provide motivation to learn about bytecode even if you\u2019re not (planning to be) a CPython core developer\r\n  - It will only cover disassembling CPython bytecode using the `dis` module\r\n\r\nI haven't given a talk at EuroPython or another Python conference before, but I have public speaking experience in the form of several talks at academic conferences, on subjects related to software and research for computational linguistics. A list of my previous talks (with links to slides) is available at [ https://vakila.github.io/talks/][2]. \r\n\r\nIn December 2015 I gave a lightning talk on this subject to an audience of approximately 50 developers at the Recurse Center [(https://www.recurse.com/)][3]; unfortunately the talk was not recorded and did not use slides.\r\n\r\nIf you have any questions, need clarification, or have any other feedback on this proposal, please do get in touch. I\u2019m best reached by email, but I will be on holiday with limited internet access from February 29 to March 7.\r\n\r\n  [1]: https://ep2013.europython.eu/conference/talks/all-singing-all-dancing-python-bytecode\r\n  [2]: https://vakila.github.io/talks/\r\n  [3]: https://www.recurse.com/",
      "tag_categories": [
        "Python",
        "Python"
      ],
      "emails": "anjanavakil@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/exploring-python-bytecode",
      "admin_type": "",
      "companies": "Mozilla"
    },
    "494": {
      "abstract_short": "Learn how to use the new async/await language feature to write asynchronous code in Python and [Cython][1]. See how to benefit from the excellent low-level features that Cython provides to speed up or parallelise your code, interface natively with external C/C++ code, and achieve better responsiveness and lower latency also in mostly I/O bound applications.\r\n\r\n  [1]: http://cython.org/",
      "sub_title": "How to simply get more out of your async applications with Cython",
      "timerange": "2016-07-18 11:15:00, 2016-07-18 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 494,
      "speakers": "Stefan Behnel",
      "title": "Fast Async Code with Cython and AsyncIO",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Cython",
        "ASYNC / Concurreny",
        "Web Track",
        "C-Languages",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "Python has recently seen a fresh development boost around asynchronous applications, triggered by the addition of the asyncio library and the new async/await language features in Python 3.5, but coming from a world of well established tools like [Twisted][2] and [Tornado][3]. The [Cython][1] compiler, which compiles Python code to C, has accompanied and influenced this development. It provides full language support for async/await under all Python versions starting from 2.6, as well as native interoperability with existing Python code and the new Python coroutines in Python 3.5.\r\n\r\nBenchmarks show that, while fully compatible, Cython compiled coroutines perform about 2-3x better than the same code executed in Python, but they additionally allow to interface natively with external C/C++ code, release the GIL, do parallel computation, and much more. All of this extends the applicable zone for asynchronous applications dramatically and can lead to better responsiveness and lower latency also for mostly I/O bound applications.\r\n\r\nThis joined talk by an async I/O expert and one of the Cython core developers explains how to write code with async/await in Python and Cython, and shows how to benefit from the excellent low-level features that Cython provides on top of Python.\r\n\r\n  [1]: http://cython.org/\r\n  [2]: https://twistedmatrix.com/\r\n  [3]: http://www.tornadoweb.org/\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming",
        ">>> Suggested Track",
        "Other Programming Languages",
        "Python"
      ],
      "emails": "pycon@behnel.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/fast-async-code-with-cython-and-asyncio",
      "admin_type": "",
      "companies": "Skoobe"
    },
    "522": {
      "abstract_short": "The Python language is hard to optimize. Let's see how guards checked at runtime allows to implement new optimizations without breaking the Python semantic.",
      "sub_title": "New exciting optimizations projects are coming into the next 3.6 release of CPython!",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@VictorStinner",
      "id": 522,
      "speakers": "Victor Stinner",
      "title": "FAT Python: a new static optimizer for Python 3.6",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Performance",
        "Code Analysis",
        "CPython",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "(Almost) everything in Python is mutable which makes Python a language very difficult to optimize. Most optimizations rely on assumptions, for example that builtin functions are not replaced. Optimizing Python requires a trigger to disable optimization when an assumption is no more true. FAT Python exactly does that with guards checked at runtime. For example, an optimization relying on the builtin len() function is disabled when the function is replaced.\r\n\r\nGuards allows to implement various optimizations. Examples: loop unrolling (duplicate the loop body), constant folding (propagates constants), copy builtins to constants, remove unused local variables, etc.\r\n\r\nFAT Python implements guards and an optimizer rewriting the Abstract Syntax Tree (AST). The optimizer is implemented in Python so it's easy to enhance it and implement new optimizations.\r\n\r\nFAT Python uses a static optimizer, it is less powerful than a JIT compiler like PyPy with tracing, but it was written to be integrated into CPython.\r\n\r\nI wrote 3 PEP (509, 510, 511) targeting Python 3.6. Some changes to support FAT Python have already been merged into Python 3.6.\r\n\r\nWe will also see other pending patches to optimize CPython core, and the bytecode project which allows to modify bytecode, it also includes a peephole optimizer written in pure Python.\r\n\r\nLinks:\r\n\r\n*  http://faster-cpython.readthedocs.org/fat_python.html\r\n* http://fatoptimizer.readthedocs.org/\r\n* http://bytecode.readthedocs.org/",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Programming",
        "Programming",
        "Python",
        "Python"
      ],
      "emails": "victor.stinner@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/fat-python-a-new-static-optimizer-for-python-36",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "718": {
      "abstract_short": "FBTFTP: facebook's opensource framework for creating dynamic TFTP servers in Python3.",
      "sub_title": "",
      "timerange": "2016-07-18 12:00:00, 2016-07-18 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@pallotron",
      "id": 718,
      "speakers": "Angelo Failla",
      "title": "FBTFTP: Facebook's open source python3 framework for dynamic TFTP servers.",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Python 3",
        "System Architecture",
        "Infrastructure",
        "Open-Source",
        "Scaling"
      ],
      "abstract_long": [
        "TFTP was first standardized in '81 (same year I was born!) and one of its primary uses is in the early stage of network booting. TFTP is very simple to implement, and one of the reasons it is still in use is that its small footprint allows engineers to fit the code into very low resource, single board computers, system-on-a-chip implementations and mainboard chipsets, in the case of modern hardware.\r\n\r\nIt is therefore a crucial protocol deployed in almost every data center environment. It is used, together with DHCP, to chain load Network Boot Programs (NBPs),  like Grub2 and iPXE. They allow machines to bootstrap themselves and install operating systems off of the network, downloading kernels and initrds via HTTP and starting them up.\r\n\r\nAt Facebook, we have been using the standard in.tftpd daemon for years, however, we started to reach its limitations.\r\nLimitations that were partially due to our scale and the way TFTP was deployed in our infrastructure, but also to the protocol specifications based on requirements from the 80's.\r\n\r\nTo address those limitations we ended up writing our own framework for creating dynamic TFTP servers in Python3, and we decided to open source it.\r\n\r\nI will take you thru the framework and the features it offers. I'll discuss the specific problems that motivated us to create it. We will look at practical examples of how touse it, along with a little code, to build your own server that are tailored to your own infra needs.",
        "",
        "",
        ""
      ],
      "abstract_extra": "Previous talks I have given can be found http://lanyrd.com/profile/pallotron/sessions/",
      "tag_categories": [
        "Python",
        "DevOps",
        "DevOps",
        "Open Source",
        "DevOps"
      ],
      "emails": "pallotron@fb.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/fbtftp-facebooks-python3-framework-for-tftp-servers",
      "admin_type": "",
      "companies": "Facebook Ireland"
    },
    "569": {
      "abstract_short": "Sometimes it's hard to decide when a something is really done or cannot be improved further. \r\n**Game theory** can help you to make complicated decisions whenever you encounter flow problems.",
      "sub_title": "Solving Flow Problems with Game Theory",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@hendorf",
      "id": 569,
      "speakers": "Alexander Hendorf",
      "title": "Game Theory to the Rescue When Hard Decisions Are to Be Made",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Software Design",
        "Use Case",
        "Business Track"
      ],
      "abstract_long": [
        "Sometimes it's hard to decide when a something is really done or cannot be improved further. \r\n**Game theory** can help you to make complicated decisions whenever you encounter flow problems.\r\n\r\nGame theory is \"the study of mathematical models of conflict and cooperation between intelligent rational decision-makers.\" \r\n\r\nIn our use case we had to match data  for accounting:  -  the data was not always clean but we had some extra tools at hand and a complex system to make good guesses. Nevertheless it was hard to decide when to give up, some records were just not processable.\r\nFinally we used Game theory to make the decision.\r\n\r\nhttps://en.wikipedia.org/wiki/Game_theory\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        ">>> Suggested Track"
      ],
      "emails": "hendorf@opotoc.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/game-theory-to-the-rescue-when-hard-decisions-are-to-be-made",
      "admin_type": "",
      "companies": "K\u00f6nigsweg GmbH"
    },
    "499": {
      "abstract_short": "Airflow (https://github.com/airbnb/airflow) is an open source Python package from Airbnb to control your workflows.\r\n\r\nThis talk will explain the concepts behind Airflow, demonstrating how to define your own workflows in Python code and how to extend the functionality with new task operators and UI blueprints by developing your own plugins. You'll also get to hear about our experiences at Blue Yonder,  using this tool in real-world scenarios.",
      "sub_title": "",
      "timerange": "2016-07-20 15:45:00, 2016-07-20 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ctrebing",
      "id": 499,
      "speakers": "Christian Trebing",
      "title": "Get in control of your workflows with Airflow",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Architecture",
        "Best Practice"
      ],
      "abstract_long": [
        "Whenever you work with data, sooner or later you stumble across the definition of your workflows. At what point should you process your customer's data? What subsequent steps are necessary? And what went wrong with your data processing last Saturday night?\r\n\r\nAt Blue Yonder we use Airflow (https://github.com/airbnb/airflow), an open source Python package from Airbnb to solve these problems. It can be extended with new functionality by developing plugins in Python, without the need to fork the repo. With Airflow, we define workflows as directed acyclic graphs and get a shiny UI for free. Airflow comes with some task operators which can be used out of the box to complete certain tasks. For more specific cases, tasks can be developed by the end user. Best of all: even the configuration is done completely in Python!\r\n\r\nThis talk will explain the concepts behind Airflow, demonstrating how to define your own workflows in Python code and how to extend the functionality with new task operators and UI blueprints. You'll also get to hear about our experiences using this tool in real-world scenarios."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases"
      ],
      "emails": "christian.trebing@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/get-in-control-of-your-workflows-with-airflow",
      "admin_type": "",
      "companies": "Blue Yonder GmbH"
    },
    "383": {
      "abstract_short": "To get real time insight into your running applications you need to instrument them and collect metrics: count events, measure times, expose numbers. Sadly this important aspect of development was a patchwork of half-integrated solutions for years. Prometheus changed that and this talk will walk you through instrumenting your apps and servers, building dashboards, and monitoring using metrics.",
      "sub_title": "How Prometheus Can Unify Your Metrics",
      "timerange": "2016-07-22 10:30:00, 2016-07-22 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@hynek",
      "id": 383,
      "speakers": "Hynek Schlawack",
      "title": "Get Instrumented!",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Performance",
        "Best Practice",
        "Operations",
        "DevOps general",
        "Use Case"
      ],
      "abstract_long": [
        "Metrics are highly superior to logging in regards of understanding the past, presence, and future of your applications and systems.  They are cheap to gather (just increment a number!) but setting up a metrics system to collect and store them is a major task.\r\n\r\nYou may have heard of statsd, Riemann, Graphite, InfluxDB, or OpenTSB.  They all look promising but on a closer look it\u2019s apparent that some of those solutions are straight-out flawed and others are hard to integrate with each other or even to get up and running.\r\n\r\nThen came Prometheus and gave us independence of UDP, no complex math in your application, multi-dimensional data by adding labels to values (no more server names in your metric names!), baked in monitoring capabilities, integration with many common systems, and official clients for all major programming languages.  In short: a *unified* way to gather, process, and present metrics.\r\n\r\nThis talk will:\r\n\r\n1. explain why you want to collect metrics,\r\n1. give an overview of the problems with existing solutions,\r\n1. try to convince you that Prometheus may be what you\u2019ve been waiting for,\r\n1. teach how to impress your co-workers with beautiful graphs and intelligent monitoring by putting a fully instrumented Python application into production,\r\n1. and finally give you pointers on how to migrate an existing metrics infrastructure to Prometheus *or* how to integrate Prometheus therein.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "# Notes\r\n\r\nLast year I spoke about metrics and logging in general.  People approached me afterwards expressing interest in metrics but felt lost.  And truth to be told, back then the metrics landscape was not very good.\r\n\r\nThe rise of [Prometheus](http://prometheus.io) with decent Python integration changed that considerably.  It\u2019s possible to have one coherent metrics platform for both system and app metrics (in various programming languages) and even get monitoring for free.\r\n\r\nTherefore, as a follow-up, I want to do this kind-of case study on how I\u2019ve harmonized our metrics.  The talk will **not** build on the older one though.\r\n\r\nThe key idea is to start from nothing and ending up with a well-instrumented system including monitoring.  I don\u2019t believe there\u2019s ever been a comparable talk.\r\n\r\n# Technical Aptitude\r\n\r\nI\u2019ve implemented most of [Variomedia](http://www.variomedia.de)\u2019s metrics infrastructure using Graphite and later moved it to Prometheus.  Therefore I know both sides of the coin.  I\u2019m also working on the [asyncio/Twisted integration](https://github.com/hynek/prometheus_async/) for the Prometheus Python client.\r\n\r\nIn general OSS terms, I\u2019m a PSF fellow, a dormant CPython core dev, an active Twisted core dev, help out in way too many projects, and have a fair share of [own projects](https://github.com/hynek/) too.\r\n\r\n\r\n# Speaking Experience\r\n\r\nThis talk has been [accepted](https://us.pycon.org/2016/schedule/presentation/1601/) to PyCon US.  People already [expressed their hopes](https://twitter.com/d0ugal/status/695678965529374720) that I submit it to EP too.\r\n\r\nOther than that, I\u2019ve spoken at the past three PyCon US ([deployments](https://hynek.me/talks/python-deployments/), [TLS](https://hynek.me/talks/tls/), and [Loggging/Metrics](https://hynek.me/talks/beyond-grep/)), the past three EuroPythons (same), PyCon Russia 2014 (TLS, invited speaker), PyCon PL 2014 (TLS, invited speaker), PiterPy 2015 (Logging/Metrics, invited speaker), PyCon JP 2015 (Logging/Metrics, keynote).  From what I gather from the feedback and buzz, I think it\u2019s fair to say that my talks have been well-received so far.  Especially because I try to make them both informative *and* entertaining at once.\r\n\r\nI put a *lot* of effort into my talks: I start at least three months prior to the conference and work, polish, and practice until EP.  Therefore I\u2019m hopeful to deliver another popular talk.  Of course, there will be a accompanying page again like in the previous years.\r\n\r\n# Preliminary Outline\r\n\r\n1. Prometheus\r\n\t- short history\r\n\t- philosophy\r\n\t\t- push vs. pull\r\n\t\t- simplest math in-app\r\n\t- why no statsd/Graphite?\r\n\t\t- UDP\r\n\t\t\t- more load = more packets\r\n\t\t\t- lots of load = lost packets\r\n\t\t- one-dimensional data (e.g. `app.server1.process5.request_time` instead of `app.request_time` with tags/labels with metadata)\r\n\t- presentation of result: beautiful dashboard & working monitoring\r\n1. System Metrics\r\n\t- `node_exporter` for native system metrics\r\n\t- examples of other popular exporters like nginx\r\n\t- `collectd_exporter` and `graphite_exporter` as bridges while transitioning\r\n1. Instrumenting Your App [*concrete* examples]\r\n\t- general considerations\r\n\t\t- what to measure\r\n\t\t- how to avoid code duplication\r\n\t\t- protecting your exposed metrics\r\n\t- example: long-running web app (simple pyramid or flask app with DB & caching)\r\n\t- example: batch job (e.g. a backup)\r\n\t- example: asyncio (simple echo server or something similar)\r\n\t- example: Twisted (same)\r\n\t- opaque cloud environments\r\n\t\t- how does heroku fit in?\r\n1. Visualisation\r\n\t- building queries in the integrated graph browser\r\n\t- Grafana\r\n\t\t- building beautiful and useful dashboards\r\n\t\t- correlating system metrics with app metrics\r\n1. Monitoring\r\n\t- defining alerts\r\n\t- integration with 3rd parties (e.g. PagerDuty, nagios)\r\n1. Next Steps\r\n\t- how to fully automate metrics endpoint discovery (e.g. consul)\r\n\t- long term metrics storage",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "DevOps",
        "DevOps",
        "Best Practice and Use Cases"
      ],
      "emails": "schlawack@variomedia.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/get-instrumented",
      "admin_type": "",
      "companies": "Variomedia AG"
    },
    "672": {
      "abstract_short": "A side-by-side walkthrough of basic Go syntax and semantics compared to Python.",
      "sub_title": "A side-by-side walkthrough of basic Go syntax and semantics compared to Python",
      "timerange": "2016-07-19 14:30:00, 2016-07-19 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@STajbakhsh",
      "id": 672,
      "speakers": "Shahriar Tajbakhsh",
      "title": "Go for Python Programmers",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python general",
        "Data Structures",
        "Programming",
        "Go-Lang"
      ],
      "abstract_long": [
        "A side-by-side walkthrough of basic Go syntax and semantics compared to Python."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming",
        "Programming",
        "Other Programming Languages"
      ],
      "emails": "sh.tajbakhsh@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/go-for-python-programmers",
      "admin_type": "",
      "companies": "Osper"
    },
    "626": {
      "abstract_short": "Grocker is a Docker build chain for Python. It transforms your Python package into a self-contained Docker image which can be easily deployed in a Docker infrastructure. Grocker also adds a Docker entry point to easily start your application.",
      "sub_title": "",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 626,
      "speakers": "Fabien Bochu",
      "title": "Grocker, a Python build chain for Docker",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Docker"
      ],
      "abstract_long": [
        "At Polyconseil, we build Paris electric car sharing service: Autolib'. This system is based on many services developed using web technologies, Django and our own libraries to handle business logic.\r\n\r\nPackaging is already a difficult problem, deploying large Python projects is even more difficult. When deploying on a live and user-centric system like Autolib', you cannot rely on Pip and external PyPI servers which might become unavailable and are beyond your control. In the beginning we used classic Debian packaging: it was a maintenance hell. It took hours to build our packages and update their metadata to match our Python packages. So we switched to Docker.\r\n\r\nDocker allows us to have a unique item that is deployed in production systems: code updates are now atomic and deterministic! But before deploying the Docker image, you need to build it. That's where Grocker comes in.\r\n\r\nGrocker is a Docker build chain for Python. It will transform your Python package into a self-contained Docker image which can be easily deployed in a Docker Infrastructure. Grocker also adds a Docker entry point to easily start your application.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "DevOps"
      ],
      "emails": "fabien.bochu@polyconseil.fr",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/grocker-a-python-build-chain-for-docker",
      "admin_type": "",
      "companies": "Polyconseil"
    },
    "463": {
      "abstract_short": "El objetivo de la charla ser\u00eda mostrar las herramientas que disponemos dentro de la propia API de Python y librer\u00edas de terceros para  desarrollar nuestras propias herramientas que permitan realizar pruebas de seguridad y de pentesting de las aplicaciones.",
      "sub_title": "Pentesting con python",
      "timerange": "2016-07-19 12:00:00, 2016-07-19 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@jmortegac",
      "id": 463,
      "speakers": "Jose Manuel Ortega",
      "title": "Hacking \u00e9tico con herramientas Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Security",
        "Privacy",
        "Science Track",
        "Development",
        "Cryptography"
      ],
      "abstract_long": [
        "Python se ha convertido en el lenguaje m\u00e1s usado para desarrollar herramientas dentro del \u00e1mbito de la seguridad.\r\nMuchas de las herramientas que podemos encontrar hoy en d\u00eda como esc\u00e1ner de puertos, an\u00e1lisis de vulnerabilidades, ataques por fuerza bruta y hacking de passwords, se han escrito en este lenguaje ,adem\u00e1s de ofrecer un ecosistema de herramientas para realizar pruebas de seguridad y de pentesting de aplicaciones. \r\n\r\nEntre los puntos a tratar podr\u00edamos destacar: \r\n\r\n - **Introducir Python como lenguaje de desarrollo de herramientas de seguridad**\r\n - **Introducir librer\u00edas para obtener informaci\u00f3n de nuestro objetivo como Shodan,pygeocoder,pygeoip**\r\n - **An\u00e1lisis y extracci\u00f3n de metadatos en Python en im\u00e1genes y documentos** \r\n - **An\u00e1lisis de puertos con herramientas como python-nmap**\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "Comentar\u00e9 algunas de las herramientas que podemos encontrar en http://www.pythonsecurity.org/libs y como demo pr\u00e1ctica mostrar\u00e9 una herramienta de pentesting creada desde cero con algunos de los m\u00f3dulos que comentar\u00e9. \r\n\r\nHe impartido algunas charlas sobre seguridad en algunas conferencias.\r\nLas presentaciones de las charlas que he impartido se pueden ver en:\r\nhttps://speakerdeck.com/jmortega",
      "tag_categories": [
        "Security",
        "Security",
        ">>> Suggested Track",
        "Programming",
        "Security"
      ],
      "emails": "jmoc25@gmail.com",
      "language": "Spanish",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/hacking-etico-con-herramientas-python",
      "admin_type": "",
      "companies": ""
    },
    "456": {
      "abstract_short": "If you have ever happened to need to deal with GPS data in Python you may have felt a bit lost.  This talk presents libraries starting from basic reading and writing GPS tracks in the GPS Exchange Format to adding missing elevation information. Also visualisation of tracks on OpenStreetmap data with interactive plots in Jupyter notebooks is covered. Additionally common algorithms for GPS like Douglas-Peucker and Kalman filter are explained.",
      "sub_title": "Reading, writing, handling and visualizing GPS data",
      "timerange": "2016-07-22 11:15:00, 2016-07-22 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@FlorianWilhelm",
      "id": 456,
      "speakers": "Florian Wilhelm",
      "title": "Handling GPS Data with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Visualization",
        "Science",
        "Jupyter/iPython Notebook",
        "Sensors"
      ],
      "abstract_long": [
        "If you have ever happened to need to deal with GPS data in Python you may have felt a bit lost. There are many libraries at various states of maturity and scope. Finding a place to start and to actually work with the GPS data might not be as easy and obvious as you might expect from other Python domains. \r\nInspired from my own experiences of dealing with GPS data in Python, I want to give an overview of some useful libraries. From basic reading and writing GPS tracks in the GPS Exchange Format with the help of gpxpy to adding missing elevation information with srtm.py. Additionally, I will cover mapping and visualising tracks on OpenStreetmap with mplleaflet that even supports interactive plots in a Jupyter notebook.\r\nBesides the tooling, I will also demonstrate and explain common algorithms like Douglas-Peucker to simplify a track and the famous Kalman filters for smoothing. For both algorithms I will give an intuition about how they work as well as their basic mathematical concepts. Especially the Kalman filter that is used for all kinds of sensor, not only GPS, has the reputation of being hard to understand. Still, its concept is really easy and quite comprehensible as I will also demonstrate by presenting an implementation in Python with the help of Numpy and Scipy. My presentation will make heavy use of the Jupyter notebook which is a wonderful tool perfectly suited for experimenting and learning.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "Hi there,\r\n\r\nyou can find more information about me on the [homepage][1]. There you can also find the talks I have held before at EuroPython 2015/2014 etc. I submitted this additional talk if you find my first talk [Kalman and Bayesian Filters][2] maybe too technical or too much focused on mathematics. This talk will be more practical and Python programming oriented.\r\nI am looking forward to EuroPython 2016 in Bilbao!\r\n\r\nBest regards from Cologne,\r\nFlorian\r\n\r\n  [1]: http://www.florianwilhelm.info/\r\n  [2]: https://ep2016.europython.eu/conference/talks/kalman-and-bayesian-filters-in-python\r\n",
      "tag_categories": [
        "Data Science",
        "Sciences",
        "Python",
        "Hardware"
      ],
      "emails": "florian.wilhelm@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/handling-gps-data-with-python",
      "admin_type": "",
      "companies": "inovex"
    },
    "726": {
      "abstract_short": "Scaling a project to a worldwide scale with the same performance and availability in every region using Python isn\u2019t easy, but with the right mindset and tools it\u2019s a very viable target.",
      "sub_title": "",
      "timerange": "2016-07-21 16:15:00, 2016-07-21 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 726,
      "speakers": "John Kraal",
      "title": "High Availability Scaling with Share Nothing Architecture",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Security",
        "Data Structures",
        "Architecture",
        "Distributed Systems",
        "Scaling"
      ],
      "abstract_long": [
        "Scaling a project to a worldwide scale with the same performance and availability in every region using Python isn\u2019t easy, but with the right mindset and tools it\u2019s a very viable target. We will discuss methods of delivering software, with automated scaling systems, building units out of your project to manage separately and how to reliably and securely distribute data to separate clusters, and how we have achieved this with the use of Celery, Redis, Databases, Protobuf and other modern tools, whilst making sure to highlight our pitfalls and successes"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Security",
        "Programming",
        "Programming",
        "DevOps",
        "DevOps"
      ],
      "emails": "john@getbynder.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/high-availability-scaling-with-share-nothing-architecture",
      "admin_type": "",
      "companies": "Bynder"
    },
    "546": {
      "abstract_short": "The talk will cover new async/await syntax in Python, asyncio library and ecosystem around it, and ways to use them for creating high performance servers. It will explain how to build custom event loops for asyncio, with an example of using the libuv library with Cython to achieve 2-3x performance boost over vanilla asyncio. ",
      "sub_title": "Boosting asyncio performance 2x",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@1st1",
      "id": 546,
      "speakers": "Yury Selivanov",
      "title": "High Performance Networking in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python 3",
        "Performance",
        "Architecture",
        "Web Track",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "The talk will start with an overview of async/await syntax introduced with PEP 492 in Python 3.5. We'll go through asynchronous context managers and iteration protocols it introduces. I'll briefly explain how the feature is implemented in CPython core.\r\n\r\nThen we'll explore asyncio design. I'll briefly cover event loop, policies, transports, protocols and streams abstractions. I'll explain that event loops are pluggable, which really makes asyncio a universal framework.\r\n\r\nWe'll cover libuv - a high performance networking library that drives NodeJS. I'll highlight where it's similar to asyncio and how it's different.\r\n\r\nIn the final part of the talk I'll explain how to make an asyncio compatible event loop on top of libuv. I'll showcase Cython, which is an amazing tool for tasks like this.\r\n\r\nFinally, I'll share some ideas on how we can further improve the performance of asyncio and networking in Python, and what are the challenges that we will face.\r\n\r\n\r\n**Objectives:**\r\n\r\n1. Deeper understanding of async/await in Python and why it's important. \r\n2. Deeper understanding of asyncio architecture and protocols. \r\n3. How to improve asyncio performance by implementing custom event loops.\r\n4. Show that it's easy to integrate existing complex & low level libraries with Cython. \r\n5. Some perspective on how Python may evolve wrt networking.\r\n\r\n"
      ],
      "abstract_extra": "I'm an active maintainer of asyncio module (along with Guido van Rossum and Victor Stinner).  I think I have a rather unique inner-view at how asyncio works and where it will evolve in the coming years.\r\n\r\nI'm also the author and implementor of PEP 492 -- async/await syntax in Python 3.5.  I'm also working on a new PEP to add asynchronous generators in CPython 3.6.  I think it might be interesting for people to ask me some interesting questions about async/await and asynchronous Python programming in general.",
      "tag_categories": [
        "Python",
        "Programming",
        "Programming",
        ">>> Suggested Track",
        "Programming"
      ],
      "emails": "yury@magic.io",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/high-performance-networking-in-python",
      "admin_type": "",
      "companies": "MagicStack"
    },
    "744": {
      "abstract_short": "This talk will give an overview about the Intel\u00ae Distribution for Python which delivers high performance acceleration of Python code on Intel processors for scientific computing, data analytics, and machine learning.\r\n",
      "sub_title": "Development of high performance Python code for machine learning, analytics and HPC",
      "timerange": "2016-07-21 15:45:00, 2016-07-21 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 744,
      "speakers": "Ralph de Wargny",
      "title": "High Performance Python on Intel Many-Core Architecture",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "This talk will give an overview about the Intel\u00ae Distribution for Python which delivers high performance acceleration of Python code on Intel processors for scientific computing, data analytics, and machine learning. \r\nIn the first part of the talk, we'll look at the architecture of the latest Intel processors, including the brand new Intel Xeon Phi, also known as Knights Landing, a many-core processor, which was just released end of June 2016. \r\nIn the second part, we will see which tools and libraries are available from Intel Software to enable high performance Python code on multi-core and many-core processors.",
        "",
        "",
        ""
      ],
      "abstract_extra": "...",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "ralph.wargny@intel.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/high-performance-python-on-intel-architecture",
      "admin_type": "",
      "companies": "Intel Software"
    },
    "738": {
      "abstract_short": "This talk is a case-study of how Python (Pandas, NumPy, SciKit-learn) can be implemented to identify the influence of the potential drivers of a decline in size of Atlantic herring populations using Gradient Boosting Regression Trees. \r\n\r\n",
      "sub_title": "Predicting drivers of change with Gradient Boosting Regression Trees",
      "timerange": "2016-07-22 14:30:00, 2016-07-22 15:00:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 738,
      "speakers": "Olga Lyashevska",
      "title": "How can machine learning help to predict changes in size of Atlantic herring ?",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1 [PyData Track]",
      "tags": [
        "Science",
        "Predictions",
        "Case Study",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Machine-Learning"
      ],
      "abstract_long": [
        "A decline in size and weight of Atlantic herring  in the Celtic Sea has been observed since the mid-1980\u2019s.  The cause of the decline remains largely unexplained but is likely to be driven by the interactive effect of various endogenous and exogenous factors. The goal of this study is to interrogate a long time-series of biological data obtained from commercial fisheries from 1959 to 2012.  We use gradient boosting regression trees to identify important variables underlying changes in growth from various potential drivers, such as: \r\n- Atlantic multidecadal oscillation;\r\n- sea surface temperature;\r\n- salinity;\r\n- wind;\r\n- zooplankton abundance;\r\n- fishing pressure.\r\nThis learning algorithm allows to quantify the influence of the potential drivers of change with the test error lower when compared to other supervised learning techniques. The predictor variables importance spectrum (feature importance) helps to identify the underlying patterns and potential tipping points while resolving the external mechanisms underlying observed changes in size and weight of herring.  This analysis is a useful case-study of how Python can be implemented in academia.  The outputs of the analysis are of relevance to conservation efforts and sustainable fisheries management which promotes species resistance and resilience."
      ],
      "abstract_extra": "This research will be presented at International Statistical Ecology Conference in Seattle on June 28 - July 1st 2016 (http://depts.washington.edu/uwconf/wordpress/isec2016/). \r\nWhereas in Seattle I will mostly focus  on statistical model and ecological meaning of the findings, at EuroPython I would like to demonstrate the implementation of the analysis with Scikit-learn using IPython notebook. \r\n\r\n",
      "tag_categories": [
        "Sciences",
        "Data Science",
        "Case Study",
        "Data Science",
        "Data Science"
      ],
      "emails": "olga.lyashevska@gmit.ie",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/how-can-machine-learning-help-to-predict-changes-in-size-of-atlantic-herring",
      "admin_type": "",
      "companies": "Galway-Mayo Institute of Technology"
    },
    "496": {
      "abstract_short": "OpenStack is an infrastructure stack mostly developed in Python. In this talk, Thierry Carrez and Doug Hellmann, both Python Software Foundation fellows and OpenStack Technical Committee members, will look at the symbiotic relationship between OpenStack and Python.",
      "sub_title": "",
      "timerange": "2016-07-18 11:15:00, 2016-07-18 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@tcarrez, @doughellmann",
      "id": 496,
      "speakers": "Thierry Carrez, Doug Hellmann",
      "title": "How OpenStack makes Python better (and vice-versa)",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Best Practice",
        "failures/mistakes",
        "Test Driven Development (TDD)",
        "Development",
        "OpenStack"
      ],
      "abstract_long": [
        "OpenStack is an open source stack that can be deployed on raw computing resources to privately or publicly present Infrastructure as a Service. It now consists of more than 4.5 million lines of code, 85% of which is Python. In this talk, Thierry Carrez and Doug Hellmann, both Python Software Foundation fellows and OpenStack Technical Committee members, will look at the symbiotic relationship between OpenStack and Python.\r\n\r\nWe'll go back in history and explain why OpenStack originally picked Python as its main language 6 years ago, and explore what does Python bring to OpenStack. We'll dive into examples of OpenStack pushing Python libraries to their limits and exposing new bugs. We'll look into the massive cloud-based continuous integration system that OpenStack uses and explain how it exposes bugs in Python libraries in the minutes after they are published to PyPI. We'll look into Python libraries that were created by the OpenStack community and libraries that the OpenStack community took over. Finally we'll expose a few best practices that Python developers can follow to get the most of this symbiotic relationship.",
        "",
        "",
        ""
      ],
      "abstract_extra": "This 45-min talk would be created for EuroPython and could be made to last 30 or 60 min if that would be your preference. If selected, this talk would be co-presented by Thierry Carrez (see bio above) and Doug Hellmann.\r\n\r\nDoug has been employed to work on OpenStack full time for three years. He is a member of the Python Software Foundation, and served as its Communications Director from 2010-2012. After a year as a regular columnist for Python Magazine, he served as Editor-in-Chief from 2008-2009. Between 2007 and 2011, Doug published the popular \"Python Module of the Week\" series on his blog, and that material served as the basis for his book \"The Python Standard Library By Example\". He lives in Athens, Georgia.\r\n\r\nDoug presented at various Python conferences in the past, including PyCon in 2013 [https://us.pycon.org/2013/speaker/profile/297/][1].\r\n\r\nThierry presented OpenStack at EuroPython, back in 2011 [https://ep2013.europython.eu/conference/talks/snakes-on-a-cloud-a-presentation-of-the-openstack-project][2].\r\n\r\n  [1]: https://us.pycon.org/2013/speaker/profile/297/\r\n  [2]: https://ep2013.europython.eu/conference/talks/snakes-on-a-cloud-a-presentation-of-the-openstack-project\r\n",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Best Practice and Use Cases",
        "Testing",
        "Programming",
        "DevOps"
      ],
      "emails": "thierry.carrez@gmail.com, doug@doughellmann.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/how-openstack-makes-python-better-and-vice-versa",
      "admin_type": "",
      "companies": "OpenStack Foundation, Red Hat"
    },
    "435": {
      "abstract_short": "The popular board game of Risk has many fans around the world. \r\nUsing a Python-based simulation of the game, we try to answer several questions that went through the minds of many players:\r\n- Which missions are easiest to attain?\r\n- Does your starting position influence your chances?\r\n- Which regions are easiest to defend?",
      "sub_title": "analyzing the game of Risk with Python",
      "timerange": "2016-07-22 12:00:00, 2016-07-22 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 435,
      "speakers": "Rogier van der Geer",
      "title": "How to conquer the world",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Visualization",
        "Algorithms",
        "Predictions",
        "Performance",
        "Programming"
      ],
      "abstract_long": [
        "The popular board game of Risk has many fans around the world. \r\nUsing a Python-based simulation of the game, we try to answer several questions that went through the minds of many players;\r\n\r\n- Which missions are easiest to attain?\r\n- Does your starting position influence your chances?\r\n- Which regions are easiest to defend?\r\n\r\nDuring this talk we'll explain what genetic algorithms are and we'll explain an entertaining use-case: how to win at popular board games. During the talk we'll  demo how object oriented patterns help with the design and implementation of these algorithms. We'll also demonstrate a library that allows users to push their own risk bots into a game and battle it out on.",
        "",
        "",
        ""
      ],
      "abstract_extra": "Before joining GoDataDriven, Rogier obtained a PhD in particle physics. Rogier gained hands-on experience with handling enormous quantities of data and processing, or 'charming', them into a manageable format before performing complicated analyses. After his PhD he exchanged physical science for data science at GoDataDriven, where he is now putting his skills to use on more business-driven problems. He likes applying data science to anything; be it his daily commute, improving his photography skills or the contents of his lunch box.",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Programming",
        "Programming"
      ],
      "emails": "rogiervandergeer@godatadriven.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/a-genetic-algorithm-to-play-the-game-of-risk",
      "admin_type": "",
      "companies": "GoDataDriven"
    },
    "633": {
      "abstract_short": "Optimization in Python (also known as mathematical programming) can be performed by minimization (or maximization) of an objective function within a model that can include discrete variables subject to a set of constrains. At this talk, chemical engineering students of the University of Alicante will introduce the audience to the possibilities of optimization, presenting Pyomo and showing real world examples such as how to improve your diet and save money at fast food restaurants.\r\n\r\n",
      "sub_title": "Mathematical optimization with Pyomo or how to solve LP, NLP and MILP problems with Python",
      "timerange": "2016-07-19 11:15:00, 2016-07-19 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@zuriich92, @DanielDomeneL",
      "id": 633,
      "speakers": "Zuria Bauer, Daniel Domene L\u00f3pez",
      "title": "How to improve your diet and save money with Python",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Science",
        "Beginners",
        "Jupyter/iPython Notebook",
        "Engineering",
        "Science Track"
      ],
      "abstract_long": [
        "Process optimization in industry has become essential in order to maximize the resources available and reduce energy consumption.  \r\nOptimization problems become interesting when dealing with restrictions (linear or nonlinear) and integer variables (modeling the discrete decisions). Python ecosystem presents different libraries to solve optimization problems, some of them are CVXOpt, CVXPy, PulP, OpenOpt, or Pyomo. \r\nAmong them, Pyomo results interesting because:\r\n\r\n- It can be used for Mathematical modeling in Python similarly to AMPL (and GAMS)\r\n- It communicates with the main solvers used in this field such as GLPK, Gurobi, CPLEX, CBC and PICO\r\n- It's free and open source Python library (BSD license), being developed by Sandia National Laboratories, USA.\r\n- It supports Python 3 and it is easy to install.\r\n\r\nThe talk will be divided in three parts:\r\n\r\n1. _Introduction to Mathematical Programming/Optimization (15 min):_ visual introduction to optimization concepts including restrictions and non linearties (linear Programming, Nonlinear Programming, ILP, MIP, MINLP). \r\n\r\n2. _Introduction to the Pyomo sintax and a quick note for the installation (20 min):_ showing how to improve their diet and save money when ordering food in fast food restaurants.\r\n\t\r\n3. _Optimization problems in engineering (10 min):_ showing more advanced optimization examples that include decision variables.\r\n\r\n ",
        "",
        "",
        ""
      ],
      "abstract_extra": "The talk will be oriented to _beginners_ and will be given by _Chemical Engineering students_. Slides, Jupyter Notebooks will be available on [GitHub][1]\r\n\r\n  [1]: https://github.com/CAChemE/Mathematical-Optimization/\r\n",
      "tag_categories": [
        "Sciences",
        "Educational",
        "Python",
        "Everything Else",
        ">>> Suggested Track"
      ],
      "emails": "zuriich92@gmail.com, daniel.domene.lopez2@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/how-to-improve-your-diet-and-save-money-with-python",
      "admin_type": "",
      "companies": ", CAChemE"
    },
    "401": {
      "abstract_short": "This talk is for people who have a lot of floating numbers inside\r\nPostgreSQL tables. I will bring as an example my personal experience\r\nwith a scientific project that used PostgreSQL as storage for a rather\r\ncomplex set of composite multidimensional arrays and ran into all\r\nsorts of performances issues, both in reading and writing the data. I\r\nwill explain how I solved all that by dropping the database in favor\r\nof an HDF5 file, while keeping the application running and the users\r\nhappy.\r\n",
      "sub_title": "Refactoring a distributed parallel earthquake simulation engine",
      "timerange": "2016-07-22 11:15:00, 2016-07-22 12:00:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@",
      "id": 401,
      "speakers": "Michele Simionato",
      "title": "How to migrate from PostgreSQL to HDF5 and live happily ever after",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Algorithms",
        "Big Data",
        "Architecture",
        "Science Track",
        "Testing"
      ],
      "abstract_long": [
        "This talk is for people who have a lot of floating numbers inside\r\nPostgreSQL tables and have problems with that. I will narrate my\r\nexperience with a scientific project that used PostgreSQL as storage\r\nfor a rather complex set of composite multidimensional arrays and ran\r\ninto all sorts of performances issues, both in reading and writing the\r\ndata.  I will discuss the issues and the approach that was taken first\r\nto mitigate them (unsuccessfully) and then to remove them\r\n(successfully) by a complete rethinking of the underlying architecture\r\nand eventually the removal of the database. I will talk about the\r\nmigration strategies that were employed in the transition period and\r\nhow to live with a mixed environment of metadata in PostgreSQL and\r\ndata in an HDF5 file. I will also talk about concurrency, since the\r\nunderlying application is distributed and massively parallel, and\r\nstill it uses the purely sequential version of HDF5. Questions from\r\nthe audience are expected and welcome.\r\nThe talk is of interest to a large public, since it is mostly about\r\nmeasuring things, monitoring and testing a legacy system,\r\nmaking sure that the changes do not break the previous behavior\r\nand keeping the users happy, while internally rewriting\r\nall of the original code. And doing that in a small enough number of years!\r\n"
      ],
      "abstract_extra": "I am a well known Pythonista since 2002, I have spoken at the EuroPython conference several times in the past and I am also the author of the decorator module : https://pypi.python.org/pypi/decorator",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Programming",
        ">>> Suggested Track",
        "Testing"
      ],
      "emails": "michele.simionato@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/how-to-migrate-from-postgresql-to-hdf5-and-live-happily-ever-after",
      "admin_type": "",
      "companies": "GEM"
    },
    "737": {
      "abstract_short": "This presentation show how to deploy  **[Wendelin][1]**, the free software platform for Big Data & Machine Learning, using **[SlapOS][2]** , the free software hyperconverged Operating System (hOS).  Written in 100% in Python,  SlapOS and Wendelin, can create a complete Big Data Infraestruture with out-of-core capabilities ready to use and operate in just few hours.\r\n\r\n  [1]: http://www.wedelin.io\r\n  [2]: http://community.slapos.org\r\n",
      "sub_title": "Provisioning from sensors to out-of-core-pydata in few minutes",
      "timerange": "2016-07-18 14:45:00, 2016-07-18 15:30:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@ramonnerat",
      "id": 737,
      "speakers": "Rafael Monnerat",
      "title": "Hyperconvergence meets BigData",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Big Data",
        "Use Case",
        "Open-Source",
        "Deployment/Continuous Integration and Delivery",
        "Configuration Management (Ansible/Fabric/Chef/...)"
      ],
      "abstract_long": [
        "This presentation aims to demonstrate how to use [SlapOS][1] (Hyperconverged OS) to deploy an entire Big Data Infrastrucure and show how \"data life cycle\" can be managed with [Wendelin][2] - covering ingestion, analysis, visualization and weaving it into an application.\r\n\r\nWe'll show how Wendelin and SlapOS could handle acquisition, analysis and exploitation of data, making it a potential solution for IOT scenarios where data is available and needs some logic applied before being presented as web application, possibly on a commercial basis.\r\n\r\nThe agenda of the presentation includes an introduction on SlapOS, as a tool used to deploy a wide range of different services and an introduction of Wendelin, as a tool in order to make out-of-core python applications.\r\n\r\nAfter a short introduction, we progress to show the steps to deploy SlapOS infrastructure and later to deploy Wendelin on the just deployed SlapOS, including an use case which shows SlapOS deploying a fluentd instance to ingest data to the Wendelin Database.\r\n\r\nTo conclude, we make a live demo with an Jupiter using out-of-core python to handle wav files stored on Wendelin, and a second short demo on handle computer resources consumption data.\r\n\r\n  [1]: http://community.slapos.org\r\n  [2]: http://www.wendelin.io/\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        "Open Source",
        "DevOps",
        "DevOps"
      ],
      "emails": "rafael@nexedi.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/hyperconvergence-meets-bigdata",
      "admin_type": "",
      "companies": "Nexedi"
    },
    "408": {
      "abstract_short": "In an era of almost-unlimited textual data, accurate sentiment analysis can be the key for determining if our products, services and communities are delighting or aggravating others. We'll take a look at the sentiment analysis landscape in Python: touching on simple libraries and approaches to try as well as more complex systems based on machine learning.",
      "sub_title": "A Survey of Python Sentiment Analysis Tools",
      "timerange": "2016-07-21 14:30:00, 2016-07-21 15:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@kjam",
      "id": 408,
      "speakers": "Katharine Jarmul",
      "title": "I Hate You, NLP... ;)",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Natural Language Processing",
        "Algorithms",
        "failures/mistakes",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Overview\r\n-------------\r\n\r\nThis talk aims to introduce the audience to the wide array of tools available in Python focused on sentiment analysis. It will cover basic semantic mapping, emoticon mapping as well as some of the more recent developments in applying neural networks, machine learning and deep learning to natural language processing. Participants will also learn some of the pitfalls of the different approaches and see some hands-on code for sentiment analysis.\r\n\r\nOutline\r\n-----------\r\n* NLP: then and now\r\n* Why Emotions Are Hard\r\n* Simple Analysis\r\n  * TextBlob (& other available libraries)\r\n  * Bag of Words\r\n  * Naive Bayes\r\n* Complex Analysis\r\n  * Preprocessing with word2vec\r\n  * Metamind & RNLN\r\n  * Optimus & CNN\r\n  * TensorFlow\r\n  * Watson\r\n* Live Demo\r\n* Q&A\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "I've spoken at numerous conferences in the US about Python, and have written a book on data analysis with Python for O'Reilly. NLP has always been a side / passion project for me and I've recently been able to spend more time learning about the new tools available using deep learning and neural networks. I'm hoping to share what I've learned with others from a \"survey style\" perspective (rather than as an author of one of the libraries). I hope this perspective can add a bit of fun and humor to the talk as well :D",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Best Practice and Use Cases",
        "Data Science",
        "Data Science"
      ],
      "emails": "kjarmul@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/i-hate-you-nlp",
      "admin_type": "",
      "companies": "kjamistan"
    },
    "458": {
      "abstract_short": "El tema que nos ocupa es como implementar un identificador de sonido tipo Shazam usando t\u00e9cnicas DSP. Los puntos a seguir ser\u00e1n, implementaci\u00f3n, retos y pasos adicionales. El proyecto que nos ocupa se encuentra todav\u00eda en proceso de desarrollo (el c\u00f3digo [subido en GitHub][1]) y fue inspirado despu\u00e9s la conferencia, [Over-the-Air Audio Identification][2] en FOSDEM 2016.\r\n\r\n  [1]: https://github.com/notexactlyawe/abracadabra\r\n  [2]: https://fosdem.org/2016/schedule/event/audio_identification/",
      "sub_title": "",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@notexactlyawe",
      "id": 458,
      "speakers": "Cameron Macleod",
      "title": "Implementaci\u00f3n de un Identificador de Sonido en Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Case Study",
        "failures/mistakes",
        "Open-Source",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Databases"
      ],
      "abstract_long": [
        "El tema que nos ocupa es como implementar un identificador de sonido tipo Shazam usando t\u00e9cnicas DSP con ayuda de unas fant\u00e1sticas bibliotecas. Los puntos a seguir ser\u00e1n, implementaci\u00f3n, retos y pasos adicionales. El proyecto que nos ocupa se encuentra todav\u00eda en proceso de desarrollo (el c\u00f3digo [subido en GitHub][1]) y fue inspirado despu\u00e9s la conferencia, [Over-the-Air Audio Identification][2] en FOSDEM 2016.\r\n\r\nLa estructura b\u00e1sica del proyecto consiste en un clasificador y un reconocedor. El clasificador toma huellas del sonido y las procesa en una forma investigable para el reconocedor que usa estas huellas para la identificaci\u00f3n y b\u00fasqueda de archivos almacenados con el fin de encontrar la semejanza mas probable. El reconocedor estar\u00e1 expuesto en un entorno API.\r\n\r\nLa conferencia intentar\u00e1 introducir el \u00e1rea de DSP a la audiencia y los conceptos que est\u00e1n detr\u00e1s aplicaciones como Shazam. Explicar\u00e9 todos las nociones incluidas en una manera sencilla.\r\n\r\n  [1]: https://github.com/notexactlyawe/abracadabra\r\n  [2]: https://fosdem.org/2016/schedule/event/audio_identification/"
      ],
      "abstract_extra": "El tema es sobre un proyecto a\u00fan en curso y como resultado puede convertirse antes que lo doy en una charla sobre los fracasos del proyecto y sus lecci\u00f3nes. Preferir\u00eda dar el tema en ingl\u00e9s pero estoy dispuesto darlo en espa\u00f1ol tambi\u00e9n.",
      "tag_categories": [
        "Case Study",
        "Best Practice and Use Cases",
        "Open Source",
        "Data Science",
        "Databases"
      ],
      "emails": "cmacleod170@gmail.com",
      "language": "Spanish",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/implementacion-de-un-identificador-de-sonido-en-python",
      "admin_type": "",
      "companies": "Cambridge Consultants Ltd"
    },
    "457": {
      "abstract_short": "The talk will go over implementing a Shazam-style sound recogniser using DSP techniques and some fantastic libraries. It will cover implementation, challenges and further steps. The project is still a work in progress and the code is [available on GitHub][1]. It was inspired by the [Over-the-Air Audio Identification talk][2] at FOSDEM 2016.\r\n\r\n  [1]: https://github.com/notexactlyawe/abracadabra\r\n  [2]: https://fosdem.org/2016/schedule/event/audio_identification/\r\n",
      "sub_title": "",
      "timerange": "2016-07-18 16:30:00, 2016-07-18 17:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@notexactlyawe",
      "id": 457,
      "speakers": "Cameron Macleod",
      "title": "Implementing a Sound Identifier in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Case Study",
        "failures/mistakes",
        "Open-Source",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Databases"
      ],
      "abstract_long": [
        "The talk will go over the journey of implementing a Shazam-style sound recogniser using DSP techniques and some fantastic libraries. It will cover implementation, challenges and further steps. The project is still a work in progress at the time of proposal and the code is [available on GitHub][1]. It was inspired by the [Over-the-Air Audio Identification talk][2] at FOSDEM 2016.\r\n\r\nThe basic structure of the project consists a classifier that fingerprints audio and stores it in a searchable form and a recogniser that fingerprints a smaller chunk of audio and then searches the stored records to find the most suitable fit for it. The recogniser will be exposed as an API to allow for different front-ends.\r\n\r\nI will aim to introduce both the field of DSP and concepts behind applications like Shazam in a simple easy-to-understand manner. The audience will not need any prior experience in anything except Python.\r\n\r\n  [1]: https://github.com/notexactlyawe/abracadabra\r\n  [2]: https://fosdem.org/2016/schedule/event/audio_identification/"
      ],
      "abstract_extra": "As stated in the abstract, the project is still very much a work in progress and a lot has to be done. As such, the focus of the talk may turn more towards lessons learned as opposed to actual implementation closer to the time if the project turns out less successful than hoped.",
      "tag_categories": [
        "Case Study",
        "Best Practice and Use Cases",
        "Open Source",
        "Data Science",
        "Databases"
      ],
      "emails": "cmacleod170@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/implementing-a-sound-identifier-in-python",
      "admin_type": "",
      "companies": "Cambridge Consultants Ltd"
    },
    "654": {
      "abstract_short": "EFL (Embedded Flexible Language), a deterministic parallel programming tool, may be embedded in any host language. Two versions of the EFL pre-compiler for Python were implemented. One  translates EFL blocks into Python's Multiprocessing code, and the other one into DTM/MPI4PY code. EFL implementations of Parallel Programming Design Patterns will be shown, generated parallel code compared, and differences discussed. Visit flexcomp.jct.ac.il for further information. \r\n",
      "sub_title": "",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@, @",
      "id": 654,
      "speakers": "Moshe Goldstein, david dayan",
      "title": "Implementing Parallel Programming Design Patterns using EFL for Python",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Tooling",
        "Multi-Processing",
        "Development",
        "Programming",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "Multi-core CPUs are abundant and utilizing them effectively requires programmers to parallelize CPU-intensive code. To facilitate this, we have developed EFL (Embedded Flexible Language), a deterministic parallel programming tool. \r\nThe parallel parts of a program are written as EFL-blocks, which are embedded into a sequential host language program. The sequential parts of the program are written in the host language, outside the EFL blocks.   \r\nEFL may be embedded in any host language by writing an appropriate EFL pre-compiler. At the moment, we implemented two versions of the EFL pre-compiler. Both pre-compilers translate EFL blocks into parallel Python code - one of them generates parallel code based on Python's Multiprocessing module, and the other one generates parallel code based on the DTM/MPI4PY Python module.\r\nWe will present the principles upon which EFL is built. We will show the implementation of Parallel Programming Design Patterns using EFL's parallel programming constructs (such as parallel assignments, parallel for-loops, etc.).  Using our two EFL pre-compilers we will show their translation to Python parallel code according to the Multiprocessing module as well as the DTM/MPI4PY module. The differences between code versions produced by the EFL pre-compilers will be discussed. \r\nFor further information about the EFL project and our Flexible Computation Research Laboratory, visit http://flexcomp.jct.ac.il\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "A poster titled \"EFL: An Embedded Language for Safe and Efficient Parallel Execution\" was presented at EuroPython 2014, Berlin, Germany.\r\nA poster titled \"Parallel Programming Constructs and Techniques using and Embedded Flexible Language (EFL) for Python\"  was presented at EuroPython 2015, Bilbao, The Basque Country, Spain. \r\nA talk titled \"EFL: An Embedded Language for Safe and Efficient Parallel Execution\" was presented at the Intel Compiler, Architecture and Tools Conference (CATC), Haifa, Israel, 2014.\r\nA paper titled \"Flexible Algorithms: Enabling Well-defined Order-Independet Execution with an Imperative Programming Style\" was presented at the ECBS-EERC 2015, Brno, The Czech Republic, 2015 (available at pp 75-82 of the proceedings of the conference).\r\nA paper title \"EFL: Implementing and Testing an Embedded Language Which Provides Safe and Efficient Parallel Execution \" was presented at the ECBS-EERC 2015, Brno, The Czech Republic, 2015 (available at pp 83-90 of the proceedings of the conference).  \r\nFor further material, including unpublished papers and technical reports, visit the website of our research lab.  Also, from there you will be able to download the installation kit of our two EFL pre-compilers. \r\n",
      "tag_categories": [
        "Programming",
        "Programming",
        "Programming",
        "Programming",
        "Python"
      ],
      "emails": "goldmosh@g.jct.ac.il, dayandav@g.jct.ac.il",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/implementing-parallel-programming-design-patterns-using-efl-for-python",
      "admin_type": "",
      "companies": ",  Jerusalem College of Technology, HebrewUniversity"
    },
    "628": {
      "abstract_short": "One of the biggest differences, in the Python community, is its effort to improve diversity. I was fortunate enough to take part in nine different PyCon's.  I always took note of experiences on how to improve diversity,  that could be useful and replicable in my local community and would like to share at EuroPython. There are other reports, that also I would like to share, which are only beautiful stories of how Python reaches the most distant people and places you may never have imagined.",
      "sub_title": "Nine Different PyCon's in Two Year's: Lessons on Diversity that I Learned",
      "timerange": "2016-07-20 16:15:00, 2016-07-20 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@fmasanori, @pk_pacheco, @KatiaNakamura",
      "id": 628,
      "speakers": "Fernando Masanori Ashikaga, Paola Katherine Pacheco, K\u00e1tia Nakamura",
      "title": "import community",
      "have_tickets": [
        true,
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Community"
      ],
      "abstract_long": [
        "One of the biggest differences, in the Python community, in relation to other communities, is its effort to improve diversity. There is even a Diversity Statement at PSF: \"We have created this diversity statement because we believe that a diverse Python community is stronger and more vibrant. A diverse community where people treat each other with respect has more potential contributors and more sources for ideas.\" In last two years I was fortunate enough to take part in nine PyCon's in ten different countries: Namibia, UK, Japan, Brazil, Italy, Argentina, Uruguay, Germany, Canada and Spain. Some were not national conferences, but were EuroPython or PyConUS. I was coach in three Django Girls at PyCon Namibia, Argentina and Brazil.  I always took note of experiences on how to improve diversity, that could be useful and replicable in my local community and would like to share at EuroPython. There are other reports that I also would like to share, which are only beautiful stories of how Python reaches the most distant people and places you may never have imagined.",
        "",
        "",
        ""
      ],
      "abstract_extra": "-",
      "tag_categories": [
        "Community"
      ],
      "emails": "fmasanori@gmail.com, pkcpweb@gmail.com, katia@kiwi.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/import-community",
      "admin_type": "",
      "companies": "FATEC S\u00e3o Jos\u00e9 dos Campos, Hadrons, Kiwi.com"
    },
    "497": {
      "abstract_short": "In this talk I will show how to build your own infrastructure-as-a-service on the example of \"Postgraas\", an open source postgres-as-a-service I wrote in python just for fun. With a simple curl request you can get your very own database, just like RDS on AWS. You will learn how easy it is to create such a remarkably useful service with hardly three hundred lines of flask, docker and some glue-code, a project for a rainy Sunday.",
      "sub_title": "or how to write your very own database-as-a-service",
      "timerange": "2016-07-20 11:15:00, 2016-07-20 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@sebineubauer",
      "id": 497,
      "speakers": "Sebastian Neubauer",
      "title": "Infrastructure as Code: \"pip install\" your environment",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "PostgreSQL",
        "Deployment/Continuous Integration and Delivery",
        "Infrastructure",
        "Docker",
        "DevOps general"
      ],
      "abstract_long": [
        "Continuous Delivery, DevOps, Lean - all those movements have one thing in common: extending the process of software development along the whole value stream, ultimately to the customer. This simple requirement causes surprising serious difficulties on traditional operations workflows. All of a sudden, a single manual ticket to the operations team is a critical blocker in the delivery process. Therefore all parts of the infrastructure, storage, databases, identities, compute resources must be provided as a self service for the developers in order to be able to achieve this goal. What one may call \"the cloud\" (including self hosted ones like open stack) is such a successful model not least because they offer exactly this \"ticket-less\" self-service. But why should we wait for \"the cloud\" to offer what we really need? We are python developers, we are hackers!\r\n\r\nIn this talk I will show how to build your own infrastructure-as-a-service on the example of \"Postgraas\", an open source postgres-as-a-service I wrote in python just for fun. With a simple curl request you can get your very own database, just like RDS on AWS. You will learn how easy it is to create such a remarkably useful service with hardly three hundred lines of flask, docker and some glue-code, a project for a rainy Sunday. After the talk you will know how to amaze your colleagues by eliminating an annoying ticket or manual workflow with a simple flask app and some creativity.",
        "",
        "",
        ""
      ],
      "abstract_extra": "My talk on last years EP:\r\nhttps://ep2015.europython.eu/conference/talks/a-pythonic-approach-to-continuous-delivery\r\n\r\nAnd maybe it wasn't even that bad, at least according to a review of that talk:\r\nhttps://tesarek.me/europython-2015\r\n\r\n> A Pythonic Approach to Continuous Delivery.\r\n> Sebastian presented CI and CD as one process of delivering value to the customer. He showed the whole process from beginning (the idea of a feature) to the end (the customer using the feature). He presented lots of useful tools that you can use but the basic idea is to start with the most lightweight but fully functional version and build on it.\r\n> We should automate as much as possible and continuously improve our automated processes.\r\n> This was the best presentation of Ci&CD I've ever seen. As to the topic, it was very explanatory and contained lots of useful tips and tricks.\r\n\r\n",
      "tag_categories": [
        "Databases",
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "sebastian.neubauer@blue-yonder.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/infrastructure-as-code-pip-install-your-environment",
      "admin_type": "",
      "companies": "Blue Yonder GmbH"
    },
    "513": {
      "abstract_short": "This talk covers the distributed architecture that Skyscanner built to solve the data challenges involved in the generation of images of all hotels in the world.  Putting together a distributed system in Python,  based on queues, surfing on the AWS Cloud.",
      "sub_title": "How Skyscanner hotels built its image processing pipeline.",
      "timerange": "2016-07-19 16:15:00, 2016-07-19 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@alevinval",
      "id": 513,
      "speakers": "Alex Vinyals",
      "title": "Ingesting 35 million hotel images with python in the cloud.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "System Architecture",
        "Big Data",
        "Use Case",
        "Distributed Systems"
      ],
      "abstract_long": [
        "This talk covers the distributed architecture that Skyscanner built to solve the data challenges involved in the generation of images of all hotels in the world.  Putting together a distributed system in Python,  based on queues, surfing on the AWS Cloud.\r\n\r\nOur goal? To build an incremental image processing pipeline that discards poor quality and duplicated images,  scaling the final images to several sizes to optimise for mobile devices.\r\n\r\nAmong the challenges:\r\n\r\n1. Ingest all the input images that partners provide us.\r\n2. Detect and remove bad quality + duplicated images from reaching production.\r\n3. Resize all the generated images to optimise for mobile devices.\r\n4. Ensure the process scales and behaves in an incremental way.\r\n5. Ensure the whole process fits in a time constrained window.\r\n\r\nAmong the tools we used? Pillow, ImageHash, Kombu and Boto.\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "Any feedback welcome if you think something is missing or could be improved. I can also answer any question you guys have.\r\n\r\nThanks.",
      "tag_categories": [
        "DevOps",
        "Data Science",
        "Best Practice and Use Cases",
        "DevOps"
      ],
      "emails": "alexandre.vinyals@skyscanner.net",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/ingesting-35-million-hotel-images-with-python-in-the-cloud",
      "admin_type": "",
      "companies": "Skyscanner"
    },
    "739": {
      "abstract_short": " \u201cNotebooks come alive when interactive widgets are used\u201d, but programming complex applications that rely entirely on widgets may end up being a painful and frustrating process. Shaolin is a new python project that aims to provide a framework for building interactive complex dashboards.",
      "sub_title": "Introducing a new framework for interactive dashboards programming.",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@miau_db",
      "id": 739,
      "speakers": "Guillem Duran",
      "title": "Interactive data Kung Fu with Shaolin",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Visualization",
        "Jupyter/iPython Notebook",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Analytics"
      ],
      "abstract_long": [
        "You can read in The Project Jupyter web page that \u201cNotebooks come alive when interactive widgets are used\u201d, but programming complex applications that rely entirely on widgets may end up being a painful and frustrating process. Shaolin is a new python project that aims to provide a framework for building interactive complex dashboards.\r\n\r\nShaolin provides all the basic tools for building complex interactive data analysis applications using the pydata ecosystem. Arbitrary code can be embedded into a Dashboard -a class that works as a \u201cblack box\u201d that allows to easily define a GUI based on the ipywidgets package- to process any data in any form and then let you interactively define how to plot it using automatically generated widgets. Hierarchical combinations of Dashboards can be arranged then to build more complex applications.\r\n\r\nThe talk is divided in two sections. First one introduce the framework and its main features:\r\n\r\n - Custom syntax for defining widgets in a simplified way.\r\n - Dashboards: Syntax rules and capabilities.\r\n - Combining Dashboards to build complex applications.\r\n - Interactive plot creation.\r\n - Integration with pydata.\r\n\r\nSecond section will show how this framework can be used to analyse real data using Dashboards without writing any code. I will show how to transform market data time series into graphs using pandas and networkx, then plot it interactively using bokeh and Vpython.\r\n\r\n"
      ],
      "abstract_extra": "I think that here you will be able to find all the information related to my framework. https://github.com/HCsoft-RD/shaolin A detailed description of its main features can be found in the examples folder. The notebooks you will find there are self-explanatory.\r\n\r\n This is currently in alpha version. Everything there is online works, but I'm still testing like half of the Dashboards I have programmed, before uploading them. Expect thie beta version to be  finished by the date of the talk.\r\n\r\n\r\nThere are no recordings of the talks I have already given, but you can find some info about the R&D work we are doing at HCSoft in this blog http://entropicai.blogspot.com.es/",
      "tag_categories": [
        "Data Science",
        "Python",
        "Data Science",
        "Data Science"
      ],
      "emails": "guillem.db@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/interactive-data-kung-fu-with-shaolin",
      "admin_type": "",
      "companies": "HCSoft programaci\u00f3n S.L."
    },
    "450": {
      "abstract_short": "aiohttp is asynchronous HTTP client and server library built on top of asyncio.\r\n\r\nThe intro describes basic programming patterns for both client\r\nand server API as well as more advanced techniques. \r\n\r\nThe main target of the talk is displaying an alternative to\r\npeople who want to avoid classic WSGI\r\nframeworks (Django/Flask/Pyramid etc) limitations but found\r\nTwisted and Tornado too cumbersome.",
      "sub_title": "asyncio-based web programming fundamentals in 30 minutes",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@andrew_svetlov",
      "id": 450,
      "speakers": "Andrew Svetlov",
      "title": "Introduction to aiohttp",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python 3",
        "Best Practice",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "HTTP"
      ],
      "abstract_long": [
        "aiohttp is asynchronous HTTP client and server library built on top of asyncio.\r\n\r\nThe library  allows to write user friendly code which looks like well-known\r\nlinear one (requests library for client and Django/Flask/Pyramid for\r\nserver) but utilizes the power of non-blocking sockets and\r\nsupports websockets natively.\r\n\r\nThe intro describes basic programming patterns for both client\r\nand server API as well as more advanced techniques. \r\nTips and tricks for writing asyncio-based code are included as well.\r\n\r\nThe main target of the talk is displaying an alternative to\r\npeople who want to avoid classic WSGI\r\nframeworks (Django/Flask/Pyramid etc) limitations but found\r\nTwisted and Tornado too cumbersome.\r\n\r\nDive into aiohttp usage with the library author."
      ],
      "abstract_extra": "I made similar talks in Caribbean PyCon and PyCon Hong Kong plus several times on several Russian-speaking conferences.",
      "tag_categories": [
        "Python",
        "Best Practice and Use Cases",
        "Web",
        "Web"
      ],
      "emails": "andrew.svetlov@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/introduction-to-aiohttp",
      "admin_type": "",
      "companies": "DataRobot"
    },
    "427": {
      "abstract_short": "Beginning programmers or Python beginners may find it overwhelming to implement a machine learning algorithm. Increasingly machine learning is becoming more applicable to many areas. This talk introduces key concepts and ideas and uses Python to build a basic classifier - a common type of machine learning problem. Providing some jargon to help those that may be self-educated or currently learning ",
      "sub_title": "A novice's inquiry into classification.",
      "timerange": "2016-07-18 16:00:00, 2016-07-18 16:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@loooorenanicole",
      "id": 427,
      "speakers": "Lorena Mesa",
      "title": "Is that spam in my ham?",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Education",
        "Beginners",
        "Case Study",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Supervised learning, machine learning, classifiers, big data! What in the world are all of these things? As a beginning programmer the questions described as \"machine learning\" questions can be mystifying at best.\r\n\r\nIn this talk I will define the scope of a machine learning problem, identifying an email as ham or spam, from the perspective of a beginner (non master of all things \"machine learning\") and show how Python can help us simply learn how to classify a piece of email.\r\n\r\nTo begin we must ask, what is spam? How do I know it \"when I see it\"? From previous experience of course! We will provide human labeled examples of spam to our model for it to understand the likelihood of spam or ham. This approach, using examples and data we already know to determine the most likely label for a new example, uses the Naive Bayes classifier.\r\n\r\nOur model will look at the words in the body of an email, finding the frequency of words in both spam and ham emails and the frequency of spam and ham. Once we know the prior likelihood of spam and what makes something spam, we can try applying a label to a new example.\r\n\r\nThrough this exercise we will see at a basic level what types of questions machine learning asks, learn to model \"learning\" with Python, and understand how learning can be measured."
      ],
      "abstract_extra": "This topic arose from a talk about a Naive Bayes white paper I did in Chicago (Papers We Love Chicago - May 2015 http://www.meetup.com/Papers-We-Love-Chicago/events/222024292/) that discussed the efficacy of Naive Bayes as well as what types of problems Naive Bayes performs well on. The learning curve was steep when reading this white paper, it was heavy on math and jargon for those that are not from the machine learning world. In fact I am a policy analyst who turned programmer just over two years ago (at the time of PyCon 2016). Most of my learning is self-taught or self-guided thus I find it important to be curious and use that curiosity to provide content in accessible formats to all.\r\n\r\nThis talk is not meant to be an exhaustive understanding of Naive Bayes but a focused talk on what machine learning questions look like and how Python can answer it.\r\n\r\nPast speaking experience:\r\n\r\nI performed this talk at PyOhio 2015 (http://www.pyvideo.org/video/3690/is-that-spam-in-my-ham-a-novices-inquiry-into-c) and received a good amount of feedback as well as additional questions to help me better direct the talk. \r\n\r\nI've taught quite a bit with the Girl Develop It Chicago chapter and as an original (and current) co-organizer and co-founder of PyLadies Chicago I've taught several of our workshops. For a listing of the workshops I've taught and the talks I've given can be found at - http://lorenamesa.com/pages/speaking.html. \r\n\r\nI spoke at PyTennessee in Feb 2016 on a similar beginner data collection and modeling exercise with some basic machine learning analysis. The talk had  amazing feedback and I am now building out smaller workshops around it. I find that many beginner programmers have an overwhelming fear of trying to take on such topics and think that this would be a great talk for beginners to start learning.\r\n",
      "tag_categories": [
        "Educational",
        "Educational",
        "Case Study",
        "Data Science"
      ],
      "emails": "me@lorenamesa.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/is-that-spam-in-my-ham",
      "admin_type": "",
      "companies": "Sprout Social, Inc."
    },
    "539": {
      "abstract_short": "This talk shows the Python Descriptors, detailing their behaviour with a detailed practical example, so we can understand the power and flexibility they give. As a bonus track, class decorators are explained.",
      "sub_title": "Get to know in the intimacy one of the most powerful and elegant corners of Python: Descriptors!",
      "timerange": "2016-07-18 12:00:00, 2016-07-18 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@facundobatista",
      "id": 539,
      "speakers": "Facundo Batista",
      "title": "It's not magic: descriptors exposed",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Python general"
      ],
      "abstract_long": [
        "This talk presents, using a detailed practical example, the Python Descriptos.\r\n\r\nThe behaviour of descriptors mechanisms is detailed, showing their power and flexibility.\r\n\r\nFinally, as a bonus track and to complete the used practical example, class descriptors are explained.\r\n\r\n"
      ],
      "abstract_extra": "I gave this talk in last PyCon Argentina, the result was awesome.\r\n\r\nAlso note that I created (and gave) this talk together with Joaquin Sorianello, but I can give it myself without any problem.",
      "tag_categories": [
        "Python"
      ],
      "emails": "facundobatista@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/its-not-magic-descriptors-exposed",
      "admin_type": "",
      "companies": "Canonical"
    },
    "545": {
      "abstract_short": "There should be something for everyone in this whistle\u2013stop tour of iteration in Python setting off from `for`\u2013loops, and riding cross\u2013country to multiplexing coroutines!\r\n\r\nSee and hear the amazing sights and sounds of list comprehensions, and generators. Take in the amazing vistas from `itertools`, and be amazed at the magnificent `yield`!",
      "sub_title": "A whistle\u2013stop tour of iteration in Python",
      "timerange": "2016-07-22 16:15:00, 2016-07-22 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@sneeu",
      "id": 545,
      "speakers": "John Sutherland",
      "title": "Iteration, iteration, iteration",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Beginners",
        "Python general",
        "Programming",
        "Functional Programming"
      ],
      "abstract_long": [
        "There should be something for everyone in this whistle\u2013stop tour of iteration in Python setting off from `for`\u2013loops, and riding cross\u2013country to multiplexing coroutines!\r\n\r\nSee and hear the amazing sights and sounds of list comprehensions, and generators. Take in the amazing vistas from `itertools`, and be amazed at the magnificent `yield`!\r\n\r\nWe\u2019ll take detours to higher\u2013order functions, closures, and decorators. And cover the FP inspired builtins `map`, `filter`, and `reduce`, as well as the epitome of Pythonic programming, `enumerate`."
      ],
      "abstract_extra": "This talk was given at the \u201cPython Edinburgh Mini Conference\u201d in 2011 (http://sneeu.com/talks/pemc-2011/iteration/), but my plan is to completely rewrite the talk from scratch. Examples will be in Python 3.",
      "tag_categories": [
        "Educational",
        "Python",
        "Programming",
        "Programming"
      ],
      "emails": "john@sneeu.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/iteration-iteration-iteration",
      "admin_type": "",
      "companies": "FanDuel"
    },
    "423": {
      "abstract_short": "Sure you can do a chunk of scientific exploration and stuff in Jupyter in your choice of language supplemented with visuals and that's already awesome !\r\n\r\nBut let's head off the beaten track a little to look at other uses, especially command-line.\r\n\r\nWe'll look at some alternate uses of Jupyter ...\r\n",
      "sub_title": "Sure you can do science, data analysis - but also CLI, tutorials, cheat sheats, blog, presentations",
      "timerange": "2016-07-22 10:30:00, 2016-07-22 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@mjbright",
      "id": 423,
      "speakers": "Mike BRIGHT",
      "title": "Jupyter for everything else",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Visualization",
        "Use Case",
        "Jupyter/iPython Notebook",
        "Docker",
        "Command-Line"
      ],
      "abstract_long": [
        "Sure you can do a chunk of scientific exploration and stuff in Jupyter in your choice of language supplemented with visuals and that's already awesome !\r\n\r\nBut let's head off the beaten track a little to look at other uses, especially command-line.\r\n\r\nWe'll look at some alternate uses of Jupyter ...\r\n\r\n - Write command-line tutorials, cheat sheets in an easy to maintain format.\r\n - Perform visualization tasks for command-line tools\r\n - Write blog posts\r\n - Create interactive presentations (thanks Damian !)\r\n - Publish interactive books, articles and blog posts\r\n - HTML/js/css experimentation\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "**45 min version**\r\n\r\nI regularly use Jupyter to document my own  creations\r\n\r\n - Command-line cheat sheets\r\n - Presentations via RISE\r\n - \"Command-line\" demos of any utility\r\n   - I do Docker demos this way\r\n   - I do Docker Build labs this way\r\n   - PyMongo\r\n - HTML/JS/CSS experiments\r\n\r\nIt ain't rocket science, but it works for me .. .and maybe for you too.\r\n\r\nHere's my repo of past workshops.\r\n    https://github.com/mjbright/jupyter_notebooks/\r\n\r\nObviously all talk (and lab) materials will be available on github as well as on your site.\r\n\r\n",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        "Python",
        "DevOps",
        "Programming"
      ],
      "emails": "europython@mjbright.net",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/jupyter-for-everything-else",
      "admin_type": "",
      "companies": "HPE"
    },
    "662": {
      "abstract_short": "We are using Python to help the National Grid in the UK to balance electricity production and usage. We do this by installing Python powered devices at customers sites that allow us to monitor and set control criteria to automatically turn on and off power consuming and producing devices when there is a mismatch between electricity supply and demand. \r\nIn this talk we will be talking about how and why we have used Python, as well as where in our system we would like to use Python.",
      "sub_title": "Balancing the National Grid with Python and IoT",
      "timerange": "2016-07-19 16:15:00, 2016-07-19 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 662,
      "speakers": "Scott Reeve",
      "title": "Keeping the Lights on with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Hardware/IoT Track",
        "Case Study",
        "Internet of Things (IoT)"
      ],
      "abstract_long": [
        "We are using Python to help the National Grid in the UK to balance electricity production and usage. We do this by installing Python powered devices at customers sites that allow us to monitor and set control criteria to automatically turn on and off power consuming and producing devices when there is a mismatch between electricity supply and demand. These devices talk to our Python powered cloud based system using the 3g network, giving us near real-time monitoring of our customers assets.\r\nOur entire infrastructure is written in Python, from our billing systems, data analytics systems and customer portal all the way through to our on site industrial system interfaces. In this talk we will be talking about how and why we have used Python, where we have had problems, as well as where in our system we would like to use Python and why we cannot.  We will also be talking about what we are going to do next, moving our system from near real time monitoring to near real-time control, using Python for both system modelling and control. We will discuss how we are using Python to creating a system that monitors the balance between electricity supply and demand many times per second and is able to provide a corrective control based on the sum of the output of a dynamic set of our customer sites and the challenges that presents."
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Case Study",
        "Hardware"
      ],
      "emails": "scott.reeve@limejump.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/keeping-the-lights-on-with-python",
      "admin_type": "",
      "companies": "Limejump Ltd"
    },
    "488": {
      "abstract_short": "El m\u00f3dulo itertools es una de las piedras angulares de la programaci\u00f3n avanzada en Python. Esta charla proporciona consejos pr\u00e1cticos del \u00e1lgebra de iteradores que pueden aplicarse de forma inmediata. Descubrir el m\u00f3dulo itertools supone arrancar el velo de nuestros ojos, y una vez usadas funciones como `repeat()`, `takewhile()`, `dropwhile()` o `product()` no hay marcha atr\u00e1s \u2014 es imposible volver al mundo de los meros mortales donde las soluciones son m\u00e1s complejas y necesitan m\u00e1s memoria.",
      "sub_title": "Aumentando la letalidad y elegancia de nuestro c\u00f3digo gracias al m\u00f3dulo itertools.",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@pyctor",
      "id": 488,
      "speakers": "V\u00edctor Terr\u00f3n",
      "title": "Kung Fu al amanecer con itertools",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Clean Code",
        "Best Practice",
        "Functional Programming"
      ],
      "abstract_long": [
        "El m\u00f3dulo itertools es una de las piedras angulares de la programaci\u00f3n avanzada en Python. Parte de la biblioteca est\u00e1ndar, nos ofrece un \u00e1lgebra de iteradores que permite encadenar abstracciones de forma elegante, haciendo posibles soluciones sencillas a la par que m\u00e1s eficientes en su consumo de memoria.\r\n\r\nEl objetivo de esta charla es el de, ante todo, proporcionar consejos y lecciones claras que puedan aplicarse de forma inmediata. Ilustr\u00e1ndolo con numerosos ejemplos, los asistentes abandonar\u00e1n la charla habiendo asimilado como m\u00ednimo varios conceptos que mejorar\u00e1n indiscutible e irremediablemente su c\u00f3digo. El \u00e9nfasis se har\u00e1 en mostrar casos espec\u00edficos en los que una soluci\u00f3n tradicional puede ser mejorada una y otra vez con funciones del m\u00f3dulo itertools. \r\n\r\nSupongamos, por ejemplo, que queremos alternar indefinidamente entre dos valores: -1 y 1. El reci\u00e9n iniciado utilizar\u00eda una variable cuyo valor ir\u00eda modificando a cada paso y el usuario medio quiz\u00e1s optar\u00eda por un generador infinito. Ambas soluciones dignas y honorables, pero que palidecen ante la maestr\u00eda del artista marcial que que tan s\u00f3lo necesita `itertools.cycle()`. Porque el m\u00f3dulo itertools es as\u00ed: una vez ca\u00eddo el velo de nuestros ojos y descubiertas funciones como `repeat()`, `takewhile()`, `dropwhile()` o `product()`, no hay marcha atr\u00e1s. En esta charla vamos a aprender a reconocer cu\u00e1ndo pueden ser usadas, proporcion\u00e1ndonos en una \u00fanica l\u00ednea lo que para los meros mortales supone mucho m\u00e1s trabajo."
      ],
      "abstract_extra": "Tengo una enemistad personal con los ponentes aburridos, as\u00ed que me tomo muy en serio que mis charlas sean amenas y todo lo divertidas posibles \u2014 y por el momento, cruzo los dedos, parece que lo he logrado. Mis charlas en las PyConES se encuentran todos los a\u00f1os entre las que m\u00e1s reproducciones tienen en YouTube, si es que eso significa algo:\r\n\r\n- 2013: [https://www.youtube.com/watch?v=QZiX75rbkuI][1]\r\n- 2014: [https://www.youtube.com/watch?v=MgRdg3s8n3E][2]\r\n- 2015: [https://www.youtube.com/watch?v=8TDZsaATmqQ][3] [charla de clausura]\r\n\r\nEn ingl\u00e9s tan s\u00f3lo he dado una charla hasta la fecha, en 2015:\r\n[https://www.youtube.com/watch?v=oSOco7qQujU][4]\r\n\r\n  [1]: https://www.youtube.com/watch?v=QZiX75rbkuI\r\n  [2]: https://www.youtube.com/watch?v=MgRdg3s8n3E\r\n  [3]: https://www.youtube.com/watch?v=8TDZsaATmqQ\r\n  [4]: https://www.youtube.com/watch?v=oSOco7qQujU\r\n",
      "tag_categories": [
        "Educational",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "quintanar@gmail.com",
      "language": "Spanish",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/kung-fu-al-amanecer-con-itertools",
      "admin_type": "",
      "companies": "Google"
    },
    "635": {
      "abstract_short": "The itertools module is one of the cornerstones of advanced programming in Python. This talk offers practical advice about iterator algebra that can be put into practice immediately. Discovering the itertools module means taking the veil from our eyes, and once we use functions such as repeat(), takewhile(), dropwhile() or product(), there is no return \u2014 it is impossible to come back to the world of the mere mortals, where solutions are more complex and need more memory.",
      "sub_title": "Increasing the lethality and elegance of our code with the itertools module.",
      "timerange": "2016-07-18 11:15:00, 2016-07-18 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@pyctor",
      "id": 635,
      "speakers": "V\u00edctor Terr\u00f3n",
      "title": "Kung Fu at Dawn with Itertools",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Clean Code",
        "Best Practice",
        "Functional Programming"
      ],
      "abstract_long": [
        "The itertools module is one of the cornerstones of advanced programming in Python. Part of the standard library, it provides an iterator algebra that allows us to elegantly chain abstractions, enabling solutions that are both simpler and more memory efficient.\r\n\r\nThe goal of this talk is to offer practical advice and clear lessons that can be immediately put into practice. Illustrating it with numerous examples, attendees will leave having assimilated at least several concepts that will improve their code undeniably and irremediably. Emphasis will be on showing specific cases where a traditional solution can be overhauled over and over with functions from the itertools module.\r\n\r\nLet\u2019s say, for example, that we want to alternate indefinitely between two values: -1 and 1. The novice would use a variable, updating its value at each step, and the average user would maybe opt for an endless generator. Both are worthy and honorable solutions, but they pale before the mastery of the martial artist who only needs itertools.cycle(). Because that is the nature of the itertools module: once the veil falls from our eyes and we come across functions such as repeat(), takewhile(), dropwhile() or product(), there is no return. In this talk we will learn to identify when they can be used, accomplishing with a single line of code what for the mere mortals takes much more effort."
      ],
      "abstract_extra": "I have a personal feud with boring speakers, so I do my best trying to make my talks as entertaining and funny as possible \u2014 and so far, I am crossing my fingers, it seems that I have succeeded. My talks at PyCon Spain are every year among the most viewed on YouTube, if that means anything:\r\n\r\n- 2013: [https://www.youtube.com/watch?v=QZiX75rbkuI][1] [Spanish]\r\n- 2014: [https://www.youtube.com/watch?v=MgRdg3s8n3E][2] [Spanish]\r\n- 2015: [https://www.youtube.com/watch?v=8TDZsaATmqQ][3] [closing keynote, Spanish]\r\n\r\nI have only given one talk in English so far, in 2015:\r\n[https://www.youtube.com/watch?v=oSOco7qQujU][4]\r\n\r\n  [1]: https://www.youtube.com/watch?v=QZiX75rbkuI\r\n  [2]: https://www.youtube.com/watch?v=MgRdg3s8n3E\r\n  [3]: https://www.youtube.com/watch?v=8TDZsaATmqQ\r\n  [4]: https://www.youtube.com/watch?v=oSOco7qQujU\r\n",
      "tag_categories": [
        "Educational",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "quintanar@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/kung-fu-at-dawn-with-itertools",
      "admin_type": "",
      "companies": "Google"
    },
    "588": {
      "abstract_short": "Programming is one of the most important 21st-century skills and tons of different online and offline resources can help you to master it.\r\n\r\nOn the other hand, playing games is really effective way for us to learn and it's also the most fun.\r\n\r\nBut is it possible to learn real programming language like Python by playing a game? \r\n\r\nIn this talk I'll show you some projects that allow you to achieve that. I also want to inspire you to help such projects and to suggest ideas how to do that.",
      "sub_title": "",
      "timerange": "2016-07-18 16:30:00, 2016-07-18 17:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 588,
      "speakers": "Liana Bakradze",
      "title": "Learn Python The Fun Way",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Education",
        "Educational Track"
      ],
      "abstract_long": [
        "Programming is one of the most important 21st-century skills. It doesn't only provide promising career opportunities but teaches how to reason logically, systematically and creatively. \r\n\r\nCode readability, rich standard library, straightforward syntax and other features make Python a great language for teaching beginners how to program. Python community is very supportive and friendly to newcomers and does awesome work to make Python available to everyone. Tons of different online and offline resources can help you to master Python programming. Problem solving is the classical way of learning how to code. But it can be boring for some people, especially for kids.\r\n\r\nOn the other hand, playing games is really effective way for us to learn and it's also the most fun. You can find different games designed to teach basics of programming, but most of them use special visual environments and don't teach real text based languages. \r\n\r\nBut is it possible to learn programming language like Python by playing a game? \r\n\r\nIn this talk I'll show you a few projects for different age and levels that allow you to achieve that. I'll pay attention on methods that are used to teach programming.\r\n\r\nI also want to inspire you to help such projects and to suggest ideas how to do that."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        ">>> Suggested Track"
      ],
      "emails": "liana.bakradze@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/learn-python-the-fun-way",
      "admin_type": "",
      "companies": "JetBrains"
    },
    "716": {
      "abstract_short": "What we learned along the way - processes, organization, technology and people - from 0 to 11 million students, 40 thousand courses and 20 thousand teachers.",
      "sub_title": "",
      "timerange": "2016-07-20 16:15:00, 2016-07-20 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@rbanffy",
      "id": 716,
      "speakers": "Ricardo B\u00e1nffy",
      "title": "Lessons Learned after 190 Million Lessons Served",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Management",
        "Django",
        "Scaling"
      ],
      "abstract_long": [
        "What we learned along the way - processes, organization, technology and people - from 0 to 11 million students, 40 thousand courses and 20 thousand teachers.",
        "",
        "",
        ""
      ],
      "abstract_extra": "-",
      "tag_categories": [
        "Development Methods",
        "Application Frameworks",
        "DevOps"
      ],
      "emails": "rbanffy@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/lessons-learned-after-190-million-lessons-served",
      "admin_type": "",
      "companies": "Udemy"
    },
    "523": {
      "abstract_short": "Web APIs that are easier to understand, develop, test and use, is a popular subject. \"An API is only as good as its documentation\". We decided to play with this proverb and leverage the power of documentation. We propose to use the code documentation and the type system to provide lots of free features: explorable APIs, better error messages, automatic testing. \r\n\r\nPython is perfect to explore code and documentation dynamically. We'll demonstrate what we came up to and the lessons we've learned.",
      "sub_title": "The day you'll prefer writing documentation over code: automatic UI/API and tests from documentation",
      "timerange": "2016-07-21 16:15:00, 2016-07-21 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 523,
      "speakers": "Rudy Sicard",
      "title": "Leveraging documentation power for better web APIs",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Django",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "APIs"
      ],
      "abstract_long": [
        "'Rich' web APIs that are easier to understand, develop, test and use, is a popular subject. There are a lot of new specification languages (e.g. swagger, apiblueprint ...) and libraries (django-rest-framework, drf ...) that provide features in this direction. Following the old proverb \"An API is only as good as its documentation\", we decided to play with these ideas and focus on leveraging the power of documentation. We propose to use the code documentation and the type system to provide: \r\n - browsable APIs, that are easy to interact with and visualize, reducing the need to provide custom UIs \r\n -  verification of inputs/outputs along with precise error message if needed \r\n - automatic [de]-serialization of inputs/ouputs outside of the domain code\r\n - smart exception handling, e.g. exceptions that are not documented are automatically converted into internal errors\r\n - automatic testing, e.g. input, output and result including exceptions are tested ensuring the code works and the documentation is up-to-date.   \r\n\r\n\r\nThis use case is one of the rare situation where introspection is desirable and unavoidable. And Python is a good language to explore/exploit code and documentation dynamically. The perfect excuse to spend some time on meta coding a first implementation while being at work. We'll demonstrate what we came up to, the advantages and limitations compared to other approaches. And we'll share the lessons we learned from this experiment.\r\n\r\n"
      ],
      "abstract_extra": "In my previous compagny I worked (design & implementation) on a functional language dedicated to web programming. I wrote one of the blog entry of the company.\r\nhttp://blog.opalang.org/2012/09/programming-tools-ux-when-statically.html\r\n\r\nI have written two articles in machine learning journals:\r\n* Rudy Sicard, T. Arti\u00e8res, E. Petit, Learning iteratively a classifier using the Bayesian Model Averaging Principle, Pattern Recognition, http://www.sciencedirect.com/science/article/pii/S0031320308004895\r\n* Rudy Sicard, Thierry Arti\u00e8res, Modelling sequences using pairwise relational features, to appear in Pattern Recognition, http://www.sciencedirect.com/science/article/pii/S0031320308004895\r\n\r\nand give several speech in machine learning conferences:\r\n* R. Sicard, Th. Arti\u00e8res, E. Petit : \u201cModeling On-line Handwriting Using Pairwise Relational Features\u201d, International Workshop on Frontiers in Handwriting Recognition, La Baule, France, pp. 267-274 (2006)\r\n* R. Sicard, Th. Arti\u00e8res, E. Petit : \u201cMod\u00e8lisation de l\u2019\u00e9crit en ligne \u00e0 l\u2019aide de reseaux bay\u00e9siens et de caract\u00e9ristiques relationnelles\u201d, Colloque International Francophone sur l'Ecrit et le Document (CIFED'06), Fribourg, Suisse (2006)\r\n* R. Sicard, Th. Arti\u00e8res : \u201cPatch Learning for Incremental Classifier Design\u201d, European Conference on Artificial Intelligence (ECAI 2006), Riva del Garda, Italie, pp. 807-808 (2006)\r\n* R. Sicard, Th. Arti\u00e8res : \u201cAn application of bayesian model averaging to histograms\u201d, Grenoble, France (2007)",
      "tag_categories": [
        "Application Frameworks",
        "Web",
        "Web"
      ],
      "emails": "polux.moon@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/leveraging-documentation-power-for-better-web-apis",
      "admin_type": "",
      "companies": "Criteo"
    },
    "590": {
      "abstract_short": "Many times these logs are thrown away or just sit uselessly somewhere on disk. I would like to show you how you can make sense of all that data, how to collect and clean them, store them in a scalable fashion and, finally, explore and search across various systems.",
      "sub_title": "Centralised logging for fun and profit.",
      "timerange": "2016-07-22 10:30:00, 2016-07-22 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@honzakral",
      "id": 590,
      "speakers": "Honza Kr\u00e1l",
      "title": "Log all the things!",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Tooling",
        "Infrastructure",
        "Operations",
        "DevOps general"
      ],
      "abstract_long": [
        "Centralized logging (and the ELK stack) is proving itself to be a very useful tool in managing a production infrastructure. When combined with other data sources (application logging, business data, ...) it can provide even more insight.\r\n\r\nThis talk is an introduction into the area with some overview of the motivation, tools and techniques that can prove useful. We will show how the open source ELK (Elasticsearch Logstash and Kibana) stack can be used to implement this.\r\n\r\nIt is geared towards people familiar with the DevOps concept that are looking to improve their lives by introducing smarter tools.",
        "",
        "",
        ""
      ],
      "abstract_extra": "I have spoken at EuroPython before, including last year. This talk is an updated version of my talk from PyCon Australia since I assume there will be minimum overlap in audiences. Video of the talk: https://www.youtube.com/watch?v=i3rH5cU-Uz4",
      "tag_categories": [
        "Programming",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "honza.kral@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/log-all-the-things",
      "admin_type": "",
      "companies": "Elastic"
    },
    "415": {
      "abstract_short": "Machine Learning is the next big thing. If you are a dummy in terms of Machine Learning, but want to get started with it... there are options.\r\n\r\nStill, thanks to the Web, Python and OpenSource libraries, we can overcome this situation and do some interesting stuff with Machine Learning.",
      "sub_title": "If you're a Machine Learning dummy but are interested in the topic, this is for you.",
      "timerange": "2016-07-18 16:30:00, 2016-07-18 17:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 415,
      "speakers": "Javier Arias Losada",
      "title": "Machine Learning for dummies with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Cython",
        "Predictions",
        "Deep Learning",
        "Open-Source",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Have you heard that Machine Learning is the next big thing?\r\n\r\nAre you a dummy in terms of Machine Learning, and think that is a topic for mathematicians with black-magic skills?\r\n\r\nIf your response to both questions is 'Yes', we are in the same position.\r\n\r\nStill, thanks to the Web, Python and OpenSource libraries, we can overcome this situation and do some interesting stuff with Machine Learning."
      ],
      "abstract_extra": "I regularly speak at different venues:\r\n- Telefonica Developers conference\r\n- Python and Javascript meetups in Barcelona\r\n- Oscon amsterdam 2015: http://conferences.oreilly.com/oscon/open-source-eu-2015/public/schedule/detail/44008\r\n- NoSQL matters 2013 : https://2013.nosql-matters.org/bcn/index.html%3Fp=2344.html#abstract_266016455\r\n- MediterraneaJS 2015 - http://mediterraneajs.eu/people/javier_arias.html\r\n\r\nSome of my presentations: http://www.slideshare.net/javierarilos\r\n",
      "tag_categories": [
        "Python",
        "Data Science",
        "Data Science",
        "Open Source",
        "Data Science"
      ],
      "emails": "javier.arilos@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/machine-learning-for-dummies-with-python",
      "admin_type": "",
      "companies": "Telefonica I+D"
    },
    "642": {
      "abstract_short": "In Machine Learning, the power of combining many models have proven to successfully provide better results than single models. \r\n\r\nThe primary goal of the talk is to answer the following questions:\r\n1) Why and How ensembles produce better output?\r\n2) When data scales, what's the impact? What are the trade-offs to consider? \r\n3) Can ensemble models eliminate expert domain knowledge?",
      "sub_title": "United we stand, divided we fall",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@bargava",
      "id": 642,
      "speakers": "Bargava Subramanian",
      "title": "Machine Learning: Power of Ensembles",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1 [PyData Track]",
      "tags": [
        "Predictions",
        "Machine-Learning",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "It is relatively easy to build a first-cut machine learning model. But what does it take to build a reasonably good model, or even a state-of-art model ?\r\n\r\nEnsemble models. They are our best friends. They help us exploit the power of computing. Ensemble methods aren't new. They form the basis for some extremely powerful machine learning algorithms like random forests and gradient boosting machines. The key point about ensemble is that consensus from diverse models are more reliable than a single source. This talk will cover how we can combine model outputs from various base models(logistic regression, support vector machines, decision trees, neural networks, etc) to create a stronger/better model output.\r\n\r\nThis talk will cover various strategies to create ensemble models.\r\n\r\nUsing third-party Python libraries along with scikit-learn, this talk will demonstrate the following ensemble methodologies:\r\n1) Bagging\r\n2) Boosting\r\n3) Stacking\r\n\r\nReal-life examples from the enterprise world will be show-cased where ensemble models produced better results consistently when compared against single best-performing models.\r\n\r\nThere will also be emphasis on the following: Feature engineering, model selection, importance of bias-variance and generalization.\r\n\r\nCreating better models is the critical component of building a good data science product. \r\n\r\nA preliminary version of the slides is available [here](https://speakerdeck.com/bargava/power-of-ensembles)",
        "",
        "",
        ""
      ],
      "abstract_extra": "**Previous Presentations**\r\n\r\nOne version of the talk was previously  presented at \r\n* [PyCon Ireland -2015 - Machine Learning - Power of Ensembles](http://lanyrd.com/2015/pyconie/sdrpqd/)\r\n\r\nThe speaker has presented at a number of conferences. Some of them are:\r\n\r\n* [PyCon Ireland 2015 - Workshop on Deep Learning](http://lanyrd.com/2015/pyconie/sdrpqd/)\r\n* [Pycon Poland 2015 - Workshop on Deep Learning](http://pl.pycon.org/2015/agenda_en.html)\r\n* [Fifth Elephant 2015, Bangalore India. India's largest data analytics conference -workshop on Deep Learning](https://fifthelephant.talkfunnel.com/2015/10-introduction-to-deep-learning)\r\n [talk](https://fifthelephant.talkfunnel.com/2015/11-visualising-multi-dimensional-data)\r\n* [IEEE International Conference on Cloud Computing for Emerging Markets - Tutorial on Deep Learning](http://conferences.computer.org/ccem/program.html)\r\n* [Bangalore Python Users Meetup Sep 2015 - Data Analysis workshop](http://www.meetup.com/BangPypers/events/210041222/)\r\n* [Scipy India 2015 - Workshop on Data Analysis](http://scipy.in/2015)\r\n( [PyCon India 2015  - Workshop on Statistics](https://in.pycon.org/2015/)",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "bargava@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/machine-learning-power-of-ensembles",
      "admin_type": "",
      "companies": "Cisco"
    },
    "384": {
      "abstract_short": "You will see several different walking robots controlled with Python in different ways, and learn how they were built and programmed.",
      "sub_title": "Making Python run on robots",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 384,
      "speakers": "Radomir Dopieralski",
      "title": "Making robots walk with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Algorithms",
        "Gadgets",
        "Engineering",
        "Hardware/IoT Track",
        "Cross-Platform-Development"
      ],
      "abstract_long": [
        "Making a robot walk is not easy, especially when all it has for brains is a small microcontroller which you have to program in C. During this talk you will see different ways in which such a robot can be controlled in Python, either by using remote control, with the Python program running on a stationary computer, by putting a small computer, such as a Raspberry Pi on it, or by programming it with Micropython, a version of the Python language designed for microcontrollers. I will also explain the basic problems with walking robots and how Python can be used to overcome them. Finally, I will show some of the robots I have built.",
        "",
        "",
        ""
      ],
      "abstract_extra": "I have shown those robots on several conferences already:\r\n\r\nA poster session at PyCon.US: https://us.pycon.org/2015/schedule/presentation/448/\r\nA talk at PyCon.PL: https://www.youtube.com/watch?v=-PisXGVe-lE\r\nA talk at DevConf.cz: http://sched.co/2BkO\r\n\r\nSince then I have made considerable progress, and things became even easier for hobbyists. There are more Micropython boards available,  the Micropython language itself became better, there is a new, smaller, Raspberry Pi board, and there are lots of other innovations popping up constantly. We live in the future, and I will talk about some of the exciting new things too.\r\n\r\n",
      "tag_categories": [
        "Data Science",
        "Hardware",
        "Everything Else",
        ">>> Suggested Track",
        "Python"
      ],
      "emails": "ep2016@sheep.art.pl",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/making-robots-walk-with-python",
      "admin_type": "",
      "companies": ""
    },
    "734": {
      "abstract_short": "Kubernetes is the Google Borg inspired control plane for Docker containers.  It has a great API but needs a load of HTTP client code and JSON processing to use it from Python.  This talk introduces Kube, a Python wrapper around the Kubernetes API that enables you to manage your Kubernetes cluster in a pythonic way while avoiding any Kubernetes API peculiarities.  Programmers and operations folk who are interested in interacting with the Kubernetes API using Python.",
      "sub_title": "Manage Kubernetes with Python using the open source, pythononic API wrapper we developed called Kube",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 14:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@cobecto",
      "id": 734,
      "speakers": "David Charles",
      "title": "Managing Kubernetes from Python using Kube",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Operations",
        "Infrastructure",
        "Open-Source",
        "python",
        "System Administration"
      ],
      "abstract_long": [
        "## Abstract\r\nDocker has had a transformative influence on the way we deploy software and Kubernetes, the Google Borg inspired control plane for Docker-container- hosting-clusters, is gaining similar momentum.  Being able to easily interact with this technology from Python will become an increasingly important capability in many organisations.  I'll discuss what the motivations behind writing Kube.  We'll dive into Kube using the Python interactive interpreter, getting connected to the API, and simple viewing and label update operations. Finally I'll discuss more advanced resource management activities like Kube's 'watch' API capability.\r\n\r\n## Objectives\r\nAttendees will learn about the key concepts in getting resource information out of their Kubernetes cluster using Kube.\r\n\r\n## Outline\r\n1. Setting the scene (3 minutes)\r\n1. Other Python kubernetes wrappers (2 minutes)\r\n1. Kubernetes concepts quick recap (5 minutes)\r\n1. Dive into Kube in the Python interactive interpreter (10 minutes)\r\n * Outline prerequisites\r\n * The entry point - a Cluster instance\r\n * Views and Items - two important Kube concepts\r\n * Item meta data: labels and versions\r\n1. More Kube features (5 minutes)\r\n * Creating and deleting resources\r\n * Using Kube's Watch API support\r\n * The cluster proxy attribute for when you need to get at the actual API.\r\n1. Q&A (5 minutes)"
      ],
      "abstract_extra": "## Additional\r\nThe Kubernetes interactions will be performed against a single node k-machine instance installed on a laptop.  The talk essentially presents the quick-start portion of the Kube documentation.\r\n\r\n## Speaking experience\r\nThis would be the first time I have given a talk at a major conference but I regularly deliver talks at tech meet-ups.  As CTO at Cobe.io, one of the EP2016 conference sponsors, a significant part of my job is delivering talks to prospective customers, clients and investors. A portion of the talk will be delivered performing simple operations in the python interactive shell and on the command line, but there's no complicated live coding.\r\n\r\nSome blog articles I've written:\r\nhttps://cobe.io/blog/authors/dave-charles/\r\n\r\nTech Tran Network video about monitoring: \r\nhttp://www.thettn.tv/headlines/a-brief-history-of-monitoring-david-charles.aspx",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "Open Source",
        "",
        "DevOps"
      ],
      "emails": "dave@cobe.io",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/managing-kubernetes-from-python-using-kube",
      "admin_type": "",
      "companies": "Cobe.io"
    },
    "406": {
      "abstract_short": "Mocking is a valuable technique for writing tests but mocking effectively is often a stumbling block for many developers and can raise questions about its overall value as a technique.\r\n\r\nThere will be a brief introduction to mocking, then a look at features and techniques of Python\u2019s unittest.mock library and cover some useful tips and common scenarios, so this will be useful to those who have some experience mocking but would like to do so more effectively.",
      "sub_title": "Better mocking with Python",
      "timerange": "2016-07-21 15:45:00, 2016-07-21 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@helenst",
      "id": 406,
      "speakers": "Helen Sherwood-Taylor",
      "title": "Managing Mocks",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Test Driven Development (TDD)",
        "Testing"
      ],
      "abstract_long": [
        "Mocking is a valuable technique for writing tests but mocking effectively is often a stumbling block for many developers and can raise questions about its overall value as a technique.\r\n\r\nThe audience will have some familiarity with unit testing and may have tried mocking before, but some introduction will be provided for those who haven\u2019t. We will look at some features and techniques of Python\u2019s unittest.mock library and cover some useful tips and common scenarios, so this will be useful to those who have some experience mocking but would like to do so more effectively.\r\n\r\nSummary of proposed content:\r\n\r\n1. A short introduction to what mocking is and why it is useful.\r\n2. Tour of Python\u2019s mock library and how to make the most of it\r\n    * Creating and manipulating Mock objects\r\n    * Setting up return values and side effects to control test environment\r\n    * Inspecting mocks - different ways to examine a mock object and find out what happened during the test\r\n    * How and where to patch\r\n3. Common mocking situations - scenarios where mocking is particularly useful and/or tricky to get right. For example - date/time, filesystem, read only properties\r\n4. Some discussion of when mocking is and isn't helpful.\r\n\r\nFocus will be mainly on Python's unittest.mock module but we will also have a brief look at some other useful libraries."
      ],
      "abstract_extra": "I gave this talk previously at PyCon UK last year (https://www.youtube.com/watch?v=haXUaGTp8Bc) which was my first speaking experience.\r\n\r\nI received some encouraging feedback and some interesting suggestions for improvement. I'd like to combine this with my own learnings over the last few months so I can bring a better talk to a wide audience.",
      "tag_categories": [
        "Testing",
        "Testing"
      ],
      "emails": "helen@rrdlabs.co.uk",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/managing-mocks",
      "admin_type": "",
      "companies": ""
    },
    "527": {
      "abstract_short": "When standard Python syntax doesn't cut it, apply metaclasses to make it do what you want. Here I present our metaclass-based implementation of a declarative GUI layout syntax to inspire ideas for what to do when your goals don't fit the Python syntax.",
      "sub_title": "Use the power of metaclasses to bend Python to your needs",
      "timerange": "2016-07-20 12:00:00, 2016-07-20 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@sm6xmm",
      "id": 527,
      "speakers": "Anders Hammarquist",
      "title": "Metaclasses for fun and profit: Making a declarative GUI implementation",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Meta Classes",
        "Use Case"
      ],
      "abstract_long": [
        "When overhauling the user interface of Autolabel's labeling printers, \r\nwe wanted a clean way to describe the layout of the settings widgets.\r\nThe structure we came up with was a declarative class layout that\r\nleverages Python's metaclass concept to build the underlying GTK\r\nwidget structure.\r\n\r\nI will present the implementation to hopefully inspire you to apply\r\nmetaclass techniques to problems that standard Python syntax can't\r\nquite solve. If that fails, you will at least have a way to\r\ndeclaratively construct GTK GUIs.\r\n\r\nA short, non-exaustive, summary of concepts I will mention includes\r\nmetaclasses (obviously), class hierarchies, method resolution\r\norder, super(), and anecdotes of dealing with GTK.\r\n\r\nYou may find some similarities with my talk on Python as a domain\r\nspecific language at Europython 2006\r\nhttp://indico.cern.ch/event/44/session/41/contribution/35"
      ],
      "abstract_extra": "Previous talks:\r\n\r\nPython as a domain specific language, Europython 2006\r\nhttp://indico.cern.ch/event/44/session/41/contribution/35\r\n\r\nMulti-document concistency with MondoDB, Europython 2012\r\nhttps://ep2013.europython.eu/conference/talks/multi-document-consistency-with-mongodb",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases"
      ],
      "emails": "sm6xmm@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/metaclasses-for-fun-and-profit-making-a-declarative-gui-implementation",
      "admin_type": "",
      "companies": "Open End AB"
    },
    "453": {
      "abstract_short": "The BBC micro:bit is a \"moon-shot\" project to provide an open programmable device for kids. The PSF were a partner in the project: the device runs MicroPython ~ a full reimplementation of Python 3. \r\n\r\nThis practical demonstration will show what the device does, how to program it, and how to contribute and/or set the appropriate wheels in motion to adopt and adapt the project for their own purposes.\r\n\r\nA practical demo-led presentation... what could possibly go wrong? ;-)",
      "sub_title": "A practical demonstration that can't possibly go wrong. What's the worst that could happen?",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 14:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ntoll",
      "id": 453,
      "speakers": "Nicholas Tollervey",
      "title": "MicroPython on the BBC micro:bit",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Education",
        "Gadgets",
        "Educational Track",
        "MicroPython",
        "Internet of Things (IoT)"
      ],
      "abstract_long": [
        "The BBC micro:bit is a small programmable device for children. A million of them have been handed out to the UK's 11 and 12 years olds. The Python Software Foundation was a partner in this moon-shot scheme and, thanks to the efforts of Damien George, MicroPython (a full reimplementation of Python 3) runs on the device. All the assets needed to recreate this project have been release under open-source licenses.\r\n\r\nThis practical demonstration shows what can be done with the device and how to program it. I'll provide advice on how best to introduce the device to children and teachers in your own locale.\r\n\r\nThe only prerequisite you need is a passion for Python, education and playing with a cool IoT gizmo. My goal is simply to give attendees enough information to have fun and make cool things with a micro:bit."
      ],
      "abstract_extra": "I regularly speak at conferences and other tech-related events (including PyconUK, PyConUS, Europython, O'Reilly's EdFoo, OpenTech, Techhub and various \"open source\" related meet-ups). In the past year I have been a keynote speaker at PyCon India (https://www.youtube.com/watch?v=Q3kXXtlviiM) and PyCon Slovakia.\r\n\r\nI created PyCon UK's education track in 2012 and have been the organiser ever since although I stepped down last year so I couldn't become a single point of failure. I also created and have organised the London Python Code Dojo since 2009.\r\n\r\nI blog at http://ntoll.org/ and a large number of my Python related demos created during the development of the BBC micro:bit can be found here: https://www.youtube.com/channel/UC9FMO_qG2eE9I1rMaCEZu7A\r\n\r\nI've written three books for O'Reilly (most recently \"Python in Education\" - http://www.oreilly.com/programming/free/python-in-education.csp) and have also written articles for Computer Shopper, O'Reilly Radar and The Guardian.\r\n\r\nI am a fellow of the Python Software Foundation.",
      "tag_categories": [
        "Educational",
        "Hardware",
        ">>> Suggested Track",
        "Python",
        "Hardware"
      ],
      "emails": "ntollervey@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/micropython-on-the-bbc-microbit",
      "admin_type": "",
      "companies": ""
    },
    "730": {
      "abstract_short": "Are we looking in the wrong direction for artificial intelligence and machine learning?\r\n\r\nI'll discuss an older but perhaps more satisfying approach, that has been neglected in recent years.\r\n\r\nIt begins with questions in logic and language, and can be explored using easy techniques. I'll use simple Python programs to explore three key notions in this AI research: **loops**, **self-reference** and **tangled hierarchies**, themselves directly reflected in important programming concepts.",
      "sub_title": "Approaching artificial intelligence from another direction",
      "timerange": "2016-07-19 12:00:00, 2016-07-19 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@EvilDMP",
      "id": 730,
      "speakers": "Daniele Procida",
      "title": "Minds, machines and Python",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "The Answer to Life the Universe and Everything Else",
        "Machine-Learning"
      ],
      "abstract_long": [
        "In recent years, we've seen interesting and spectacular successes in artificial intelligence and machine learning, made possible by leaps in computing power and techniques able to harvest vast quantities of data.\r\n\r\nThe results are uncanny. We see them everywhere, from the personal assistants built into smartphones to the neural networks that do an astounding job of recognising images. However, they're also susceptible to the criticism that they represent not intelligence but a mere simulation of it, and that producing a convincing simulacrum has become more important than a genuine search for  intelligence or learning.\r\n\r\nAt the same time, another, perhaps deeper, approach has become neglected in recent decades, along with the questions it asks about the nature of mind, intelligence and learning. This approach begins with fundamental questions in logic and language, and can be explored using some of the simplest programming techniques.\r\n\r\nIn this talk, I'll use simple Python programs to explore three key notions in this strand of artificial intelligence research: *loops*, *self-reference* and *tangled hierarchies*. The way these concepts directly reflect important concepts in programming suggests that for the programmer, this approach could be more interesting and satisfying, and simply more **fun,** than using huge ontologies and big data to create mere simulacra of intelligence.\r\n\r\nThe examples I use will be concrete and easy to understand, even for novice programmers."
      ],
      "abstract_extra": "I'm very excited by this talk - after many years I feel I am succeeding in bringing together a number of questions in the subject together in a way that works extremely well for programmers, and can use insights from programming itself to illuminate questions about the nature of intelligence.\r\n\r\nI'll be drawing upon multiple sources and work in a range of fields. They include the work of Douglas Hofstadter, language theorists, programmers, even poets and artists.\r\n\r\nMy own academic background is in philosophy, and I've presented some of this material to different audiences, including  to mathematicians. This talk however will be aimed firmly at the general Python audience of EuroPython.\r\n\r\nAbout me\r\n===========\r\n\r\nI am a member of the Django core team and the board of the Django Software Foundation.\r\n\r\nI was the chair of the organising committee of DjangoCon Europe in Cardiff in 2014, and have been involved in several other international community conferences, including PyCon Namibia.\r\n\r\nI've previously spoken at events including DjangoCon US, DjangoCon Europe, PyCon Ireland, PyCon UK, PyCon Slovakia and PyCon Italia.",
      "tag_categories": [
        "Everything Else",
        "Data Science"
      ],
      "emails": "daniele.procida@divio.ch",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/minds-machines-and-python",
      "admin_type": "",
      "companies": "Divio"
    },
    "503": {
      "abstract_short": "Dutch startup MiniBrew intends to disrupt the beer market by introducing an easy-to-use beer brewing machine controlled by a mobile app and communicating with a Python backend. Users want real-time insights in their brewing process, which presented some challenges in terms of architectural design. In this talk Elements Interactive's Chesco discusses best practices and pitfalls of the IoT architecture of MiniBrew by diving into message queues, protocol buffers and full-session logging.",
      "sub_title": "A use case of Python as the driver of an IoT architecture for MiniBrew",
      "timerange": "2016-07-19 15:45:00, 2016-07-19 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@chescales",
      "id": 503,
      "speakers": "Francisco Igual",
      "title": "MiniBrew: Brewing beer with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Hardware/IoT Track",
        "Architecture",
        "Internet of Things (IoT)",
        "APIs",
        "RESTful"
      ],
      "abstract_long": [
        "The number one alcoholic drink in the world is undoubtedly beer. With the rise of craft beers, also homebrewing has become very popular in recent years, although it is still a complex and expensive hobby. Dutch startup MiniBrew intends to change that with their revolutionary beer brewing machine, which is controlled by a mobile app and communicates with a Python API backend. \r\n \r\nIn this talk Chesco will share his ideas and experiences in utilizing Python in the backend architecture for the MiniBrew project he and his team are working on at MiniBrew's development partner Elements Interactive. \r\n \r\nAs many IoT projects, the ingredients for MiniBrew are a device with a limited chipset and internet connection, a backend to store the data acting as the mastermind and a mobile app to allow end users to control the brewing process. \r\n \r\nThe fact that we want users to know in real-time how their beer brewing process is doing presented some challenges which required us to come up with a competitive architecture that would both give real-time status updates and not saturate the server with continuous calls. \r\n \r\nChesco discusses best practices and pitfalls in designing and developing IoT architecture by diving into the RabbitMQ message broker, the MQTT protocol and protocol buffers. He will focus on the REST API and CMS site written in Python, elaborating on high frequency data in the apps, scalability, full-session logging and overcoming common architectural challenges.",
        "",
        "",
        ""
      ],
      "abstract_extra": "For more information on Elements Interactive, please visit: https://www.elements.nl/\r\nFor more information on MiniBrew, please visit: http://www.minibrew.io/",
      "tag_categories": [
        ">>> Suggested Track",
        "Programming",
        "Hardware",
        "Web",
        "Web"
      ],
      "emails": "chesco@elements.nl",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/minibrew-brewing-beer-with-python",
      "admin_type": "",
      "companies": "Elements Interactive"
    },
    "414": {
      "abstract_short": "The OpenGL api is one of the oldest (and most used) graphics library in both the gaming and simulations world. In latest years the api has been extremely re-designed to support modern hardware features available in GPUs. \r\nCan we build realtime graphics application with Python using OpenGL ? Well, obviously Yes !",
      "sub_title": "Learn how to use OpenGL to build your game or simulations using latest versions of the API",
      "timerange": "2016-07-20 14:00:00, 2016-07-20 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@unbit",
      "id": 414,
      "speakers": "Roberto De Ioris",
      "title": "Modern OpenGL with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Game-Development"
      ],
      "abstract_long": [
        "The OpenGL api is one of the oldest (and most used) graphics library in both the gaming and simulations world. In latest years the api has been extremely re-designed to support modern hardware features available in GPUs. \r\nCan we build realtime graphics application with Python using OpenGL ? Well, obviously Yes !\r\n\r\nThe talk will introduce how  2D and 3D graphics works, which math is required for mastering them and why strong hardware cooperation and heavy optimizations have been required since the very beginning of gaming development history.\r\n\r\nOnce the theory is \"almost\" clear, we can start talking about OpenGL, which problems tries to solve and how it evolved in more than 20 years.\r\n\r\nThe last (and the biggest) part of the talk will show how to interface Python with OpenGL, how to draw simple 2D sprites and how to load and show 3D models using simple lighting models. \r\n\r\nWarning: OpenGL shaders (the custom code you upload in the GPU) are written in GLSL, a pseudo-c dialect, so expect a bit of lower-level programming\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "The talk will be very focused on coding and a bit of CG theory. Very few slides will be produced (mainly to explain some graphics pattern or pipeline). The vast majority of time will be in the IDE/editor.",
      "tag_categories": [
        "Everything Else"
      ],
      "emails": "roberto@20tab.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/modern-opengl-with-python",
      "admin_type": "",
      "companies": "20tab"
    },
    "625": {
      "abstract_short": "Monkey-patching is a dynamic modification of a class or a module at runtime.\r\n\r\nThe Python gives developers a great opportunity to use monkey-patching almost everywhere. But should developers do it? Is it a magic trick or a powerful tool? In this talk we will try to give the answers to these questions and try to figure out pros and cons of using monkey-patching.",
      "sub_title": "Pros and cons of using monkey-patching in projects",
      "timerange": "2016-07-22 15:45:00, 2016-07-22 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@itsmyprototype",
      "id": 625,
      "speakers": "Elizaveta Shashkova",
      "title": "Monkey-patching: a magic trick or a powerful tool?",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Debugging",
        "Python general",
        "Best Practice",
        "Development",
        "Programming"
      ],
      "abstract_long": [
        "Monkey-patching is a dynamic modification of a class or a module at runtime.\r\n\r\nThe Python gives developers a great opportunity to use monkey-patching almost everywhere. But should developers do it? Is it a magic trick or a powerful tool? In this talk we will try to give the answers to these questions and try to figure out pros and cons of using monkey-patching.\r\n\r\nFirst of all we will learn what is monkey-patching in Python and consider some basic examples of using it.\r\n\r\nOf course, monkey-patching may cause some problems in the code. We will consider bad ways to use it and try to learn different types of problems monkey-patching may lead to.\r\n\r\nDespite of some bugs that may appear in a patched program, monkey-patching is used in a real life rather often. There are some reasons and motives to do it. We will consider the examples of using monkey-patching in real projects like `gevent`, in some other libraries and in testing. Also we will learn some monkey-patch tricks that helps to solve real-life problems in the Python debugger which is a part of the PyCharm and the PyDev.\r\n\r\nAfter that we will compare using of monkey-patching in Python to using it in an another dynamic language Ruby. Are there any differences between them? Is our reasoning correct for Ruby? \r\n\r\nFinally we will conclude all our thoughts and examples and try to give the answer to the question from title."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Testing",
        "Python",
        "Best Practice and Use Cases",
        "Programming",
        "Programming"
      ],
      "emails": "elizabeth.shashkova@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/monkey-patching-a-magic-trick-or-a-powerful-tool",
      "admin_type": "",
      "companies": "JetBrains"
    },
    "386": {
      "abstract_short": "The talk covers the complexity of managing an asset transformation pipeline through tools like Grunt and NodeJS, especially during deploy, test suites or when a new development environment has to be configured from scratch, and showcase how this complexity can be dodged by using tools like WebAssets and DukPy.\r\n\r\nNo more need to keep around two languages, two package management systems and manage your dependencies between them by youself. Just pip install your app and have it working.",
      "sub_title": "How your CoffeScript, TypeScript, LESS or SASS can be compiled without using nodejs at all",
      "timerange": "2016-07-20 11:15:00, 2016-07-20 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@__amol__",
      "id": 386,
      "speakers": "Alessandro Molina",
      "title": "Moving away from NodeJS to a pure python solution for assets",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Deployment/Continuous Integration and Delivery",
        "Operations",
        "Infrastructure",
        "NodeJS",
        "Testing"
      ],
      "abstract_long": [
        "When working with WebApplications it is common to rely on an asset management pipeline to compile scripts, minify css or preprocess images.\r\n\r\nMost of the tools available today rely on JavaScript to perform those steps and always forced Python developers to rely on NodeJS to have grunt perform the pipeline tasks, coffee-script to compile their CoffeeScript or lessc to build their css. This causes longer setup times for projects newcomers, complex development environment, working with two package managers and dependencies that you use once a week but still need to be there.\r\n\r\nThe talk will showcase the DukPy project and focus on how it is possible to build a pure python asset pipeline relying on DukPy to run javascript tools and WebAssets framework to perform the most common tasks that usually Nodejs and tools like Grunt handle for us, greatly reducing the development environment complexity and making its setup as simple as \u2018pip install\u2019.\r\n\r\nThe talk aims at explaining the complexity of managing an asset transformation pipeline through tools like Grunt, especially during deploy, test suites or when a new development environment has to be created, and showcase how this complexity can be dodged by using tools like WebAssets and DukPy.\r\n\r\nNo more need to keep around two languages, two package management systems and manage your dependencies between them by youself. Just pip install your app and have it working.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps",
        "Web",
        "Testing"
      ],
      "emails": "alessandro.molina@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/moving-away-from-nodejs-to-a-pure-python-solution-for-assets",
      "admin_type": "",
      "companies": "AXANT"
    },
    "676": {
      "abstract_short": "Music transcription allows to convert an audio recording to musical notation through mathematical analysis. In the talk we will focus on transcribing a monophonic audio input and see how we can modify it on the fly. To achieve that, we need to determine pitch and duration of each note, and then use these parameters to create a sequence of MIDI events.",
      "sub_title": "",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@aniawsz",
      "id": 676,
      "speakers": "Anna Wszeborowska",
      "title": "Music transcription with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Algorithms",
        "Use Case",
        "Science Track",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)"
      ],
      "abstract_long": [
        "Music transcription allows to convert an audio recording to musical notation through mathematical analysis. It is a very complex problem, especially for polyphonic music - currently existing solutions yield results with approx. 70% or less accuracy.\r\n\r\nIn the talk we will focus on transcribing a monophonic audio input and see how we can modify it on the fly.\r\nTo achieve that, we need to determine pitch and duration of each note, and then use these parameters to create a sequence of MIDI events. MIDI stands for _Musical Instrument Digital Interface_ and it encodes commands used to generate sounds by musical hardware or software.\r\n\r\nLet's see how to play around with sounds using Python and a handful of its powerful libraries. And let's do it in real-time!"
      ],
      "abstract_extra": "I have led a couple of workshops at conferences, such as:\r\nPolyConf 2014 - A polyglot approach to building applications\r\nPyconPL 2014 - Web scraping\r\nPolyConf 2015 - Tandems. Workshops for mothers and children\r\nPyconPL 2015 - Introduction to TDD\r\n\r\nand presented PyLadies Poland organization at Lightning Talks on varied conferences as well as during discussion panels or interviews.\r\n\r\nI have also led a series of workshops under the shield of PyLadies Poland (which I am a founder of), Geek Girls Carrots as well as mentored for DjangoGirls.\r\n\r\nI happen to talk a lot, especially about the stuff I am deeply involved with :)",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Data Science"
      ],
      "emails": "anna.wszeborowska@ableton.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/music-transcription-with-python",
      "admin_type": "",
      "companies": "Ableton"
    },
    "502": {
      "abstract_short": "Visual data exploration, e.g. of social networks, can be ugly manual work. The talk will be an introduction for the combined usage of NetworkX and Bokeh in a Jupyter Notebook to show how easy interactive network visualization can be.",
      "sub_title": "Network Manipulation Meets Interactive Visualization",
      "timerange": "2016-07-22 16:15:00, 2016-07-22 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 502,
      "speakers": "Bj\u00f6rn Meier",
      "title": "NetworkX Visualization Powered by Bokeh",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Visualization",
        "Web General"
      ],
      "abstract_long": [
        "During some work with social network analysis my favoured tool to study the networks was NetworkX. It provides a wide set of features and algorithms for network analysis, all in Python. But the functionality to visualize networks is not very strong and not to mention the missing interactive manipulation. However during the exploration of data: exporting, feeding an extra tool for visualization and then manipulating data manually was a tedious workflow.\r\n\r\nAs I also had the optional target of presenting networks in a browser, I improved this workflow by creating a Flask web application providing interfaces to my networks. On the browser side I created a javascript client based on D3.js. In retrospective the required programming effort in Python and also in Javascript was too much for such a task. And exactly this target, interactive visualization in a browser (and as bonus in a Jupyter Notebook), can be achieved quiet easy now with Bokeh.\r\n\r\nThe talk will be a step by step introduction, starting with the basic visualization of a network using Bokeh, NetworkX and a Jupyter Notebook. Next, how to create interactions with your network which will be used to change a network structure, e.g. a leaving person. As we want to see directly the impact of these changes in a network I will finally show how to update networks and visualize directly how the importance of the remaining people changes. And all this can be achieved with Python and maybe a bit of Javascript.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Web"
      ],
      "emails": "bjoern@opentrash.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/networkx-visualization-powered-by-bokeh",
      "admin_type": "",
      "companies": "Blue Yonder GmbH"
    },
    "685": {
      "abstract_short": "This is an introductory talk to modern brain image analysis tools.\r\nI will show how to use nipy tools to process one resting-state fMRI subject, perform intra-subject registration, ICA analysis to extract and visualize resting-state networks.\r\nIf the time allows me I will introduce an anatomical brain atlas and how to perform non-linear registration to do atlas-based segmentation.\r\n",
      "sub_title": "",
      "timerange": "2016-07-22 10:30:00, 2016-07-22 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@alex_savio",
      "id": 685,
      "speakers": "Alexandre Savio",
      "title": "Nipy on functional brain MRI",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Science"
      ],
      "abstract_long": [
        "This is an introductory talk to modern brain image analysis tools.\r\nI will show how to use nipy tools to process one resting-state fMRI subject, perform intra-subject registration, ICA analysis to extract and visualize resting-state networks.\r\nIf the time allows me I will introduce how to perform non-linear registration to to atlas-based segmentation.\r\n\r\nThe outline of the talk:\r\n1. Present the COBRE dataset and show its characteristics.\r\n2. Use nibabel to open a NifTI file and see the matrix/volume parameters.\r\n3. Use nilearn.plotting to show the anatomical image.\r\n4. Use nipy to co-register the anatomical image to the fMRI image.\r\n5. Use nilearn to perform CanICA and plot ICA spatial segmentations.\r\n\r\nIf time allows:\r\n7. Present a brain anatomical atlas and its template.\r\n8. Present the tools needed for non-linear registration.\r\n9. Show the result of an atlas-based segmentation result.\r\n10. Use nilearn to calculate the resting-state functional connectivity matrix of the subject.\r\n11. Plot it with Bokeh.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "-",
      "tag_categories": [
        "Sciences"
      ],
      "emails": "alexsavio@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/nipy-on-functional-brain-mri",
      "admin_type": "",
      "companies": "TUM, ACPySS"
    },
    "601": {
      "abstract_short": "Bokeh is a unique library in its genre that lets users create beautiful and complex visualizations from Python. \r\n\r\nThe talks shows a comprehensive overview of the most powerful and popular Bokeh features, like: the optimized websocket based server for  performant python callbacks from actions on the browser, Javascript callbacks written in Python (YES!!), bokeh command that lets target different outputs from the same input, JS transforms from Python, high-level charts, Geo support, ...",
      "sub_title": "From how to look into billions of points to writing JS callbacks.. we'll look at Bokeh power!",
      "timerange": "2016-07-21 11:15:00, 2016-07-21 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@b_smoke",
      "id": 601,
      "speakers": "Fabio Pliger",
      "title": "OMG, Bokeh is better than ever!",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Visualization",
        "Big Data",
        "Use Case",
        "Open-Source",
        "HTML5"
      ],
      "abstract_long": [
        "Bokeh is a unique library in its genre that lets users create beautiful and complex visualizations from Python (and other languages) to the browser without actually writing Javascript or HTML. \r\n\r\nIn the last year the Bokeh team have added a large number of unique features that are extremely powerful. Fully optimized websocket based server that enables performant python callbacks from actions on the browser, Javascript callbacks written in Python (YES!!), bokeh command that lets target different outputs from the same input, JS transforms from Python, high-level charts, Geo support, ...\r\n\r\nAnyone interested in powerful and easy visualizations should take a look at it. :)",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Best Practice and Use Cases",
        "Open Source",
        "Web"
      ],
      "emails": "fabio.pliger@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/omg-bokeh-is-better-then-ever",
      "admin_type": "",
      "companies": "Continuum Analytics"
    },
    "422": {
      "abstract_short": "ZeroDB is an end-to-end encrypted database that lets users operate on encrypted data without exposing encryption keys to the database server. The familiar client-server architecture is unchanged, but query logic and encryption keys are pushed client-side. Since the server has no insight into the nature of the data, the risk of data being exposed via a server-side data breach is eliminated.",
      "sub_title": "Search, sort, query, and share ciphertext without exposing encryption keys to the database serve",
      "timerange": "2016-07-21 10:30:00, 2016-07-21 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@https://twitter.com/newmichwill",
      "id": 422,
      "speakers": "Michael Egorov",
      "title": "Operating on Encrypted Data with ZeroDB",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Security",
        "Infrastructure",
        "Open-Source",
        "Cryptography",
        "Databases"
      ],
      "abstract_long": [
        "ZeroDB is an open-source end-to-end encrypted database that enables clients to operate on (search, sort, query, and share) encrypted data without exposing encryption keys or cleartext data to the database server. The familiar client-server architecture is unchanged, but query logic and encryption keys are pushed client-side. Since the server has no insight into the nature of the data, the risk of data being exposed via a server-side data breach is eliminated. Even if the server is successfully infiltrated, adversaries would not have access to the cleartext data and cannot derive anything useful out of disk or RAM snapshots. \r\n\r\nZeroDB provides end-to-end encryption while maintaining much of the functionality expected of a modern database, such as full-text search, sort, and range queries. Additionally, ZeroDB uses proxy re-encryption and/or delta key technology to enable secure, granular sharing of encrypted data without exposing keys to the server and without sharing the same encryption key between users of the database.\r\n\r\nZeroDB can be used by enterprises to securely outsource on-premise database and storage infrastructure to cloud environments. Enterprises can encrypt client-side and keep keys on-premise, so that they're only pushing encrypted data to the cloud.\r\n\r\nAdditionally, developers can easily write end-to-end encrypted applications with strong security and privacy guarantees."
      ],
      "abstract_extra": "Interview on The Changelog: https://changelog.com/190/\r\n\r\nBlog: https://medium.com/@ZeroDB_/\r\n\r\nWhite paper: http://arxiv.org/abs/1602.07168\r\n\r\nGitHub org: https://github.com/zero-db\r\n",
      "tag_categories": [
        "Security",
        "DevOps",
        "Open Source",
        "Security",
        "Databases"
      ],
      "emails": "michwill@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/operating-on-encrypted-data-with-zerodb",
      "admin_type": "",
      "companies": "ZeroDB"
    },
    "551": {
      "abstract_short": "There's a ton of digital ink spent on the subject of productivity. Choosing the right tools, the right editor, plugins, the right OS, keyboard shortcuts, mouse gestures, etc.\r\n\r\nWell, this is not what this talk is about! It's about everything else around your computer that can boost your productivity. It's about communication, getting things done, working less while doing more, sleeping good, and ultimately, staying healthy. ",
      "sub_title": "Staying productive beyond your keyboard",
      "timerange": "2016-07-22 15:45:00, 2016-07-22 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@nzupan",
      "id": 551,
      "speakers": "Nejc Zupan",
      "title": "Optimize Thyself",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Tooling",
        "Python general",
        "Development",
        "Programming"
      ],
      "abstract_long": [
        "There's a ton of digital ink spent on the subject of productivity. Choosing the right tools, the right editor, the right plugins, the right OS, mapping  keyboard shortcuts, using mouse gestures, the list goes on and on.\r\n\r\nThis is not what this talk is about! It's about everything else around your computer that can boost or kill your productivity. It's about efficient communication, getting things done, working less while doing more, sleeping good, keeping your blood sugar at optimal levels, and ultimately, staying healthy. \r\n\r\nHow should I know? I'm juggling my time between my lifetime addiction to windsurfing , being a father and running a successful Python shop. My working time is very limited and I need to make the most of it. In this talk I'll go through what works for me and point to research on the subject.\r\n"
      ],
      "abstract_extra": "I've been giving talks (and an occasional keynote) regularly on various (mostly Plone related) events since around 2010:\r\n* https://vimeo.com/110423315\r\n* https://www.youtube.com/watch?v=HsGLLGeXFOU\r\n* https://www.youtube.com/watch?v=egwnZUmR6CE\r\n* https://plone.org/events/regional/past-events/pssa/2012\r\n* http://www.slideshare.net/zupo",
      "tag_categories": [
        "Programming",
        "Python",
        "Programming",
        "Programming"
      ],
      "emails": "nejc.zupan@niteoweb.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/optimize-thyself",
      "admin_type": "",
      "companies": "NiteoWeb Ltd."
    },
    "603": {
      "abstract_short": "Ever wondered how Python works under the hood? One way to learn about Python-the-C-program is by exploring the C API for writing Python bindings to native C libraries. In this talk, we will walk through a simple example of making a C library callable from Python code and vice versa. Along the way, we will encounter some essential features of Python: reference counting, memory management, and the inner-workings of objects and modules.",
      "sub_title": "A Beginner's Guide to C Extensions for Python",
      "timerange": "2016-07-22 14:30:00, 2016-07-22 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 603,
      "speakers": "Sophia Davis",
      "title": "Peeking into Python\u2019s C API",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Data Structures",
        "CPython"
      ],
      "abstract_long": [
        "We all love Python. It\u2019s so elegant and easy to use as a programming language that we forget about the giant, complicated C program executing our strings of white-space sensitive code. For many Python programmers, this side of Python is just a big black box. It works well, so thankfully we don\u2019t *need* to go messing around inside... but what if you *want* to look into the inner workings of this powerful tool? One way to dive into the C-program-side of Python is by exploring the C API for writing Python bindings to native C libraries. In this talk I will explore the basics of this API as I recount my journey to make a simple C library callable from Python code, and allow C code to invoke objects defined in pure Python. Along the way, we will encounter some essential features of Python: reference counting, memory management, and the inner-workings of objects and modules. ",
        "",
        "",
        ""
      ],
      "abstract_extra": "This talk was originally presented at the Amsterdam Python Meetup in February 2016.",
      "tag_categories": [
        "Programming",
        "Python"
      ],
      "emails": "scdgrapefruit@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/peeking-into-pythons-c-api",
      "admin_type": "",
      "companies": "Optiver Services B.V."
    },
    "743": {
      "abstract_short": "In the intersection of mechanics, mathematics and \"cool stuff that travels through space\" lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. In this talk we will describe poliastro, a pure Python library we can use to compute orbital maneuvers, plot trajectories and much more. The role of JIT compiling (using numba) to drop the previously used FORTRAN algorithms will also be discussed, as well as the importance of open source in scientific discoveries.",
      "sub_title": "Python for Astrodynamics or how to compute complicated orbits using open source",
      "timerange": "2016-07-20 14:30:00, 2016-07-20 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@astrojuanlu",
      "id": 743,
      "speakers": "Juan Luis Cano",
      "title": "Per Python ad Astra",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Science",
        "Algorithms",
        "Open-Source",
        "Physics"
      ],
      "abstract_long": [
        "In the intersection of mechanics, mathematics and \"cool stuff that travels through space\" lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. Rocket launches have never been so popular thanks to companies like Space X, more and more investors pay attention to aerospace startups and amazing missions explore our planet and our Solar System every day. In this talk we will describe poliastro, a pure Python library we can use to compute orbital maneuvers, plot trajectories and much more. The role of JIT compiling (using numba) to drop the previously used FORTRAN algorithms will also be discussed, as well as the importance of open source in scientific discoveries."
      ],
      "abstract_extra": "Versions of this talk already delivered in SciPy Latin America 2015 and 6th International Conference on Astrodynamics Tools and Techniques:\r\n\r\n- https://speakerdeck.com/pybonacci/per-python-ad-astra\r\n- https://indico.esa.int/indico/event/111/session/32/contribution/5\r\n",
      "tag_categories": [
        "Sciences",
        "Data Science",
        "Open Source",
        "Sciences"
      ],
      "emails": "juanlu001@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/per-python-ad-astra",
      "admin_type": "",
      "companies": "Indizen"
    },
    "657": {
      "abstract_short": "Python is a great language. Easy to learn, friendly to use, widely used.\r\n\r\nIt is not, however, renowned for being fast.  In a lot of situations that does not matter.  Sometimes it really does. This talk will introduce you to some tools and techniques for making sure your Python code becomes fast enough \u2013 without turning into a maintenance nightmare. Warning: may contain small bits of other languages.",
      "sub_title": "how to write good, fast, pythonic code",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 657,
      "speakers": "Burkhard Kloss",
      "title": "Performant Python",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Beginners",
        "Clean Code",
        "Science Track",
        "Best Practice",
        "Educational Track"
      ],
      "abstract_long": [
        "Python is a great language. Easy to learn, friendly to use, widely used.\r\n\r\nIt is not, however, renowned for being fast.  In a lot of situations that does not matter.  Sometimes it really does.  This talk will introduce you to some tools and techniques for making sure your Python code becomes fast enough \u2013 without turning into a maintenance nightmare.  Fast code does not have to be unreadable - and when you're writing Python, it really pays of to think \"pythonically\".\r\n\r\nThat does mean using the included batteries, and utilising the ecosystem of tools around the language, too.\r\n\r\n Warning: may contain small bits of other languages."
      ],
      "abstract_extra": "Speaking experience: \r\nI have given talks at Nordevcon (http://www.nordevcon.com/) and the ACCU Conference (http://accu.org/index.php/conferences)  over the last few years.\r\n\r\nThis talk is an extended and revised version of the presentation I gave at Nordevcon in February this year, with additional material.",
      "tag_categories": [
        "Educational",
        "Educational",
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        ">>> Suggested Track"
      ],
      "emails": "burkhard.kloss@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/performant-python",
      "admin_type": "",
      "companies": ""
    },
    "474": {
      "abstract_short": "When a program is not fast enough, we call on the profiler to save us. But what happens when the program is hard to profile, like for instance the Python Debugger? In this talk we're going dive deep into Vmprof, a Python profiler, and see how it helps us find out why a debugger can be slow. Once we find the culprit, we'll use Cython to optimise things. \r\n",
      "sub_title": "Using Vmprof to profile a Python debugger and then optimise it with Cython",
      "timerange": "2016-07-18 11:15:00, 2016-07-18 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@https://twitter.com/DmitryTrofimov",
      "id": 474,
      "speakers": "Dmitry Trofimov",
      "title": "Profiling the unprofilable",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Cython",
        "Best Practice",
        "Performance",
        "Case Study",
        "Open-Source"
      ],
      "abstract_long": [
        "Profile is the main way to find slow parts of your application, and it's often the first approach to performance optimisation. While there are quite a few profilers, many of them have limitations. In this talk we're going to learn about the new statistical profiler for Python called Vmprof that is actively being developed by the PyPy team. We'll see how it is implemented and how to use it effectively. We will apply it to an open source project, the Pydev.Debugger, a popular debugger used in IDE's such as Pydev and PyCharm, and with the help of Cython which we'll also dig into, we'll work on optimising the issues we find.\r\n\r\nWhether it's a Python debugger, a Web Application or any other kind of Python development you're doing, you'll learn how to effectively profile and resolve many performance issues.\r\n\r\n\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "**Outline**\r\n\r\n - INTRODUCTION (1 MINUTE)\r\n   - About myself\r\n   - How am I related to the topic and why is it important\r\n - THE PROBLEM WITH PERFORMANCE (3 MINUTES)\r\n   - Introducing Pydev.Debugger, a Python debugger\r\n   - Why is it slow? Seems that we need to use a profiler\r\n - FIRST PROFILING ATTEMPT (7 MINUTES)\r\n   - Python profilers overview: CProfile, yappi, line_profiler (4 minutes)\r\n   - Using CProfile to profile the debugger (2 minute)\r\n   - Why doesn't it work? (1 minute)\r\n - SECOND PROFILING ATTEMPT (10 MINUTES)\r\n   - Statistical profilers (1 minute)\r\n   - Introducing Vmprof profiler (3 minutes)\r\n   - Profiling the debugger with Vmprof (6 minutes)\r\n - OPTIMIZATION (15 MINUTES)  \r\n   - What is Cython (5 minutes)\r\n   - Using Cython to optimize the slowest parts of the debugger (6 minutes)\r\n   - Profiling Cython-optimized code (2 minutes)\r\n   - Making Cython optional to support wider range of Python versions (2 minutes)\r\n - CONCLUSION (2 MINUTES)\r\n - Q & A (5 MINUTES)\r\n\r\n*Note*: the talk length can be reduced to 30 minutes. That will mean having no questions, and very limited introduction about into  technologies used (Cython and Vmprof profiler). \r\n\r\n*My knowledge about the topic*\r\nThe project used as an example: Pydev.Debugger.\r\nI am one of the maintainers of the project in collaboration with Fabio Zadrozny. The Cython optimization shown in talk is a real optimization performed recently to make the debugger faster and was our collaborative effort.\r\nThe profiler introduced in the talk: Vmprof.\r\nI am not a direct committer to the project, but I have collaborated with the PyPy team for the last half of a year on making it available on Windows and Mac OSX. I am quite aware of the tool usage limitations as well as it's implementation details.\r\n\r\n*Audience*\r\nThe talk is supposed to be also intelligible for novice developers as they can get out of it some general concepts about profiling and optimization. While developers with intermediate experience will know about implementation details and learn some best practices.\r\n\r\n*Slides*\r\nWhile the main example in the talk will be a real Python debugger, I will avoid showing the real code on my slides. Instead there will be simplified snippets that are able to express the main idea of the optimization needed to perform and the resulting outcome. I tried this approach in my past talk 'Python Debugger Uncovered' and it proved to be a good approach.\r\nThe real project will be visible only during profiling phase in the form of visual call tree and probably other diagrams.\r\n\r\n*Past speaking experience*\r\nI gave a 30 minutes talk called \"Python Debugger Uncovered\" about implementation details of Python debugger at Europython 2014 in Berlin and at PyCon APAC 2015 in Taipei. There are video recordings of this talk: https://www.youtube.com/watch?v=DHf-6gW3-qs https://www.youtube.com/watch?v=HfzdM7rsKbU\r\nI gave a 30-minute talk 'Can Rust make your Python shine?' about Rust programming language and Python profiling at Europython 2015 in Bilbao: https://www.youtube.com/watch?v=weAxEoEfl0M&feature=youtu.be\r\nI presented a 45-minute live-demo about features of PyCharm IDE at Python Unconference 2015 in Hamburg\r\nI presented a 30-minute talk about PyCharm at PyCon Ukraine 2011\r\nI gave several lightning talks about PyCharm and other open-source projects at difference conference including PyCon and DjangoCon Europe.\r\n\r\n",
      "tag_categories": [
        "Python",
        "Best Practice and Use Cases",
        "Programming",
        "Case Study",
        "Open Source"
      ],
      "emails": "trofimov.dmitry@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/profiling-the-unprofilable",
      "admin_type": "",
      "companies": "JetBrains"
    },
    "613": {
      "abstract_short": "Failures are the bane of scaling a modern web service and can cause serious pain for end users! Lucky for us, there are techniques that can help protect your product handle failures in subsystems gracefully. This talk will dive into one of these in depth, the Circuit Breaker pattern, and explore the options it gives us for keeping all our users safe. We will be focusing on several real-world problems and options for how to implement your circuit breaker setup in nice, readable python code.",
      "sub_title": "Handling errors in production with shocking ease",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@scott_triglia",
      "id": 613,
      "speakers": "Scott Triglia",
      "title": "Protect your users with Circuit Breakers",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Web General",
        "Distributed Systems",
        "Web Track"
      ],
      "abstract_long": [
        "The inevitability of failures is the bane of scaling any modern web service and can cause serious pain for end users! Lucky for us, there are techniques that can help protect your product handle failures in subsystems gracefully. This talk will dive into one of these in depth, the Circuit Breaker pattern, and explore the options it gives us for keeping our users safe.\r\n\r\nWe will be focusing on several real-world problems and how they can be addressed by circuit breakers. You should expect to leave the talk with details on simple circuit breakers as well as understanding how they can be adapted for more complex situations. We\u2019ll also discuss some options for how to implement your circuit breaker in readable python.\r\n\r\n\r\n**Contrived FAQ time!**\r\n\r\n**I don\u2019t know what Circuit Breakers are, should I come?**\r\nDefinitely! We\u2019re going to start from scratch and work our way up. Only requirement is basic familiarity with backend services receiving and making HTTP requests.\r\n\r\n**I totally know what Circuit Breakers are, should I come?**\r\nDefinitely! After the intro, the main meat of the talk will be working through a series of more advanced situations and talking about how we can alter the basic circuit breaker setup to address them. \r\n\r\n**I want real-world advice, not made up hypotheticals!**\r\nWell that\u2019s not really a question, but you\u2019ll be happy to know that the examples we\u2019ll discuss come straight from my experience at Yelp. They should be very realistic and broadly applicable.\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "I spoke at Europython, PyDX, PyconCA, and PyconAU in 2015. Videos are Europython (https://www.youtube.com/watch?v=z3_HorshzJ4), PyconAU (http://www.pyvideo.org/video/3964/arrested-development), and PyconCA (https://www.youtube.com/watch?v=RMt43wyg-zg).\r\n\r\nMy team at Yelp is focused on customer-to-business transactions, so we have a ton of experience with applying these types of patterns to safely minimize costly failures in production. I\u2019m excited to get a chance to share this specific technique with the EuroPython audience :)\r\n\r\nNot requirements, but ideal preferences for the talk time.\r\n* early in the conference schedule\r\n* not in the last session of any day",
      "tag_categories": [
        "Web",
        "DevOps",
        ">>> Suggested Track"
      ],
      "emails": "scott.triglia@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/protect-your-users-with-circuit-breakers",
      "admin_type": "",
      "companies": "Yelp"
    },
    "395": {
      "abstract_short": "As developers we all love well-documented, well-tested packages. If we do the same for our code it is easier for others to re-use our hard work, and maybe even contribute. We will take a quick look on how to do this using popular tools and only a small investment of time. With Github and some simple tools, setting up a well-groomed package doesn't have to be difficult.",
      "sub_title": "",
      "timerange": "2016-07-21 14:00:00, 2016-07-21 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 395,
      "speakers": "Marko Samastur",
      "title": "Publish your code so others can use it in 5 easy steps",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Beginners",
        "Best Practice",
        "PyPi",
        "Open-Source",
        "Community"
      ],
      "abstract_long": [
        "Every Python open-source developer wants their software to be used. As developers, we trust software that is tested and well-documented.\r\n\r\nIn this talk we'll go through 5 steps for how to do this for your own packages.\r\n\r\nWe will take a quick look on how to do this using popular tools and small investment of time:\r\n\r\n- Write a setup.py script for a pure Python package\r\n- Set up py.test, tox and coverage to test our package with multiple versions of Python\r\n- Configure Github to use Travis CI & coveralls.io to automatically test our package every time we commit\r\n- Register and publish our package to PyPI\r\n- Setup our documentation on ReadTheDocs\r\n\r\n"
      ],
      "abstract_extra": "**Objectives**\r\n\r\nMy goal is to inspire a newcomer to PyPI and the Github ecosystem with enough knowledge to get them off the ground in creating pure Python package. Using py.test, tox, and coverage combined with Travis CI and coveralls for solid testing with published results. Also show how easy it is to publish a package to PyPI, check requirements are up-to-date using requires.io, publish documentation on RTFD. \r\n\r\n\r\n**Talk outline**\r\n\r\nIntroduction (1min / 1min)\r\n\r\n- why you\u2019d want this\r\n- tools to use\r\n- there\u2019s a github repo with details (notes not necessary)\r\n\r\nBasics of setup.py (5min / 6min)\r\n\r\n- anatomy of a pure Python setup.py\r\n- setting requirements\r\n- specifying packages to include\r\n- maybe: quick overview of Trove identifiers\r\n- maybe: dealing with versions (have one place to set it)\r\n\r\nTesting locally (5 min / 11min)\r\n\r\n- py.test setup\r\n- checking test coverage\r\n- testing with various Python versions with tox\r\n\r\nCI with Travis (5min / 16min)\r\n\r\n- registering account on travis-ci.org and adding project\r\n- basic .travis.yml configuration\r\n\r\nAdding coverage check with coveralls.io (3min / 19min)\r\n\r\n- registering account and adding project\r\n- changes to .travis.yml (install coveralls package; publish with coveralls command)\r\n\r\nPublishing on PyPI (3min / 22min)\r\n\r\n- registering package\r\n- pushing changes\r\n\r\nPublishing on ReadTheDocs (5min / 27min)\r\n\r\n- registering Github project\r\n- Sphinx and sphinx-quickstart; RTD configuration tweaks\r\n- just some pointers to some docs on how to write reStructuredText\r\n\r\nConclusion (2min / 29min)\r\n\r\n- what wasn\u2019t covered (documentation, mixed packages\u2026)\r\n- where to get more information (cookie cutter package)\r\n\r\n**Previous experience**\r\nI've attended few EuroPythons, a number of DjangoCons and many local Python Meetups. I have presented to large audiences (500+) before, including on technical subjects (Web 2.0 Expo Europe 2008).\r\n\r\nBecause talk itself covers a lot of information that cannot be adequately presented in 30 minutes (or 45) it will be supported with a template repository on Github including cookiecutter script to produce a documented working setup for covered (and not covered) services.\r\n\r\nI have also already published a few packages on PyPI.\r\n\r\n",
      "tag_categories": [
        "Educational",
        "Best Practice and Use Cases",
        "Python",
        "Open Source",
        "Community"
      ],
      "emails": "markos@gaivo.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/publish-your-code-so-others-can-use-it-in-5-easy-steps",
      "admin_type": "",
      "companies": ""
    },
    "661": {
      "abstract_short": "Pygame Zero is a new game engine for education, built on top of Pygame. It makes writing your first games extremely simple, while saving beginners from certain potential pitfalls. Daniel will introduce Pygame Zero, walk through creating a simple game, and discuss the background for Python in education and the design philosophy behind Pygame Zero.",
      "sub_title": "A zero-boilerplate game framework",
      "timerange": "2016-07-18 16:00:00, 2016-07-18 16:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@lordmauve",
      "id": 661,
      "speakers": "Daniel Pope",
      "title": "Pygame Zero",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Education",
        "Educational Track",
        "Game-Development"
      ],
      "abstract_long": [
        "Pygame Zero is a new game engine for education, built on top of Pygame. It makes writing your first games extremely simple, while saving beginners from certain potential pitfalls. This talk will introduce Pygame Zero, walk through creating a simple game, and discuss the background for Python in education and the design philosophy behind Pygame Zero.\r\n\r\nPygame is a powerful set of libraries for graphics, sound, input and more. But it is just a library: each program needs to import and set up the libraries, implement a game loop and load resources among numerous other concerns. While seasoned Pythonistas have no trouble with this, teachers told us that they found it difficult to teach with Pygame. There is simply too much boilerplate involved, and getting students to reproduce the boilerplate perfectly before useful lessons can begin takes too much time out of a 40-minute lesson.\r\n\r\nPygame Zero is simple enough that a lesson can be broken down into bitesize steps where meaningful progress can be made with just a couple of lines of code at a time."
      ],
      "abstract_extra": "This talk will be a revised version of a talk I've already given at the Raspberry Pi Birthday weekend and which has also been accepted for Pycon US.\r\n\r\nI gave a brief lightning talk at Europython 2015 and this will be an extended version that introduces several of the features of Pygame Zero\r\n\r\nI have spoken at various Python conferences including Europython, Pycon UK and lightning talks at Pycon US and the London Python Dojo. I am a two-time winner of the Pyweek games programming contest.",
      "tag_categories": [
        "Educational",
        ">>> Suggested Track",
        "Everything Else"
      ],
      "emails": "lord.mauve@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/pygame-zero",
      "admin_type": "",
      "companies": "Mauve Internet"
    },
    "741": {
      "abstract_short": "\r\n\r\n - New features of pytest's upcoming major version 3.0\r\n - Breaking changes and other important information\r\n - Recap of the first developer sprint in June, 2016\r\n - Thank you notes to all who have contributed to the fundraiser\r\n\r\n",
      "sub_title": "Demonstration, New Features, Important Bugfixes & Sprint Recap",
      "timerange": "2016-07-21 11:15:00, 2016-07-21 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@hackebrot",
      "id": 741,
      "speakers": "Raphael Pierzina",
      "title": "Pytest 3.0",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Open-Source",
        "Documentation",
        "Testing",
        "Community"
      ],
      "abstract_long": [
        "Pytest is a mature testing framework for Python that is developed by a thriving and ever-growing community of volunteers. Following the principle of \"no API is the best API\" it uses plain assert statements and regular Python comparisons. Writing tests with pytest requires little to no boilerplate code and powerful features allow easy parametrization and intelligent test selection.\r\n\r\nIn this talk we will have an in-depth look at new features of pytest 3.0 and live demo possible use cases. We will also learn about important bugfixes and other enhancements of the upcoming major release. Backwards-incompatible changes will be addressed and changes made to the documentation will be highlighted.\r\n\r\nIf you are already familiar with pytest, you will be happy to hear about significant improvements of the fixture and hook system but also what's in store for a better integration with tox, an important tool that allows testing across different Python versions.\r\n\r\nIn June, 2016 more than 25 Pythonistas from around the globe gather in Freiburg, Germany to work on the release and set the path for future developments of the core framework. This is a big step forward for the project made posssible by a fundraiser that reached 108% of it's initial goal.\r\n\r\nI will share our experiences from the developer sprint while they are still fresh and explain why these events are incredibly important for a community and give advice on how to organize your own."
      ],
      "abstract_extra": "For more information on the sprint see: https://www.indiegogo.com/projects/python-testing-sprint-mid-2016\r\n\r\nIf there are no more 45 min slots available, I can skip over live demos of new features to reduce the talks duration to 30 min.",
      "tag_categories": [
        "Open Source",
        "Programming",
        "Testing",
        "Community"
      ],
      "emails": "raphael.pierzina@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/pytest-30",
      "admin_type": "",
      "companies": "FanDuel"
    },
    "607": {
      "abstract_short": "Todo programador tiene inter\u00e9s para que su software sea fiable y estable. Haremos una sencilla introducci\u00f3n a pytest con el caso de uso de un site internacional para el que generamos cientos de tests y redujimos dr\u00e1sticamente los errores en producci\u00f3n. Con este simple ejemplo demostraremos que no siempre necesitamos hacer TDD para disfrutar de las ventajas de un framework de testing.",
      "sub_title": "O como un framework de testing puede substituir las p\u00edldoras para dormir",
      "timerange": "2016-07-19 14:30:00, 2016-07-19 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@paurullan",
      "id": 607,
      "speakers": "Pau Ru\u0140lan Ferragut",
      "title": "Pytest desde las trincheras",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Best Practice",
        "Tooling",
        "Case Study",
        "Test Libraries (pyTest/node/...)",
        "Testing"
      ],
      "abstract_long": [
        "Las metodolog\u00edas de desarrollo que incorporan la escritura de pruebas desde el momento cero tienden a generar c\u00f3digo m\u00e1s estable y fiable pero la realidad es que muchas veces no gozamos del privilegio ni del presupuesto para escribir tests para todas las caracter\u00edsticas de nuestro producto. Pero si tenemos a nuestra disposici\u00f3n herramientas de testing que nos permitan eliminar los errores evitables como romper enlaces en la p\u00e1gina de inicio nos quitaremos el miedo a hacer pases a producci\u00f3n y generaremos m\u00e1s valor al negocio.\r\n\r\nLa charla no tiene pretensi\u00f3n de ser ni una introducci\u00f3n al test driven development ni de las complejidades de qu\u00e9 es un buen o mal test. El objetivo es animar a todo aquel que todav\u00eda pruebe sus proyectos manualmente a intentar alg\u00fan grado de automatizaci\u00f3n. Para ello la estructura ser\u00e1 una presentaci\u00f3n de pytest, exponer algunos plugins altamente recomendados y centrarse en el caso de uso de una p\u00e1gina con presencia en ocho pa\u00edses donde automatizamos un mont\u00f3n de comprovaciones simples que nos permitieron reducir los errores evitables.\r\n"
      ],
      "abstract_extra": "Este charla tambi\u00e9n la he propuesto en ingl\u00e9s con el t\u00edtulo \u00abPytest from the trenches\u00bb",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Programming",
        "Case Study",
        "Testing",
        "Testing"
      ],
      "emails": "paurullan@gmail.com",
      "language": "Spanish",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/pytest-desde-las-trincheras",
      "admin_type": "",
      "companies": "APSL"
    },
    "580": {
      "abstract_short": "How does the experienced python programmer fair when faced with python's \"new\" way of doing async programming for the first time?  \r\n\r\nThis talk details the different ways python provides for attacking the problem of asynchronous programming and focuses on the best practices for the future (as of python 3.4 and 3.5)",
      "sub_title": "Do you need to be a wizard to use it?",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 14:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 580,
      "speakers": "Nicolas Lara",
      "title": "Python and Async programming",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python 3",
        "Best Practice",
        "Go-Lang",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "How does the experienced python programmer fair when faced with python's \"new\" way of doing async programing in for the first time?  Do we all know how and when to use Futures, yield from, asyncio, coroutines, the async and await keywords, eventloops, and others?\r\n\r\nA lot has changed in recent versions of Python when it comes to async programming, concurrency, and parallelism. We still have very different ways of approaching the problem in each version, but they are finally (as of python 3.4/3.5) converging to a standard. \r\n\r\nThis talk explores, from the perspective of an experienced python programmer with little to no experience in async programming, what the \"one obvious way\" to do async programming in Python is supposed to be. It does so but analysing examples of different categories of async problems we may want to solve and what the correct way to solve them with the latest versions of Python would be (along with the trade offs of different approaches).\r\n\r\nThe examples include generic CPU-bound problems, IO-bound problems, and \"both-bound\" problems; along with common tasks as building a simple server, scraping, deferring a web response, and traversing graphs.\r\n\r\nWhen useful, I compare the solutions with the approach we would take in languages that have been design for- and are known to be good at async programming like Javascript and Go. "
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Best Practice and Use Cases",
        "Other Programming Languages",
        "Programming"
      ],
      "emails": "nicolaslara@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/python-and-async-programming",
      "admin_type": "",
      "companies": "Lincoln Loop"
    },
    "647": {
      "abstract_short": "This talk explains how Ableton\u2019s developers use Python to build and test C, C++ and Objective-C code. Our \"build-system\" is a collection of Python scripts that simplify our workflows, and help us write better software. The top-level scripts share a common design which makes them easy to use, maintain and extend. This talk describes the essence of that design, so you can apply it to your own project.",
      "sub_title": "",
      "timerange": "2016-07-18 14:45:00, 2016-07-18 15:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 647,
      "speakers": "Alain Martin",
      "title": "Python as the keystone of building and testing C++ applications",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Software Design",
        "Tooling",
        "Case Study",
        "C-Languages",
        "Command-Line"
      ],
      "abstract_long": [
        "At Ableton, we make [Live][1], [Push][2] and [Link][3], unique software and hardware for music creation and performance. Live is a C++ desktop application built from a 15-year old code base. Push is an instrument embedding a multicolor display which renders a [Qt Quick][4] scene powered by [Qt][5]. Link is a technology that keeps music devices in time and is available to app developers as [LinkKit][6], an iOS SDK. \"But what does all that have to do with Python?\", you might ask. \r\n\r\nThis talk answers that question by explaining how our developers use Python to build and test C, C++ and Objective-C source code. Based on [GYP][7], what we call \"build-system\" is a collection of Python scripts that simplify our workflows, and help us write better software. The three top-level scripts, \"configure.py\", \"build.py\" and \"run.py\", share a common design which makes them easy to use by developers, as well as easy to maintain and extend. This talk describes the essence of that design, so you can apply it to your own project.\r\n\r\n[1]: https://www.ableton.com/live/\r\n[2]: https://www.ableton.com/push/\r\n[3]: https://www.ableton.com/link/\r\n[4]: https://www.qt.io/qt-quick/\r\n[5]: http://www.qt.io/\r\n[6]: https://ableton.github.io/linkkit/\r\n[7]: https://gyp.gsrc.io/",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Programming",
        "Programming",
        "Case Study",
        "Other Programming Languages",
        "Programming"
      ],
      "emails": "alain.martin@ableton.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/python-as-the-keystone-of-building-and-testing-c-applications",
      "admin_type": "",
      "companies": "Ableton"
    },
    "536": {
      "abstract_short": "Have you ever wondered how Django models work? I'll present a story of data structure transformation. I will talk about ideas from Django models that I used and how I rediscovered descriptor API. I will talk about printing, serializing, comparing data structures and some  other examples, where descriptors excel at making declarative code easier to write.",
      "sub_title": "How to use Python descriptor API and let testers skip the boring work",
      "timerange": "2016-07-18 14:15:00, 2016-07-18 14:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 536,
      "speakers": "Adrian Dziubek",
      "title": "Python Descriptors for Better Data Structures",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Django",
        "Case Study",
        "Testing"
      ],
      "abstract_long": [
        "I worked as a developer of a testing framework for a C++ server. The framework tested binary protocol implemented by the server.\r\n\r\nMost of the work  involved testers preparing test cases. The data format was primitive structures -- hard to read and easy to break. Field order and all the data had to be entered manually.\r\n\r\nAt the time, I have already seen the better world --  the models from Django. Have you ever wondered how those work? Step by step, I used the ideas from there to make the structures more friendly and on my way I rediscovered descriptors.\r\n\r\nI'll show in incremental steps, how:\r\n\r\n - used keyword arguments to lower signal to noise ratio,\r\n - order of definition for sorting the fields,\r\n - realized that `__call__` is used instead of assignment,\r\n - used `__setattribute__` as first step to extend primitive fields,\r\n - discovered that I'm actually reimplementing descriptors,\r\n\r\nand how it lead me to:\r\n \r\n  - implement printing in a way that is friendly to regression testing,\r\n  - use diff library for less code and better results,\r\n  - implement more readable validation.\r\n\r\nI want to show how descriptors work in Python and how they enable declarative style of programming. By the end of the talk I want you to understand what is at the core of the magic behind field types used by object relational mappers like Django.\r\n\r\n"
      ],
      "abstract_extra": "That would be my first talk for a bigger audience. I have some experience from presenting at the university courses and playing guitar at school, so I'm hopeful about my stage fright. I'll be training with presenting this subject at my company's lightning talks and a local Python group.",
      "tag_categories": [
        "Application Frameworks",
        "Case Study",
        "Testing"
      ],
      "emails": "adrian.dziubek+europython@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/python-descriptors-for-better-data-structures",
      "admin_type": "",
      "companies": "STX Next"
    },
    "455": {
      "abstract_short": "I would like to talk about modern Astronomy where I would give a brief history of Astronomy. I will answer some question: \r\nWhat do we use computers for today in astronomy? \r\nWhere is Python\u2019s place in today\u2019s science? \r\nIs Python is the best language for scientific computation? \r\nI would like to give a short introduction into AstroPy module. Finally I would like presents some result of my research where Python was used to create data.\r\n",
      "sub_title": "",
      "timerange": "2016-07-21 10:30:00, 2016-07-21 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 455,
      "speakers": "S\u0142awomir Piasecki",
      "title": "Python in Astronomy",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Visualization",
        "Science",
        "Python general",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Physics"
      ],
      "abstract_long": [
        "For ages people have been watching the sky, and tried to learn something about all those mysterious lights. In ancient times, scientist used mostly their naked eyes to watch what happened in the night sky. Astronomy is one of the oldest fields in science. \r\nEverything changed when Galileo invented his lunette. Thanks to thi, we were able to proof Copernicus\u2019 new model of the solar system with the sun in the center. \r\n\r\nThe next big step in Astronomy was using computers. Where there are computers and Astronomy, there is a place for programming. For many years astronomers were mostly using Fortran and C/C++. Both are suited to numeric computation and scientific computing. Since they are structured programming language, that makes them very valuable for science.\r\n\r\nOver the past decade, Python has started to be used by more and more people in astronomy. But is there a place in Astronomy for Python, as it is not as fast as Fortran or C/C++? In Python there is a module called AstroPy which helps astronomers in their work. \r\n\r\nMatPlotLib is one of the most popular library use in astronomy. This tool helps created very sophisticated plots and graphs.\r\n\r\nFinally I would like talk about some research I did using Python. For research, we decided to use AUTO. It is a hybrid of Fortran and Python, to compute bifurcation points in mathematical models. In Python we introduce mathematical model, ODE and initial parameters. Fortran does all the computation.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "I have been giving talk during my education career in Spain and USA. \r\nLast year (2015) I gave my first presentations about python in Polish PyCon. Since I got positive feedback I would like to try now in bigger event.",
      "tag_categories": [
        "Data Science",
        "Sciences",
        "Python",
        "Data Science",
        "Sciences"
      ],
      "emails": "slawomir.piasecki@stxnext.pl",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/python-in-astronomy",
      "admin_type": "",
      "companies": "STX Next"
    },
    "619": {
      "abstract_short": "On February 11th 2016 Ligo-Virgo collaboration gave the announce of the discovery of Gravitational Waves, just  100 years after the Einstein\u2019s paper on their prediction.\r\nA brief introdutcion to data analysis methods used in Gravitational Waves (GW) communities  \r\nPython notebook describing  how to analyze the GW event detected on 14 September 2015. \r\n\r\n",
      "sub_title": "",
      "timerange": "2016-07-19 12:00:00, 2016-07-19 12:45:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@ElenaCuoco",
      "id": 619,
      "speakers": "Elena Cuoco",
      "title": "Python in Gravitational Waves Research Communities",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Jupyter/iPython Notebook",
        "Data Science"
      ],
      "abstract_long": [
        "On February 11th 2016 Ligo-Virgo collaboration gave the announce of the discovery of Gravitational Waves, just  100 years after the Einstein\u2019s paper on their prediction.\r\nAfter an introduction on Gravitational Waves, on Virgo Interferometric detector, I will go through the data analysis methods used in Gravitational Waves (GW) communities either for the detector characterization and data condition or for the signal detection pipelines,  showing the use of python we make.\r\nAs practical example I will introduce a python notebook describing  the GW event detected on 14 September 2015 and I will show a few of signal processing techniques.\r\n\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Python",
        "Data Science"
      ],
      "emails": "elena.cuoco@ego-gw.it",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/pyhton-in-gravitational-waves-research-communities",
      "admin_type": "",
      "companies": "European Gravitational Observatory"
    },
    "570": {
      "abstract_short": "Approach to topics, evolution, correlations through the lyrics of some of the greatests rock bands of all times. We will talk about the different phases of this personal project, in which I approach to a passion through a scientific method. \r\n\r\nThis is a project that combine different techniques: \r\n- web crawling\r\n- NoSQL \r\n- Natural Language Processing \r\n- Data visualization",
      "sub_title": "Analysing the lyrics of the greatest rock bands of all time",
      "timerange": "2016-07-22 15:45:00, 2016-07-22 16:15:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@claudiaguirao",
      "id": 570,
      "speakers": "Claudia Guirao Fern\u00e1ndez",
      "title": "Python, Data & Rock'n'Roll",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "Visualization",
        "Natural Language Processing",
        "MongoDB",
        "Data Science",
        "Beginners"
      ],
      "abstract_long": [
        "Have you ever wonder how David Bowie has evolved into the theme of his songs throughout their studio albums? Want to find out in what looks like Nirvana and Pink Floyd?\r\n\r\nApproach to topics, evolution, correlations through the lyrics of some of the greatests rock bands of all times. We will talk about the different phases of this personal project, in which I approach to a passion through a scientific method. \r\n\r\nThis is a project that combine different techniques: \r\n- Web crawling\r\n- NoSQL \r\n- Natural Language Processing \r\n- Data visualization\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Databases",
        "Data Science",
        "Educational"
      ],
      "emails": "guirao.claudia@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/python-data-rocknroll",
      "admin_type": "",
      "companies": "Kernel Analytics"
    },
    "736": {
      "abstract_short": "Query Embeddings is an unsupervised deep learning based system, built using Python and open source libraries (Annoy, keyvi etc.) which recognizes similarity between queries and their vector representations, for a web scale search engine integrated within Cliqz browser [https://cliqz.com/en]. It improves recall for previously unseen queries and is one of the many key components of our search stack. The framework be utilized by other low latency systems involving vector representations.\r\n",
      "sub_title": "Web Scale Search powered by Deep Learning and Python",
      "timerange": "2016-07-18 11:15:00, 2016-07-18 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@codekee",
      "id": 736,
      "speakers": "Ankit Bahuguna",
      "title": "Query Embeddings: Web Scale Search powered by Deep Learning and Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Natural Language Processing",
        "Deep Learning",
        "Open-Source",
        "Data",
        "Machine-Learning"
      ],
      "abstract_long": [
        "A web search engine allows a user to type few words of query and it presents list of potential relevant results within fraction of a second. Traditionally, keywords in the user query were fuzzy-matched in realtime with the keywords within different pages of the index and they didn't really focus on understanding meaning of query. Recently, Deep Learning + NLP techniques try to _represent sentences or documents as fixed dimensional vectors in high dimensional space_. These special vectors inherit semantics of the document.\r\n\r\nQuery embeddings is an unsupervised deep learning based system, built using Python, Word2Vec, Annoy and Keyvi (https://github.com/cliqz-oss/keyvi) which recognizes similarity between queries and their vectors  for a web scale search engine within Cliqz browser. (https://cliqz.com/en)\r\n\r\n![][1]\r\n\r\nThe goal is to describe how query embeddings contribute to our existing python search stack at scale and latency issues prevailing in real time search system.  Also is a preview of separate vector index for queries, utilized by retrieval system at runtime via ANNs to get closest queries to user query, which is one of the many key components of our search stack.\r\n\r\n![][2]\r\n\r\nPrerequisites: Basic experience in NLP, ML, Deep Learning, Web search and Vector Algebra. Libraries:  Annoy. \r\n  \r\n[1]: https://sites.google.com/site/netankit/1.png\r\n[2]: https://sites.google.com/site/netankit/3.png"
      ],
      "abstract_extra": "**Talks:**\r\n - \"Deep Dive into Tensorflow\" as an Invited speaker at TensorFlow and Open AI Meetup, Stylight GmbH, Munich, March 2016. [https://www.youtube.com/watch?v=T0H6zF3K1mc]\r\n -  \"Sentiment Analysis: Machine learning using Python Scikit-Learn\", delivered at FOSS-ASIA. March 2015 at NUS, Singapore.  [https://speakerdeck.com/netankit/sentiment-analysis-machine-learning-with-python-scikit-learn]\r\n- \"Breaking the Wall of Building Effective Communities\" at Falling Walls Lab, Berlin, November 2014  [[https://www.youtube.com/watch?v=y6y-10BQg9o][1]]\r\n\r\n**Master Thesis / IDP :** \r\n- \"Deep Learning Methods for Sentiment Analysis\", conducted jointly at TU Munich and LMU Munich, Germany. October 2015\r\n\r\n**Publications [ACL Anthology]:**\r\n - Facilitating multi-lingual sense annotation: Human mediated lemmatizer, Estonia (GWC) 2014\r\n - HinMA: Distributed Morphology based Hindi Morphological Analyzer, India (ICON) 2014\r\n\r\n**Others:** \r\nOfficial contributor, Mozilla Project: www.mozilla.org/credits/\r\nMozilla Reps (REMO) Profile: https://reps.mozilla.org/u/netankit/\r\n\r\n  [1]: https://www.youtube.com/watch?v=y6y-10BQg9o\r\n",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Open Source",
        "",
        "Data Science"
      ],
      "emails": "ANKITBAHUGUNA@outlook.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/query-embeddings",
      "admin_type": "",
      "companies": "Cliqz GmbH"
    },
    "614": {
      "abstract_short": "GPIO Zero is a new friendly API for physical computing with Raspberry Pi. Like PyGame Zero, it's a minimal boilerplate module that lets you dive straight in and build things with physical components. The Pythonic API was designed for use in education, and was tried and tested with teachers. This talk is the story of how the library came about, how it was developed and I provide a close look at some of its cleverest features.",
      "sub_title": "Developing a new friendly Python API for physical computing with Raspberry Pi",
      "timerange": "2016-07-21 14:30:00, 2016-07-21 15:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@https://twitter.com/ben_nuttall",
      "id": 614,
      "speakers": "Ben Nuttall",
      "title": "Raspberry Pi GPIO Zero",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Education",
        "Raspberry PI",
        "Open-Source",
        "Internet of Things (IoT)",
        "Community"
      ],
      "abstract_long": [
        "I work at the Raspberry Pi Foundation and regularly give workshops on physical computing with Python to kids and teachers and we always found the existing GPIO library difficult to teach with due to its broad scope and verbose nature. Although technically possible to do all sorts of projects, it had a difficult learning curve and even the most basic of examples required explanation of code and electronics concepts.\r\n\r\nGPIO Zero is a new friendly API for physical computing with Raspberry Pi. Like PyGame Zero, it's a minimal boilerplate module that lets you dive straight in and build things with physical components. Simple interfaces are provided for everyday components with obvious features provided with guessable method names. The Pythonic API was designed for use in education, and was tried and tested with teachers. This talk is the story of how the library came about, how it was developed and I provide a close look at some of its cleverest features. The initial batch of work on the library was done by two people in different cities, with all features and changes discussed in length in a series of about 100 GitHub issues over 2 months, and additional features and expansions have been implemented since launch.\r\n\r\nGPIO Zero is now the Foundation's recommended method of interfacing with physical components, and comes pre-installed in the Raspbian Jessie image.\r\n\r\nDocumentation is provided at http://gpiozero.readthedocs.org/"
      ],
      "abstract_extra": "I wrote a blog post on this topic: http://bennuttall.com/gpio-zero-developing-a-new-friendly-python-api-for-physical-computing/\r\n\r\nI have given a number of talks on this subject to a range of audiences. At EuroPython, this will be the developer focused version of the talk, based on: https://speakerdeck.com/bennuttall/gpio-zero-developing-a-friendly-python-api-for-physical-computing-campug\r\n\r\nI spoke at EuroPython 2014 and 2015, PyConUK 2014 and 2015, PyCon Ireland 2014, and gave keynotes at PySS 2014 and EuroSciPy 2014.\r\n\r\nMy talks are documented at http://bennuttall.com/talks/\r\n\r\nNote: although this talk is related to Education, it's more focused at developers.",
      "tag_categories": [
        "Educational",
        "Hardware",
        "Open Source",
        "Hardware",
        "Community"
      ],
      "emails": "ben@raspberrypi.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/raspberry-pi-gpio-zero",
      "admin_type": "",
      "companies": "Raspberry Pi Foundation"
    },
    "640": {
      "abstract_short": "As Armin Ronacher pointed out in a recent blog post, there is more to Python's regular expression module than meets the eye. His post made me wonder what other \u201chidden gems\u201d are stashed away in Python\u2019s `re`. In the talk I share what I\u2019ve learned about the inner workings of this extremely popular and heavily used module.",
      "sub_title": "A look at the inner workings of the `re` module.",
      "timerange": "2016-07-19 14:30:00, 2016-07-19 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 640,
      "speakers": "Ilia Kurenkov",
      "title": "re-Discovering Python's Regular Expressions",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Python general",
        "CPython"
      ],
      "abstract_long": [
        "Anyone who has used Python to search text for substring patterns has at least heard of the regular expression module. Many of us use it extensively for parsers and lexers, extracting information .\r\nAnd yet we know surprisingly little about its inner workings, as Armin Ronacher demonstrated in his recent blog post, \u201cPython's Hidden Regular Expression Gems\u201d. Inspired by this, I want to dive deeper into Python\u2019s `re` module and share what I find with folks at EuroPython. My goal is that at the end of the day most of us walk away from this talk with a better understanding of this extremely useful module.\r\n\r\nHere are a few examples of the kinds of things I would like to cover:\r\n\r\n - A clear presentation of `re`\u2019s overall structure.\r\n - What actually happens behind the scenes when you \u201ccompile\u201d a regular expression with `re.compile`?\r\n - What are the speed implications of using a callable as the replacement argument to `re.sub`?\r\n - re.MatchObject interface: `group` vs. `groups` vs `groupdict`\r\n\r\nTo keep the talk entertaining as well as educational I plan to pepper it with whatever interesting and/or funny trivia I find about the module\u2019s history and structure.\r\n\r\nPrerequisites:\r\nIf you've ever used the `re` module, you should be fine :)\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Python"
      ],
      "emails": "ilia.kurenkov@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/rediscovering-pythons-regular-expressions",
      "admin_type": "",
      "companies": "eGym"
    },
    "677": {
      "abstract_short": "Virtualenv is a great tool for the development environment but it's definitely not suitable for every use case. Also, Docker is great for running the application in production, but not everyone that use it in production tried to use it in the development environment. Why not use the same tool from the beginning of the project and until it hits the production in a uniform stack of tooling? This talk will show use cases of using Docker in the process of development as well.",
      "sub_title": "Building real, immutable, and portable virtual environments using Docker",
      "timerange": "2016-07-21 16:15:00, 2016-07-21 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@mishunika",
      "id": 677,
      "speakers": "Mihai Iachimovschi",
      "title": "Real virtual environments without virtualenv",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Web General",
        "Python general",
        "Open-Source",
        "Docker",
        "Deployment/Continuous Integration and Delivery"
      ],
      "abstract_long": [
        "The process of developing using Python is very straightforward and easy. Still, each and every developer has his own style of developing and building his entire dev environment. Most of us use virtualenvs which are reliable and comfortable to use. But there are some issues. For instance, the repeatability and immutability of the built environment are not guaranteed. \r\n\r\nVirtualenv does a lot of work that targets the direction of somehow isolated and independent environments. They are *almost* *fully* repeatable. In any team, we can hear the notorious expression \"It works for me!\".\r\n\r\nFor some time now, I am using Docker instead of virtualenv for building custom and really-virtual environments that are entirely isolated. The containers are immutable and consistent, so this workflow guarantees repeatability.  Using such technique, not only enables the user to have unique and immutable environments, it also allows de developer to create full app architecture that can then be tested and deployed as is. So the production version will be in identical conditions as the one from the development environment. These features are not provided by virtualenv at all.\r\n\r\nThe goal of this exercise is to try to use totally different tooling for building the application from its first line of code until the production. "
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Python",
        "Open Source",
        "DevOps",
        "DevOps"
      ],
      "emails": "mihai.iachimovschi@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/real-virtual-environments-without-virtualenv",
      "admin_type": "",
      "companies": ""
    },
    "621": {
      "abstract_short": "It is important to understand from the beginning how model API should look like.\r\nDo not repeat your friends\u2019 mistakes and make developers upset!\r\nThere are some simple rules that can make your API cooler - clean, safe and efficient.\r\n\r\nBased on both bad and good examples of REST APIs (I had to deal with) we will learn about best practices.",
      "sub_title": "",
      "timerange": "2016-07-22 14:30:00, 2016-07-22 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 621,
      "speakers": "Malwina Nowakowska",
      "title": "RESTful API - Best Practices.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Best Practice",
        "RESTful",
        "APIs"
      ],
      "abstract_long": [
        "Nowadays building and integrating with Representational State Transfer web services is a very common thing. It seems that creating RESTful API is trivial - nothing could be more wrong.\r\nIn my previous projects I had to integrate with lots of APIs. Unfortunately only some of them were easy to work with. Most of the APIs did not follow the main rules of model API.\r\n\r\nIt is really important to understand how model REST API should look like.\r\nTo make developers happy we will learn best practices of creating REST API from the beginning.\r\n\r\nWe will start with quick introduction what REST is, why principle of REST is so amazing, talk about identifires and explain some key terms.\r\nWe will discuss about architectall constraints and properties.\r\n\r\nMistakes and best practices are based on my experience of developing and maintaining the projects. After this talk you will be able to create model RESTful API developers will be happy to work with.\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Web",
        "Web"
      ],
      "emails": "malwina.nowakowskaa@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/restful-api-best-practises",
      "admin_type": "",
      "companies": "STX Next"
    },
    "543": {
      "abstract_short": "Microservices offer an efficient way to only scale those parts of your application which are performance bottlenecks.\r\n\r\nWe will demo and explain open source tech which allows the easy scaling out across distributed devices. The audience will be able to donate processor cycles from their devices to our demo application (and win a hardware prize).\r\n\r\nThe demo uses [Crossbar.io][1], an open souce application router (written in Python), and all demo code is open source.\r\n\r\n  [1]: http://crossbar.io",
      "sub_title": "Easy distributed systems from mobiles to servers",
      "timerange": "2016-07-22 11:15:00, 2016-07-22 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 543,
      "speakers": "Tobias Oberstein",
      "title": "Scaling Microservices with Crossbar.io",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Scaling",
        "Architecture",
        "Distributed Systems",
        "Internet of Things (IoT)",
        "Microservices"
      ],
      "abstract_long": [
        "Microservices offer an efficient way to only scale parts of your applications which are hotspots. Instead of running multiple instances of a monolithic application, with all the complexity and operational run-time overhead that entails, you can scale only the functionality which is a bottleneck. Today that increasingly means scaling out, not up.\r\n\r\nWe will go over open source technologies which allow the easy scaling out across distributed devices.\r\n\r\nA live demo will allow the audience to participate with its devices (including mobile phones) in an application. (There will be prizes for the donors.)\r\n\r\nThe demo uses [Crossbar.io,][1] an open source router for the open [Web Application Messaging Protocol (WAMP) ][2] written in Python. WAMP supports routed Remote Procedure Calls, and Crossbar.io uses these to implement various load-balancing strategies across endpoints which register a particular procedure.\r\n\r\nWAMP has a first-class library for Python ([Autobahn|Python][3]), but is cross-language, with support for a total of 11 languages. This allows you to implement polyglot and heterogenos microservices applications, from Python to Node.js to C# right into the browser. Microservices can run anywhere, since the outgoing connections to the router which WAMP uses avoid NAT problems.\r\n\r\nAll software used is open source, and all demo code is provided on GitHub under the MIT license.\r\n\r\n  [1]: http://crossbar.io\r\n  [2]: http://wamp-proto.org\r\n  [3]: http://autobahn.ws/python",
        "",
        "",
        ""
      ],
      "abstract_extra": "The talk will give a very brief overview of the advantages of microservices as a modern architectural approach, and then focus on the specific problem of scaling individual microservices. There will be a quick look at some established communication mechanisms and their disadvantages in this context, and an overview of the router Remote Procedure Calls that WAMP provides, their advantages and how Crossbar.io uses these to achieve simple scaling.\r\n\r\nThe demo will allow participants to connect with their own devices (laptops, tablets, mobile phones, remote servers) and donate processor cylces. The simplest way to do so is to call up a Web page in a browser which will connect to the application and provide a JavaScript implementation of the microservice to scale. (This also provides realtime feedback about audience participation.) We will also provide a Python client, and potentially clients in other languages for participants to run on their laptops.\r\n\r\nParticipation will be possible via conference wi-fi, a local dedicated wi-fi network or a mobile network - so problems with the conference wi-fi network (always a possibility) will not impact the demo.",
      "tag_categories": [
        "DevOps",
        "Programming",
        "DevOps",
        "Hardware",
        "Programming"
      ],
      "emails": "tobias.oberstein@tavendo.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/scaling-microservices-with-crossbario",
      "admin_type": "",
      "companies": "Tavendo GmbH"
    },
    "405": {
      "abstract_short": "The server is developed in Python 3.4, using MySQL5.6 \r\nThe mobile device application is developed using Kivy.\r\nThe application in the IoT device is developed in C. \r\nThe IoT device is a hardware device using ATSAMD21 from Atmel, and wifi is made using ESP8266. The security used is sha256, standard in Python. And the IoT device using the crypto device ATECC508A, that generate also sha256.\r\n\r\n\r\n",
      "sub_title": "Server for Communication of IoT devices and Mobile Devices using Wifi Network",
      "timerange": "2016-07-22 14:00:00, 2016-07-22 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 405,
      "speakers": "Joaquin Berenguer",
      "title": "Server for IoT devices and Mobile devices using Wifi Network,",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Algorithms",
        "Beginners",
        "Agile",
        "APIs",
        "Analytics"
      ],
      "abstract_long": [
        "The server is developed in Python 3.4,  the information is stored in a MySQL 5.6 database. \r\nAll IoT devices, Mobile Devices and Windows or Linux Desktop are registered in the database.\r\nAll type of messages that are understood by every type of device, is also registered.\r\nA map between which device  could access which device is also stored in the database.\r\nWith this info, any mobile registered could send a message to a device. The message arrives to the server that resend the message to the IoT device, receive the answer and resend to the Mobile device. \r\nThe Mobile device and the IoT device, could be anywhere, as the server is public, have the registration of every device connected.\r\nThe mobile device application is developed using Kivy.\r\nThe application in the IoT device is developed in C. \r\nThe IoT device is a hardware device using ATSAMD21 from Atmel, and wifi is made using ESP8266. The security used is sha256, standard in Python. And the IoT device using the crypto device ATECC508A, that generate also sha256.\r\nThe server start a thread for every device connected, the communication between thread is made using queues. \r\nDuring the presentation, the server is going to be presented, and IoT device is shown, no demo is going to be made.\r\nA library to manage the database, is used for easy access to the database, and have database independence, also will be shown.\r\nPrerequites: Python 3.4, sha256, threading, queue, mysql.connector, relational database.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "Owner of the company Berentec, from 2014\r\nExperience during many year in Database Environment, working at Sybase during 19 years.\r\n",
      "tag_categories": [
        "Data Science",
        "Educational",
        "Development Methods",
        "Web",
        "Data Science"
      ],
      "emails": "chimo.berenguer@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/server-for-iot-devices-and-mobile-devices-using-wifi-network",
      "admin_type": "",
      "companies": "Berentec"
    },
    "454": {
      "abstract_short": "The Processing project demonstrated that computer art can attract a wider audience to programming. Python has a robust catalog of libraries, including two interfaces to OpenGL. However, none of these libraries replicate Processing\u2019s simplicity when drawing to the screen. I will present my solution to this problem: a re-implementation of VPython\u2019s visual module purely in python called PygletHelper.",
      "sub_title": "",
      "timerange": "2016-07-21 15:45:00, 2016-07-21 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@femion",
      "id": 454,
      "speakers": "Catherine Holloway",
      "title": "Simplifying Computer Art in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Visualization",
        "Teaching",
        "Game-Development"
      ],
      "abstract_long": [
        "Processing is a programming language originally developed by the MIT media lab with the goal of allowing artists, educators, and many others develop striking computer generated or assisted projects without requiring deep knowledge of software engineering or computer graphics. Like Processing, Python has become a favourite language of users from diverse backgrounds, such as web development, education, and science. Unlike Processing, python lacks a simple and easy to use library for drawing shapes. Python\u2019s existing libraries for scientific computing and data analysis could be made even more awesome when combined with a simple drawing library.\r\n\r\nVPython contains a module called visual that established a simple API and convention for drawing shapes, however it was written in C++, prior to the development of pyglet, and thus is not entirely cross-platform. In this talk, I will demonstrate my solution to this problem: a re-implementation of visual purely in Python called PygletHelper. Pyglet, an existing python library, provides a python interface to OpenGL. PygletHelper is built on pyglet but obscures all of the OpenGL calls, such that the user can draw simple geometric shapes to the screen and animate them without needing to know about computer graphics terminology, memory usage, or C data types.\r\n\r\nI will also show some need visualizations of science and music in my talk, as well as the graphical glitches encountered implementing the library. "
      ],
      "abstract_extra": "PygletHelper is open source, and available at: https://github.com/CatherineH/pyglet_helper\r\nI have given many talks in the past about robotics or quantum computing, but this would be my second talk on python if accepted. In 2015 I gave a talk on the Robotics Operating System and Python at PyCon Canada:\r\n\r\nhttps://www.youtube.com/watch?v=oX294t9UYSw",
      "tag_categories": [
        "Data Science",
        "Everything Else",
        "Everything Else"
      ],
      "emails": "milankie@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/simplifying-computer-art-in-python",
      "admin_type": "",
      "companies": "Qubitekk"
    },
    "577": {
      "abstract_short": "This talk is based on a recent consulting project the speaker ran to support the valuation of a Python startup company in the due diligence phase.\r\n\r\nBy following some of the advice from this talk, you should be possible to improve the valuation of your Python startup or consulting business in preparation for investment rounds or an acquisition.",
      "sub_title": "Designing valuable software for fun and profit",
      "timerange": "2016-07-19 16:15:00, 2016-07-19 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@malemburg",
      "id": 577,
      "speakers": "Marc-Andre Lemburg",
      "title": "So you think your Python startup is worth $10 million...",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Databases",
        "Use Case",
        "Best Practice",
        "Business Track",
        "Software Design"
      ],
      "abstract_long": [
        "This talk is based on the speaker's experience running a Python focused software company for more than 15 years and a recent consulting project to support the valuation of a Python startup company in the due diligence phase.\r\n\r\nFor the valuation we had to come up with metrics, a catalog of criteria analyzing risks, potential and benefits of the startup's solution, as well as an estimate for how much effort it would take to reimplement the solution from scratch.\r\n\r\nIn the talk, I am going to show the metrics we used, how they can be applied to Python code, the importance of addressing risk factors, well designed code and data(base) structures.\r\n\r\nBy following some of the advice from this talk, you should be able to improve the valuation of your startup or consulting business in preparation for investment rounds or an acquisition.\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "Marc-Andre Lemburg is a regular speaker at Python conferences and has been giving Python talks ever since the first European Python Meeting in 2001.\r\n\r\nThe following page includes some of the talk he has given over the years:\r\n\r\nhttp://www.egenix.com/library/presentations/\r\n\r\nMarc-Andre also runs a local user group in D\u00fcsseldorf, together with Charlie Clark, where he regularly gives shorter or longer talks on various topics in German:\r\n\r\nhttp://www.egenix.com/library/pyddf/videos.html\r\n",
      "tag_categories": [
        "Databases",
        "Best Practice and Use Cases",
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Programming"
      ],
      "emails": "mal@europython.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/so-you-think-your-startup-is-worth-10-million",
      "admin_type": "",
      "companies": "eGenix.com Software GmbH"
    },
    "501": {
      "abstract_short": "Having to deal with a monolith, an application which became far to big over the time, can be quite bothersome. On the other hand if you split it up and have to deal with lots of smaller components, you might end up in dependency hell. But not only the splitting of the monolith and the management of the dependencies afterwards can be a problem, but also the packaging of you python components itself. \r\n ",
      "sub_title": "",
      "timerange": "2016-07-22 12:00:00, 2016-07-22 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@tmuxbee",
      "id": 501,
      "speakers": "Patrick M\u00fchlbauer",
      "title": "Split Up! Fighting the Monolith",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "System Architecture",
        "Best Practice",
        "Testing",
        "Packaging"
      ],
      "abstract_long": [
        "Do you know this situation, where you and your team are facing this big monolith? An application which has grown far too\r\nbig over the years. Every time when you make a change, you have to fear the code might break at a totally different place, because lots of things\r\nare closely intertwined. But what to do if you are at such a point? Maybe you start thinking about microservices but then questions like\r\n\"Are they really the right thing for us?\" and \"How do we get there?\" arise.\r\n\r\nIn my talk I will show you how we are dealing with our monolith. A collection of multiple python packages without clear boundaries, forming the\r\nactual application - all living in a single monorepo.\r\n\r\nI will talk about how we split up the whole thing, making it more flexible for us and also easier to use individual components by other teams.\r\nAll this, of course, comes with a price: You have to think more about the dependencies between you components. You have to think about how\r\nyou can efficiently test everything, making sure your final application is still working correctly.\r\nDon't loosing yourself in dependency hell and packaging all components correctly becomes quite a challenge.\r\n\r\nThis talk will:\r\n\r\n - show you bad patterns to avoid, so that you don't end up in the above situation in the first place\r\n - give you ideas what to consider when tackling your monolith\r\n - explain how to package your python components and how to mange your dependencies\r\n\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Best Practice and Use Cases",
        "Testing",
        "Python"
      ],
      "emails": "tmuxbiene@googlemail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/split-up-fighting-the-monolith",
      "admin_type": "",
      "companies": "Blue Yonder "
    },
    "748": {
      "abstract_short": "a",
      "sub_title": "",
      "timerange": "2016-07-21 12:00:00, 2016-07-21 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 748,
      "speakers": "Solomon Bisker",
      "title": "Sponsored talk: Hired",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "python"
      ],
      "abstract_long": [
        "a"
      ],
      "abstract_extra": "",
      "tag_categories": [
        ""
      ],
      "emails": "solomon@hired.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/sponsored-talk-hired",
      "admin_type": "",
      "companies": ""
    },
    "524": {
      "abstract_short": "In times of NoSQL databases and Map Reduce Algorithms it's surprising how far\r\nyou can scale the relational data model. At [Blue Yonder](http://blue-yonder.com)\r\nwe use SQLAlchemy in all stages of our data science workflows and handle tenth\r\nof billions of records to feed our predictive algorithms. This talk will dive\r\ninto SQLAlchemy beyond the Object Relational Mapping (ORM) parts and conentrate\r\non the SQLAlchemy Core API, the Expression Language and Database Migrations\r\nwith Alembic.",
      "sub_title": "",
      "timerange": "2016-07-20 11:15:00, 2016-07-20 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@peterhoffmann",
      "id": 524,
      "speakers": "Peter Hoffmann",
      "title": "SQLAlchemy as the backbone of a Data Science company",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Big Data",
        "SQL Alchemy",
        "Data Science",
        "Databases"
      ],
      "abstract_long": [
        "In times of NoSQL databases and Map Reduce Algorithms it's surprising how far\r\nyou can scale the relational data model. At [Blue Yonder](http://blue-yonder.com)\r\nwe use SQLAlchemy in all stages of our data science workflows and handle tenth\r\nof billions of records to feed our predictive algorithms. This talk will dive\r\ninto SQLAlchemy beyond the Object Relational Mapping (ORM) parts and conentrate\r\non the SQLAlchemy Core API and the Expression Language:\r\n\r\n- **Database Abstraction**: Statements are generated properly for different\r\n  database vendor and type without you having to think about it.\r\n\r\n- **Security**: Database input is escaped and sanitized prior to beeing commited \r\n  to the database. This prevents against common SQL injection attacks.\r\n\r\n- **Composability and Reuse**: Common building blocks of queries are expressed\r\n  as SQLAlchemy selectables and can be reuesd in other queries.\r\n\r\n- **Testability**: SQLAlchemy allows you to perform functional tests against a database\r\n  or mock out queries and connections.\r\n\r\n- **Reflection**: Reflection is a technique that allows you to generate a\r\n  SQLAlchemy repesentation from an existing database. You can reflect tables,\r\n  views, indexes, and foreign keys.\r\n\r\nAs a result of the usage of SQLAlchemy in Blue Yonder, we have implemented and\r\nopen sourced a SQLAlchemy dialect for the in memory, column-oriented database\r\nsystem [EXASolution](https://github.com/blue-yonder/sqlalchemy_exasol)"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Databases",
        "Data Science",
        "Databases"
      ],
      "emails": "peter.hoffmann@blue-yonder.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/sqlalchemy-as-the-backbone-of-a-data-science-company",
      "admin_type": "",
      "companies": "Blue Yonder"
    },
    "477": {
      "abstract_short": "System tests are an invaluable tool for verifying correctness of large scale online services. This talk will discuss best practices and tooling (pytest and docker-py) for writing maintainable system tests.\r\n\r\nDemonware has used System tests to verify online services for some of the biggest AAA video game launches as well as internal operational tools.\r\n\r\nMany folks who write software are familiar with unit testing, but far fewer with system testing.",
      "sub_title": "",
      "timerange": "2016-07-20 14:30:00, 2016-07-20 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@bobcatwilson, @mtomwing",
      "id": 477,
      "speakers": "Christie Wilson, Michael Tom-Wing",
      "title": "System Testing with pytest and docker-py",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Best Practice",
        "Distributed Systems",
        "Test Libraries (pyTest/node/...)",
        "Docker",
        "Testing"
      ],
      "abstract_long": [
        "System testing a microservice architecture is challenging. As we move away from monolithic architectures, system testing becomes more important but also more complicated.\r\n\r\nIn the video game industry, if a game doesn\u2019t work properly immediately after launch, it will heavily impact game success. We have found system testing to be an important tool for pre launch testing of game services and operational tools, to guarantee quality of these services at launch.\r\n\r\nWe want to share with you best practices for system testing: when to write system tests, what to test and what not to, and common pitfalls to avoid. Using python\u2019s pytest tool and docker-py for setting up services and their dependencies has made it easier than ever to write complex but maintainable system tests and we\u2019ll share with you how we\u2019ve made use of them.\r\n\r\nDevelopers (senior and junior) and ops folks can walk away from this talk with practical tips they can use to apply system testing to their software.",
        "",
        "",
        ""
      ],
      "abstract_extra": "Please note that I would be presenting with my colleague Michael Tom-Wing\r\n\r\nI founded and run PyLadies Vancouver, where I regularly speak at meetups.\r\n\r\nMichael Tom-Wing and I have together presented tutorials on unit testing at pydx (http://pydx.org/) and at several PyLadies Vancouver meetups (www.meetup.com/PyLadies-Vancouver/). We will be delivering this tutorial at PyCon this year as well. The content of the tutorial is available on github: https://github.com/keeppythonweird/catinabox#catinabox---intro-to-testing-and-test-automation-in-python",
      "tag_categories": [
        "Best Practice and Use Cases",
        "DevOps",
        "Testing",
        "DevOps",
        "Testing"
      ],
      "emails": "bobcatfish@gmail.com, mtomwing@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/system-testing-with-pytest-and-docker-py",
      "admin_type": "",
      "companies": "Demonware"
    },
    "648": {
      "abstract_short": "A framework-agnostic approach to creating Python microservices with a tests-first approach.\r\nI'll show how to utilize Docker and Swagger to create service and contract tests that run your service as an independent process, as if it was running in production, giving you and your team a higher degree of confidence when introducing changes.\r\n\r\nA little bit of a broader microservice, TDD and work management context will also be given.",
      "sub_title": "Docker, Swagger and Pytest to the rescue",
      "timerange": "2016-07-22 12:00:00, 2016-07-22 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 648,
      "speakers": "Micha\u0142 Bultrowicz",
      "title": "TDD of Python microservices",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Test Driven Development (TDD)",
        "Docker",
        "RESTful",
        "Web Track"
      ],
      "abstract_long": [
        "These will be my ideas on how to help a microservice-based (HTTP) project by integrating testing into the development process (TDD).\r\nI'll approach the testing pyramid presented in Martin Fowler's \"Microservice Testing\" as well as the test variants in \"Building Microservices\" (O'Reilly) and I'll show a way of how they can be translated to real-life Python.\r\n\r\nThe main focus will be on \"service tests\" (aka. out-of-process component tests) and contract tests. They both can be run relatively fast on a development machine and can give fast feedback to the developer, preventing many kinds of problems.\r\n\r\nService tests run the whole application process without any internal modifications, but have to present the service with a fake \"outside world\". I'll show how to fake external HTTP services with Mountebank (similar to WireMock). Instead of faking other systems (like databases) we can quickly spin up the real deal as a Docker container from within the tests.\r\n\r\nContract tests check if the contract (interface) of your service with the outside world is kept, so no external services should be broken by the changes you are introducing. It can also work the other way around, proving that your collaborators are keeping their part of the deal. In both cases, Swagger (a RESTful API description scheme) and a few clever tricks can be used for significant advantage."
      ],
      "abstract_extra": "I've worked as developer and then a technical team leader on one of the teams working on Intel's Trusted Analytics Platform - a solution based on microservices and PaaS.\r\n\r\nI've presented once before, during EuroPython 2015 . My talk title was \"Python microservices on PaaS done right\". This is a continuation of this talk, focusing more on testing and the experiences I had for the past year.",
      "tag_categories": [
        "Testing",
        "DevOps",
        "Web",
        ">>> Suggested Track"
      ],
      "emails": "michalbultrowicz@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/tdd-of-python-microservices",
      "admin_type": "",
      "companies": "N/A"
    },
    "519": {
      "abstract_short": "We will present the test-driven reuse (TDR) development strategy, a natural extension of test-driven development (TDD), and how to execute it with [pytest-nodev][1] a test-driven search engine for Python code.\r\n\r\n [1]: http://pytest-nodev.readthedocs.io/en/stable/quickstart.html\r\n\r\nPytest-nodev and the other nodev tools that helps implement TDR for Python are rather new, in spite of that we will present several successful applications of the technique to more and more complex examples.",
      "sub_title": "Its like test-driven development... without the development bit.",
      "timerange": "2016-07-22 11:15:00, 2016-07-22 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@alexamici",
      "id": 519,
      "speakers": "Alessandro Amici",
      "title": "Test-driven code search and reuse coming to Python with pytest-nodev",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Test Driven Development (TDD)",
        "Educational Track",
        "Test Libraries (pyTest/node/...)",
        "Testing",
        "Best Practice"
      ],
      "abstract_long": [
        "We will present the test-driven reuse (TDR) development strategy, a natural extension of test-driven development (TDD), and how to execute it with [pytest-nodev](http://pytest-nodev.readthedocs.io/en/stable/quickstart.html) an Open Source test-driven search engine for Python code.\r\n\r\nWhen developing new functionalities developers spend significant efforts searching for code to reuse, mainly via keyword-based searches, e.g. on StackOverflow and Google. Keyword-based search is effective in finding code that is explicitly designed and documented to be reused, e.g. libraries and frameworks, but typically fails to identify reusable functions and classes in the large corpus of auxiliary code of software projects.\r\n\r\nTDR aims to address the limits of keyword-based search with test-driven code search that focuses instead on code behaviour and semantics. Developing a new feature in TDR starts with the developer writing the tests that will validate candidate implementations of the desired functionality. Before writing any functional code the tests are run against all functions and classes of available projects. Any code passing the tests is presented to the developer as a candidate implementation for the target feature.\r\n\r\n[Pytest-nodev](https://github.com/nodev-io/pytest-nodev) and other nodev tools that help implement TDR for Python are newer than the JAVA counterparts, in spite of that we will present several applications of the technique to more and more complex examples."
      ],
      "abstract_extra": "Two open source projects will be demonstrated:\r\n\r\n- https://github.com/nodev-io/pytest-nodev\r\n- https://github.com/nodev-io/nodev.specs\r\n\r\nWe would love to announce the beta of an on-line test-driven code search service at EuroPython. No promises, though.",
      "tag_categories": [
        "Testing",
        ">>> Suggested Track",
        "Testing",
        "Testing",
        "Best Practice and Use Cases"
      ],
      "emails": "a.amici@bopen.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/test-driven-source-code-search-for-python-with-pytest-nodev",
      "admin_type": "",
      "companies": "B-Open Solutions srl"
    },
    "486": {
      "abstract_short": "In this session you will learn your way around Python 3\u2019s unittest.mock package through examples. You\u2019ll learn about the Mock class, sentinels and patching. You will see the benefits that mocks can bring and learn to avoid the pitfalls. Along the way I\u2019ll fill you in on some of the bewildering terminology surrounding mocks such as \u201cSUT\u201d, \u201cStub\u201d, \u201cDouble\u201d, \u201cDummy\u201d , \u201cmockist\u201d and more and I\u2019ll give a brief plug for my own mockextras package that can enhance your mock experience.",
      "sub_title": "",
      "timerange": "2016-07-22 15:45:00, 2016-07-22 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@andrewburrows",
      "id": 486,
      "speakers": "Andrew Burrows",
      "title": "Testing the untestable: a beginner\u2019s guide to mock objects",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Beginners",
        "Testing"
      ],
      "abstract_long": [
        "Mock objects can be a powerful tool to write easy, reliable tests for the most difficult to test code. In this session you will learn your way around Python 3\u2019s unittest.mock package starting at the simplest examples and working through progressively more problematic code. You\u2019ll learn about the Mock class, sentinels and patching and how and when to use each of them. You will see the benefits that mocks can bring and learn to avoid the pitfalls. Along the way I\u2019ll fill you in on some of the bewildering terminology surrounding mocks such as \u201cSUT\u201d, \u201cStub\u201d, \u201cDouble\u201d, \u201cDummy\u201d , \u201cmockist\u201d and more and I\u2019ll give a brief plug for my own mockextras package that can enhance your mock experience."
      ],
      "abstract_extra": "I have given many presentations within my organisation to audiences of up to 100+ people but have no publicly referenceable examples. \r\n\r\nI am testing mentor for all Man AHL developers, especially new hires. I have given variants of this presentation numerous times within my workplace.\r\n\r\nI am the developer and maintainer of the mockextras library, which I will give a small plug for in the talk.\r\n\r\nhttp://mockextras.readthedocs.org/\r\nhttps://github.com/manahl/mockextras\r\nhttps://pypi.python.org/pypi/mockextras",
      "tag_categories": [
        "Educational",
        "Testing"
      ],
      "emails": "aburrows@ahl.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/testing-the-untestable-a-beginners-guide-to-mock-objects",
      "admin_type": "",
      "companies": "Man AHL"
    },
    "745": {
      "abstract_short": "CPython's GIL means your Python code can only run on one CPU core at a time. Can we remove it? Yes, we can... in fact we already have! But is it worth the cost?",
      "sub_title": "Removing CPython's GIL",
      "timerange": "2016-07-20 14:30:00, 2016-07-20 15:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@larryhastings",
      "id": 745,
      "speakers": "Larry Hastings",
      "title": "The Gilectomy",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Performance",
        "Multi-Threading",
        "CPython"
      ],
      "abstract_long": [
        "CPython's \"Global Interpreter Lock\", or \"GIL\", was added in 1992. It was an excellent design decision. But 24 years is a long time--today it prevents Python from capitalizing on multiple CPUs. Many people want us to remove the GIL.\r\n\r\nIt turns out, removing the GIL isn't actually that hard. In fact, I already removed it, in my experimental \"gilectomy\" branch. But the GIL is one reason CPython is so fast! The \"gilectomy\" makes CPython shockingly slow.\r\n\r\nThis talk will discuss the history of the GIL, how the GIL helps make CPython fast, how the \"gilectomy\" removed the GIL, and some ways we might be able to make the \"gilectomy\" version fast enough to be useful."
      ],
      "abstract_extra": "I gave a version of this talk at PyCon 2016.  The room was full five minutes before starting and many, many people were turned away at the door.",
      "tag_categories": [
        "Programming",
        "Programming",
        "Python"
      ],
      "emails": "larry@hastings.org",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/the-gilectomy",
      "admin_type": "",
      "companies": "Python CoreDev"
    },
    "683": {
      "abstract_short": "I would like to indicate main keys to success, factors and features that help a developer to find himself on an independent career path.\r\nHow to create employee-friendly work environment for Python developers?\r\nWhich business model gives a chance to attract and keep more than 100 Python enthusiast?\r\nI will also gladly share some lessons learned working with dozens of clients, dozens of Python frameworks, and lots, lots of great developers.",
      "sub_title": "",
      "timerange": "2016-07-18 12:00:00, 2016-07-18 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@mdziergwa",
      "id": 683,
      "speakers": "Maciej Dziergwa",
      "title": "The Journey from Python Developer to Python Company Owner",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Business Track",
        "Community"
      ],
      "abstract_long": [
        "Ten years ago I became a big Python fan, but at the time there were no jobs for Python developers in Poland. So, I decided to start my own Python company. Today, ten years later, this company employs more than 100 Python Developers in four cities.\r\n\r\nThere are a lot of Python enthusiasts in the world, many of them more skilled than I was at that time, but clearly not anyone can become a \u201ePython Business Developer\u201d. In this talk I would like to indicate main keys to success, factors and features that help a developer to find himself on an independent career path.\r\n\r\nMy goal is to answear these questions:\r\n\r\nHow to create employee-friendly work environment for Python developers?\r\n\r\nWhich business model gives a chance to attract and keep more than 100 Python enthusiast?\r\n\r\nI will also gladly share some lessons learned while working with dozens of clients, dozens of Python frameworks, and lots, lots of great developers. "
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Community"
      ],
      "emails": "mdziergwa@stxnext.pl",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/the-journey-from-python-developer-to-python-company-owner",
      "admin_type": "",
      "companies": "STX Next"
    },
    "398": {
      "abstract_short": "In this talk discusses some joyful exercises in simulation. I'll demonstrate it's usefulness but moreover I'll discuss the sheer joy. I'll discuss how to generate song lyrics, I'll discuss how to get better at casino games, how to avoid math, how to play monopoly or even how to invest in lego minifigures. No maths required; just a random number generator. ",
      "sub_title": "Make a living selling lego mini-figures on ebay.",
      "timerange": "2016-07-19 11:15:00, 2016-07-19 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@fishnets88",
      "id": 398,
      "speakers": "vincent warmerdam",
      "title": "The Joy of Simulation: for Fun and Profit",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Education",
        "Beginners",
        "Algorithms",
        "Data Science",
        "Science"
      ],
      "abstract_long": [
        "In this talk discusses some joyful exercises in simulation. I'll demonstrate it's usefulness but moreover I'll discuss the sheer joy you can experience. \r\n\r\nI'll go over the following points (the short list):\r\n\r\n- I'll show how you can avoid math by simulating; I'll calculate the probability that two people in the live room have the same birthday. \r\n- I'll show how simulation can help you get better at many games. I'll start with simple card games and with the game of roulette. Most prominently I'll discuss how to determine the value of buying an asset in the game of monopoly (See blogpost: http://koaning.io/monopoly-simulations.html).  \r\n- I'll demonstrate how you can simulate Red Hot Chilli Pepper lyrics.  Or any other band. Or legalese. \r\n- I'll demonstrate the results of a scraping exercise which helped me to determine the value of investing in Lego Minifigures (See blogpost: http://koaning.io/lego-minifigs-stochastics-profit.html). \r\n\r\nDepending on the level of the audience I might also discuss how biased simulation can help you solve optimisation problems or even introduce bayesian statistics via sampling. I'll gladly leave this decision to the EuroPython committee. ",
        "",
        "",
        ""
      ],
      "abstract_extra": "I am the founding committee member of PyData Amsterdam and I've spoken before at PyData events as well as EuroPython. You can find me on twitter or at my blog over at koaning.io. ",
      "tag_categories": [
        "Educational",
        "Educational",
        "Data Science",
        "Data Science",
        "Sciences"
      ],
      "emails": "vincentwarmerdam@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/the-joy-of-simulation-for-fun-and-profit",
      "admin_type": "",
      "companies": "GoDataDriven"
    },
    "599": {
      "abstract_short": "This talk will teach you how Twisted or Tornado supplement asyncio, how asyncio can/is integrated with these frameworks, and makes a case for the continued development of new and existing selector-loop based frameworks. It will also paint a picture of the future direction of Twisted, why the original plan of asyncio as a standard API has not come to complete fruition, and what can be done about it. ",
      "sub_title": "Why Twisted and Tornado Are Relevant In The Asyncio Age",
      "timerange": "2016-07-18 14:45:00, 2016-07-18 15:30:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@hawkieowl",
      "id": 599,
      "speakers": "Amber Brown",
      "title": "The Report Of Twisted\u2019s Death",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Performance",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "- Introduction (3 min)\r\n  - I\u2019m Amber Brown, Twisted Release Manager\r\n  - 3 years contributing to the Twisted Project\r\n- What is asynchronous I/O? (5 min)\r\n- How can it be implemented? (5 min)\r\n- The options (5 min)\r\n  - Twisted, Tornado, asyncio\r\n- Asynchronous I/O on Python 3, in 2012 (2 min)\r\n  - Tornado was only just ported\r\n  - twisted, gevent, eventlet, etc were not ported\r\n- asyncio (7 min)\r\n  - Designed as both a \u201ccommon API\u201d for async I/O frameworks, much like WSGI was for web servers\r\n  - Built using ideas from Twisted\r\n- asyncio exists, so Twisted and Tornado can go away, right? (5 min)\r\n  - asyncio is an \u201casync I/O thing\u201d, and twisted/tornado are \u201casync I/O things\u201d, so Twisted and Tornado aren\u2019t required now, right?\r\n- Twisted\u2019s Renaissance (5 min)\r\n  - 450,000 LoC, fifteen years of legacy, supports many many major protocols\r\n  - Twisted hits 50% on the port to Python 3\r\n  - Pressure from asyncio providing renewed competition\r\n  - The very existence of asyncio means we no longer need to have the \u201cwhy is asynchronous I/O a good idea\u201d\r\n- But It\u2019s Not Over Yet (5 min)\r\n  - Twisted does not implement nor use the asyncio standard APIs, Twisted needs help and developer support to do this\r\n  - Support on Windows is still subpar, as the asyncio IOCP proactor does not support UDP\r\n- The Future (8 min)\r\n  - A Twisted You Can Use\r\n  - WSGI 2\r\n  - asyncio standardisation\r\n- Questions (5 min)\r\n",
        "",
        "",
        ""
      ],
      "abstract_extra": "This is a talk which has been accepted for PyCon US 2016. The full abstract, as submitted to PyCon US, is available at https://dl.dropboxusercontent.com/u/14290114/Twisted%20and%20Tornado%20in%20The%20Age%20of%20Asyncio.pdf  .\r\n\r\nI've previously given talks at DjangoCon AU (keynote 2015), PyCon AU (2014, 2015), PyCon CZ (keynote 2015), and Django Under The Hood (2015).",
      "tag_categories": [
        "Programming",
        "Programming"
      ],
      "emails": "hawkowl@atleastfornow.net",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/the-report-of-twisteds-death",
      "admin_type": "",
      "companies": ""
    },
    "651": {
      "abstract_short": "Mindfulness has proven to be a foundational skill that started as a pure buddhist practice. Nowadays mindfulness serves as the core technique of several western programs ranging from  curing stress-induced medical problems to curricula for teaching successful business leadership, such as the Search Inside Yourself program developed at Google. \r\n\r\nThe aim of this seminar is to provide a practical experience of mindfulness with a short introduction to how it can be applied by digital workers.",
      "sub_title": "",
      "timerange": "2016-07-22 16:15:00, 2016-07-22 16:45:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@https://twitter.com/ralhei",
      "id": 651,
      "speakers": "Ralph Heinkel",
      "title": "The value of mindfulness and how it has arrived at Google",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [],
      "abstract_long": [
        "Mindfulness has proven to be a foundational skill that started as a pure buddhist practice. Nowadays mindfulness serves as the core technique of several western programs ranging from  curing stress-induced medical problems to curricula for teaching successful business leadership, such as the Search Inside Yourself  (SIY) program developed at Google in 2002. \r\n\r\nMind is the root of all things. Neuroscience shows that attention is a fundamental function of the mind. Being able to direct attention to the present moment - and keep it there while performing daily tasks - is a great tool to navigate through life and its  challenges with more engagement, more happiness, and more resilience. Focusing attention in a relaxed way enables us to disconnect from the overall noise found in a high-speed environment and get things done without feeling too overwhelmed by them. But being effective is not only about checking off more tasks - it is about how we are in resonance with our environment, how we interact with others, and how we face the increasing complexity in our professional life. \r\n\r\nThe aim of this seminar is to provide a practical experience of mindfulness with a short introduction to how it can be applied in a technology driven world as experience by digital workers."
      ],
      "abstract_extra": "",
      "tag_categories": [],
      "emails": "rh@ralph-heinkel.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/the-value-of-mindfulness-and-how-it-has-arrived-at-google",
      "admin_type": "",
      "companies": "Freelance Python Developer"
    },
    "576": {
      "abstract_short": "In recent years one of the ways people get introduced into Python is through its scientific stack. Although this is not bad, it may lead to learn solely one aspect of the language, while overlooking other idioms and functionality included in Python as well as some basic software development good practices. I will share some useful tricks, tools and techniques and software design and development principles that I find beneficial when working on a data processing / science project.",
      "sub_title": "",
      "timerange": "2016-07-20 12:00:00, 2016-07-20 12:45:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@mfcabrera",
      "id": 576,
      "speakers": "Miguel Cabrera",
      "title": "Things I wish I knew before starting using Python for Data Processing",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Software Design",
        "Python general",
        "Best Practice",
        "Data Science"
      ],
      "abstract_long": [
        "In recent years of the ways people get introduced into Python is through its scientific stack. Most people  that learned Python this way are not trained software developers and many times it is the first contact with a  programming language.\r\nAlthough this is not bad, it may lead to learn solely one aspect of the language while overlooking other idioms, standard and common libraries included in Python as well as some basic software development good practices. This may become a problem when a data science project is moved from an experimentation phase to an integration with technical environment. \r\n\r\nIn this talk I share some useful tricks, tools and techniques and as well as some software design and development principles that I find beneficial when working on a data processing / science project.\r\n\r\nThe talk is divided into two parts,  one  is Python centered, where I will talk about some powerful Python construct that are useful in data processing tasks. This include some parts  collections module,  generators and iterators among others.  The other I will describe some general software development concepts including SOLID, DRY, and KISS that are important to understand the rationale behind software design  decisions. \r\n"
      ],
      "abstract_extra": "I am been thinking in the idea for this talk for some time already . I gave a lighting talk on this subject during the [PyData Meetup  in Berlin in 2015][1].\r\n\r\nAs speaker experience I have spoken in some meetups and talks including Munich Data Geeks, PyData Meetup, PyData Berlin 2015. I also gave a lighting talk at Europython 2015. \r\n\r\nSome of my slides can be found here: https://speakerdeck.com/mfcabrera\r\n\r\n  [1]: https://speakerdeck.com/mfcabrera/pydata-berlin-meetup-nov-2015-some-of-the-things-i-wish-i-knew-before-starting-using-python-for-data-science\r\n",
      "tag_categories": [
        "Programming",
        "Python",
        "Best Practice and Use Cases",
        "Data Science"
      ],
      "emails": "mfcabrera@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/things-i-wish-i-knew-before-starting-using-python-for-data-processing",
      "admin_type": "",
      "companies": "TrustYou"
    },
    "617": {
      "abstract_short": "What systems and tools are useful for encrypting and securing email today? After discussing attack vectors we'll explore two user-side techniques for establishing end-to-end encryption, GPG and S/MIME. We then look at two projects which aim to provide ready-made email-server provisioning, Mail-in-a-box and LEAP and conclude with spotlights on ongoing EU-research projects aiming to improve email.  ",
      "sub_title": "",
      "timerange": "2016-07-19 10:30:00, 2016-07-19 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@, @",
      "id": 617,
      "speakers": "holger krekel, Kali Kaneko",
      "title": "Towards More Secure Emailing",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Security",
        "Infrastructure",
        "Best Practice"
      ],
      "abstract_long": [
        "Email has been declared dead several times but refuses to die.  It remains the backbone of the web and remains the largest federated open social network to date. However, most people and organisations rely on a few big email operators which fund their operations through advertisements and user tracking. But is it neccessary to hand off email messaging operations to large operators? Is dealing with unsolicited email (SPAM) still too maintenance intensive to deploy it by yourself? Is handling secret keys to unlock encrypted mails still a nightmare? Are there somewhat secure email hosting solutions?\r\n\r\nIn recent years there have been renewed efforts to renovate the state of world wide email infrastructure with initiatives such as the \"Dark Mail Alliance\", \"FreedomBox\", \"Mailpile\", \"Mail-in-a-box\" and the \"LEAP encryption access project\". Some of them are using Python to provide security to users both from criminal, corporate and state level attacks and could use help from experienced python programmers.\r\n\r\nThe talk concludes with highlighting current ongoing research (Panoramix and NEXTLEAP) funded by the European Union over the next couple years. They try to ease and automate key management and provide \"encryption by default\" among other goals. After this talk you'll end up having a better understanding of how you can use existing technologies for yourself or your organisation and how you can possibly help to improve them and make life for users and activists safer world-wide.",
        "",
        "",
        ""
      ],
      "abstract_extra": "I intend to give this talk with Kali Kaneko from Guatemala but didn't see a way to add him as co-speaker. ",
      "tag_categories": [
        "Security",
        "DevOps",
        "Best Practice and Use Cases"
      ],
      "emails": "holger@merlinux.eu, bennomadic@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/towards-more-secure-emailing",
      "admin_type": "",
      "companies": "LEAP Encrypted Access Project, merlinux GmbH"
    },
    "644": {
      "abstract_short": "El ecosistema cient\u00edfico de python es extraordinario y saca m\u00fasculo con las \u00faltimas aportaciones de la comunidad cient\u00edfica. Revisaremos nuevas aproximaciones a la representaci\u00f3n de texto. \u00a1Tus cadenas de texto merecen algo m\u00e1s que una m\u00edsera bolsa de palabras! Veremos c\u00f3mo se aplica la representaci\u00f3n distribuida (word embeddings) en un caso pr\u00e1ctico de aprendizaje autom\u00e1tico, y daremos consejos para hacer experimentos replicables y obtener datos significativos.",
      "sub_title": "\u201cNuevas\u201d aproximaciones a la representaci\u00f3n de texto para el procesamiento del lenguaje natural",
      "timerange": "2016-07-19 11:15:00, 2016-07-19 12:00:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@maidotgimenez",
      "id": 644,
      "speakers": "Mai Gim\u00e9nez",
      "title": "Un vector por tu palabra",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Educational Track",
        "Science Track",
        "PyLadies",
        "Data Science",
        "Deep Learning"
      ],
      "abstract_long": [
        "\u201cDime con quien andas y te dir\u00e9 c\u00f3mo eres\u201d Este dicho es una de las ideas m\u00e1s revolucionarias en  PLN. Podemos saber muchas cosas de una palabra por su contexto. No es lo mismo un adorable gato que un gato mec\u00e1nico, pero por el contexto diferenciamos esta palabra polis\u00e9mica.\r\nHasta ahora la mayor parte de los modelos representan una frase como una bolsa de palabras. Por ejemplo, si queremos representar este conjunto de frases: [\u201cI love Python\u201d, \u201cI love NLP\u201d, \u201cPyladies are cool\u201d] tenemos un vocabulario de siete palabras: [\u201cI\u201d, \u201clove\u201d, \u201cPython\u201d, \u201cNLP\u201d, \u201cPyladies\u201d, \u201care\u201d, \u201ccool\u201d] esta representaci\u00f3n crea un vector de tama\u00f1o del vocabulario para cada frase, y pone a 1 si la palabra aparece y a 0 en el caso contrario : [[1,1,1,0,0,0,0], [1,1,0,1,0,0,],[0,0,0,0,1,1,1]] \u00a1Pero,se pierde el contexto y los vectores pueden ser gigantes y con much\u00edsimos 0s!\r\nRecientemente, hemos encontrado una forma mucho mejor de representar las palabras: La representaci\u00f3n distribuida -word2vec, por ejemplo- \r\nEn esta charla exploramos esta representaci\u00f3n y c\u00f3mo aplicarla en problemas de clasificaci\u00f3n utilizando textos de redes sociales. \r\nNavegaremos por el rico ecosistema cient\u00edfico en python, veremos c\u00f3mo crear gr\u00e1ficas significativas y hablaremos de la importancia de escribir experimentos bien dise\u00f1ados, replicables y con c\u00f3digo elegante y por supuesto de la importancia de difundir el conocimiento. Debemos inspirar a la siguiente generaci\u00f3n de cient\u00edficos y cient\u00edficas \u00a1Seamos extraordinarios!"
      ],
      "abstract_extra": "He dado charlas en la PyConES 2013 (https://youtu.be/8MRG6SixmeM), PyConES 2014 (https://youtu.be/k5-50FFCifw) y estuve en la sesi\u00f3n de posters de la PyCon 2014(https://us.pycon.org/2014/schedule/presentation/94/). He formado parte del equipo organizador de la PyConEs 2015.\r\nDoy charlas en Python Valencia, Betabeers y en pr\u00e1cticamente en cualquier evento que me dejen  predicar sobre lo mol\u00f3n que es python, lo importante que es la diversidad en la comunidad y en definitiva compartir conocimiento. \r\n",
      "tag_categories": [
        ">>> Suggested Track",
        ">>> Suggested Track",
        "Community",
        "Data Science",
        "Data Science"
      ],
      "emails": "mai@immutable.es",
      "language": "Spanish",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/un-vector-por-tu-palabra",
      "admin_type": "",
      "companies": ""
    },
    "703": {
      "abstract_short": "I will describe a scientific application of python in the field of Astrophysics and Cosmology. How the publicly available package Monte Python is used to compare data from space satellite missions with theoretical models that attempt to describe the evolution and content of the Universe. The result is surprising, as it points towards a Universe which is mainly dark.",
      "sub_title": "",
      "timerange": "2016-07-21 11:15:00, 2016-07-21 12:00:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@vpettorino",
      "id": 703,
      "speakers": "Valeria Pettorino",
      "title": "Unveiling the Universe with python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Visualization",
        "Science",
        "Python general",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Physics"
      ],
      "abstract_long": [
        "Python is widely used in Cosmology, which is the study of the Universe and all forms of energy in it. A large amount of data has been recently obtained through space satellite missions, such as Planck, financed by ESA/NASA. Planck has observed the radiation emitted about 13 billion years ago (the Cosmic Microwave Background, CMB), which gives us information on the content and space-time geometry of the Universe. Many competitive theoretical models have been proposed that aim at describing the evolution of the species contained in the Universe: therefore, cosmologists need a method to identify which theoretical model better fits the data. In order to compare data with theoretical predictions, cosmologists use Bayesian statistics and Monte Carlo simulations. Among the tools developed for the analysis, the package \u2018Monte Python\u2019 is publicly available and uses python to perform Monte Carlo simulations: this allows to determine the theoretical model that maximizes the likelihood to obtain the observed data. Such model is now the standard cosmological model and reveals a Universe that is very different from what scientists had ever expected. A Universe in which the atoms we are made of, constitute only 5% of the total energy budget. The rest is the so-called \u2018Dark Universe\u2019.\r\n\r\nI will illustrate the story of how cosmologists used python to analyse the data of the CMB and unveil the Dark Universe.",
        "",
        "",
        ""
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Sciences",
        "Python",
        "Data Science",
        "Sciences"
      ],
      "emails": "valeria.pettorino@me.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/unveiling-the-universe-with-python",
      "admin_type": "",
      "companies": "University of Heidelberg"
    },
    "434": {
      "abstract_short": "Python\u2019s double-underscore ('`__`') methods and attributes go by many names, including \u201cspecial\u201d, \u201cdunder\u201d, and \u201cmagic\u201d. You already use some, like `__init__`, but there are many more! \r\n\r\nIn this talk, we\u2019ll see how dunders can be useful, silly, dangerous, and fun! We\u2019ll trick Python\u2019s arithmetic and comparison operators. We\u2019ll make objects behave like dictionaries and containers. We\u2019ll reduce an object\u2019s memory usage, and speed up membership tests. We\u2019ll even try some naughty function hacks!\r\n",
      "sub_title": "The world of special dunder magic",
      "timerange": "2016-07-21 12:00:00, 2016-07-21 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@AnjanaVakil",
      "id": 434,
      "speakers": "Anjana Vakil",
      "title": "Using and abusing Python\u2019s double-underscore methods and attributes",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Python 3",
        "Python general",
        "Programming"
      ],
      "abstract_long": [
        "The curious Python methods and attributes surrounded by double underscores ('`__`') go by many names, including \u201cspecial\u201d, \u201cdunder\u201d, and \u201cmagic\u201d. You probably use some of them, like `__init__`, every day. But that\u2019s just the tip of the iceberg! \r\n\r\nIn this talk, we\u2019ll explore the weird and wonderful world of the double-underscore, and find out how dunders can be useful, silly, dangerous, and just fun! We\u2019ll play pranks on Python\u2019s builtin operators for arithmetic and comparison. We\u2019ll make arbitrary objects behave like dictionaries and containers. We\u2019ll reduce an object\u2019s memory usage, and speed up tests for membership. We\u2019ll even try some naughty function hacks that we should never use in real life!\r\n\r\nYou'll get the most out of this talk if you're already comfortable writing object-oriented Python code. If you already use special dunder magic in your own code, that's excellent! You\u2019ll have a chance to share your tips & tricks with the rest of the audience at the end of the talk.\r\n"
      ],
      "abstract_extra": "Approximate timeline (30 minute talk):\r\n\r\n  - :00 - Hello, who I am, gauge audience experience with dunders (1 min.)\r\n  - :01 - Intro, familiar dunders (e.g. `__init__`, `__str__`) (2 min.)\r\n  - :03 - Arithmetic and comparisons: (e.g. `__mod__`, `__eq__`) (4 min.)\r\n  - :07 - Emulating dictionaries (`__getitem__`, etc.) and collections (`__len__`, `__contains__`) (5 min.)\r\n  - :12 - Optimizations: `__contains__`, `__slots__` (4 min.)\r\n  - :16 - Function hacks: implementing `__call__` on non-functions, replacing a function\u2019s `__defaults__` and `__code__` (4 min.)\r\n  - :20 - Links to further reading; Audience members share their dunder tricks (5 min.)\r\n  - :25 - Q&A (5 min.)\r\n\r\nI\u2019m submitting this as a standard 30-minute talk, but I think it\u2019s possible the topic could also work for an interactive session, with the audience participating in coding through the examples and coming up with ideas for fun and interesting hacks using these methods/variables. If you think it would work better in that format, please let me know.\r\n\r\nEven in the 30-minute talk format, I\u2019d really like to have an interactive tip-sharing session at the end of the talk, as mentioned in the long abstract and timeline. I imagine that this will probably merge with the Q&A and become a 10-minute discussion at the end of the talk. I hope this fits in nicely with the enhanced focus on interactivity for this year\u2019s conference, but if it\u2019s not desirable for whatever reason, I can easily replace the tip-sharing session with additional content (e.g. context managers with `__enter__` and `__exit__`) or examples. \r\n\r\nI haven't given a talk at EuroPython or another Python conference before, but I have public speaking experience in the form of several talks at academic conferences, on software and research for computational linguistics. A list of my previous talks is available at [https://vakila.github.io/talks/ ][1](links to slides are provided).\r\n\r\nIf you have any questions, need clarification, or have any other feedback on this proposal, please do get in touch! I\u2019m best reached by email, but I will be on holiday with limited internet access from February 29 to March 7.\r\n\r\n  [1]: https://vakila.github.io/talks/ \r\n",
      "tag_categories": [
        "Python",
        "Python",
        "Programming"
      ],
      "emails": "anjanavakil@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/using-and-abusing-pythons-double-underscore-methods-and-attributes",
      "admin_type": "",
      "companies": "Mozilla"
    },
    "504": {
      "abstract_short": "Let's compare the usage of three major **service discovery** technologies to build a dynamic and distributed python application !\r\n\r\nThis talk will be about **consul**, **etcd** and **zookeeper** and their python bindings and will feature code along with a live demo.",
      "sub_title": "Concrete python usage of three Service Discovery technologies",
      "timerange": "2016-07-20 10:30:00, 2016-07-20 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@ultrabug",
      "id": 504,
      "speakers": "Alexys Jacob",
      "title": "Using Service Discovery to build dynamic python applications",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "System Architecture",
        "Infrastructure",
        "Distributed Systems",
        "Scaling",
        "DevOps general"
      ],
      "abstract_long": [
        "This talk will **showcase and compare** three Service Discovery technologies and their usage to **build a dynamic and distributed python application** :\r\n\r\n- consul\r\n- etcd\r\n- zookeeper\r\n\r\nAfter a short introduction to service discovery, we will **iterate and compare** how we can address the concrete and somewhat complex design of our python application using each technology.\r\n\r\nWe'll then be able to discuss their strengths, weaknesses and python bindings and  finally showcase the application in a demo.\r\n\r\nAll the source code will of course be made available for the audience to benefit and start from for their own use !"
      ],
      "abstract_extra": "Yes, I'm crazy enough to sell a live demo. I have faith in you and... it worked well last year !",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "ultrabug@ultrabug.net",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/service-discovery-for-dynamic-python-applications",
      "admin_type": "",
      "companies": "Numberly"
    },
    "404": {
      "abstract_short": "Compare full text search engines for Python.\r\n",
      "sub_title": "",
      "timerange": "2016-07-21 12:00:00, 2016-07-21 12:45:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@a_soldatenko",
      "id": 404,
      "speakers": "Andrii Soldatenko",
      "title": "What is the best full text search engine for Python?",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room [PyData Track]",
      "tags": [
        "PostgreSQL",
        "Python 3",
        "Elastic Search",
        "Documentation"
      ],
      "abstract_long": [
        "Nowadays we can see lot\u2019s of benchmarks and performance tests of different web frameworks and Python tools. Regarding to search engines, it\u2019s difficult to find useful information especially benchmarks or comparing between different search engines. It\u2019s difficult to manage what search engine you should select for instance, ElasticSearch, Postgres Full Text Search or may be Sphinx or Whoosh. You face a difficult choice, that\u2019s why I am pleased to share with you my acquired experience and benchmarks and focus on how to compare full text search engines for Python.\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Databases",
        "Python",
        "Databases",
        "Programming"
      ],
      "emails": "andrii.soldatenko@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/what-is-the-best-full-text-search-engine-for-python",
      "admin_type": "",
      "companies": "Toptal"
    },
    "557": {
      "abstract_short": "Haskell community has made lots of small important improvements to packaging in 2015. What can Python community learn from it and how are we different?",
      "sub_title": "A subtle introduction into Haskell packaging and differences to Python ecosystem",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 557,
      "speakers": "Domen Ko\u017ear",
      "title": "What Python can learn from Haskell packaging",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "DevOps general",
        "System Administration"
      ],
      "abstract_long": [
        "Haskell community has been living in \"Cabal hell\" for decades, but Stack tool and Nix language have been a great game changer for Haskell in 2015.\r\n\r\nPython packaging has evolved since they very beginning of distutils in 1999. We'll take a look what Haskell community has been doing in their playground and what they've done better or worse.\r\n\r\nThe talk is inspired by Peter Simons talk given at Nix conference: [Peter Simons: Inside of the Nixpkgs Haskell Infrastructure][1]\r\n\r\n  [1]: https://www.youtube.com/watch?v=TDnZsBxqeBM&list=PL_IxoDz1Nq2Y7mIxMZ28mVtjRbbnlVdmy&index=4\r\n\r\nOutline:\r\n\r\n- Cabal (packaging) interesting features overview \r\n  - Cabal file specification overview\r\n  - Interesting Cabal features not seen in Python packaging\r\n  - Lack of features (introduction into next section)\r\n- Cabal hell \r\n  - Quick overview of Haskell community frustration over Cabal tooling\r\n- Stack tool overview \r\n  - What problem Stack solves\r\n  - How Stack works\r\n  - Comparing Stack to pip requirements\r\n- Using Nix language to automate packaging \r\n  - how packaging is automated for Haskell\r\n  - how it could be done for Python"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps"
      ],
      "emails": "domen@dev.si",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/what-python-can-learn-from-haskell-packaging",
      "admin_type": "",
      "companies": ""
    },
    "426": {
      "abstract_short": "This talk covers the basics of what Object Orientation (OO) is really about. It focusses on the problem OO is aimed at solving and shows where the OO mechanisms of Python fit into this picture. This material can serve as an introduction to OO for beginners, but also as a homing signal for experienced programmers who are doubting whether they are reaping the benefits OO promises.",
      "sub_title": "",
      "timerange": "2016-07-21 11:15:00, 2016-07-21 12:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@reahl",
      "id": 426,
      "speakers": "Iwan Vosloo",
      "title": "What's the point of Object Orientation?",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Software Design",
        "Programming",
        "Abstractions",
        "Best Practice"
      ],
      "abstract_long": [
        "Object Orientation (OO) is often introduced in terms of how it is implemented by a specific language. However, understanding the theory underlying OO is not quite the same as understanding how OO concepts are supported by a particular language. It is insightful to understand the simple OO fundamentals and how these map to the particular implementation provided by Python.\r\n\r\nIn this talk I will first explain the very basics of OO from a language-neutral point of view with the aim of showing what OO can offer you and to give a glimpse of the simple mathematical theory underlying OO. I hope to give you enough information to help you distinguish between better and worse designs and to detect whether you\u2019re using OO as it was intended. I will also very briefly show how these fundamentals map to Python.\r\n\r\nThis talk is for anyone: whether you\u2019re new at Object Orientation, or a practitioner wondering whether OO is worth the effort you\u2019ve spent trying to use it."
      ],
      "abstract_extra": "Hi, I have given versions of this talk before at PyCon Namibia (not recorded) and [PyConZA (http://youtu.be/M1XL65qj2dU)][1]. People found it useful there, so I thought it may be worthwhile for people at EuroPython too.\r\n\r\nI am the main author of [Reahl (http://www.reahl.org)][2] and gave presentation on it last year at [EuroPython (https://ep2015.europython.eu/conference/talks/reahl-the-python-only-web-framework)][3]\r\n\r\n  [1]: http://youtu.be/M1XL65qj2dU\r\n  [2]: http://www.reahl.org\r\n  [3]: https://ep2015.europython.eu/conference/talks/reahl-the-python-only-web-framework",
      "tag_categories": [
        "Programming",
        "Programming",
        "Everything Else",
        "Best Practice and Use Cases"
      ],
      "emails": "iwan@reahl.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/whats-the-point-of-object-orientation",
      "admin_type": "",
      "companies": "Reahl Software Services (Pty) Ltd"
    },
    "521": {
      "abstract_short": "We all know Python strength does not rely on its performance and speed when running programs. This plus the flexibility of it, can lead to build real slow and bad quality software.\r\n\r\nIn this talk you will discover a set of useful tools for diagnosing where the bottleneck is in your programs along with trips for quickly realizing which is the most needed resource.",
      "sub_title": "",
      "timerange": "2016-07-18 10:30:00, 2016-07-18 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 521,
      "speakers": "Manuel Miranda",
      "title": "Where is the bottleneck?",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "A2",
      "tags": [
        "Performance",
        "Best Practice",
        "Code Analysis"
      ],
      "abstract_long": [
        "Have you ever felt like your software is eating your resources and you have no clue why? Have you reviewed all the lines, debugged and printed everything but you still don't know what's wrong?\r\n\r\nIn this talk I will conduct a fast intro of a basic set of tools you can use to diagnose your software's performance and then we will go through a simple piece of code with different problems and solve them one by one, using those previously presented tools ending up with a decent and acceptable piece of code.\r\n\r\nThis set of tools will include basic ones given by the OS itself like `htop`, `lsof`, `ps` and more advanced ones that let you plot the memory usage for given functions like `memory_profiler`, check CPU usage and the call graph between functions like `cprofile` and `kcachegrind` and others.\r\n\r\nAlso, you will discover some bad practices and \"don't dos\" with python language that can slow you down.\r\n\r\nBy the end of the talk, you should have an idea of which are the most typical causes that can make your program slow and you will have a list of tools to search for and identify the source of the problems.\r\n"
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "manu.mirandad@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/where-is-the-bottleneck",
      "admin_type": "",
      "companies": "Skyscanner"
    },
    "485": {
      "abstract_short": "The LLVM Project provides an intermediate representation (LLVM-IR) that can be compiled on many platforms. LLVM-IR is used by analytical frameworks to achieve language and platform independence. What if we could add Python to the long list of languages that can be translated to LLVM-IR? This talk will go through the steps of wrestling Python into LLVM-IR with a simple, static one-pass compiler.",
      "sub_title": "",
      "timerange": "2016-07-22 12:00:00, 2016-07-22 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 485,
      "speakers": "Anna Herlihy",
      "title": "Wrestling Python into LLVM Intermediate Representation",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "Cross-Platform-Development",
        "Compiler and Interpreters",
        "Open-Source",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "What is LLVM-IR?\r\n\r\nThe LLVM Compiler Infrastructure Project provides a transportable intermediate representation (LLVM-IR) that can be compiled and linked into multiple types of assembly code. What is great about LLVM-IR is that you can take any language and distill it into a form that can be run on many different machines. Once the code gets into IR it doesn\u2019t matter what platform it was originally written on, and it doesn\u2019t matter that Python can be slow. It doesn\u2019t matter if you have weird CPUs - if they\u2019re supported by LLVM it will run.\r\n\r\nWhat is Tupleware?\r\n\r\nTupleWare is an analytical framework built at Brown University that allows users to compile functions into distributed programs that are automatically deployed. TupleWare is unique because it uses LLVM-IR to be language and platform independent.\r\n\r\nWhat is PyLLVM?\r\n\r\nThis is the heart of the talk. PyLLVM is a simple, easy to extend, one-pass static compiler that takes in the subset of Python most likely to be used by Tupleware. PyLLVM is based on an existing project called py2llvm that was abandoned around 2011. \r\n\r\nThis talk will go through some basic compiler design and talk about how some LLVM-IR features make our lives easier, and some much harder. It will cover types, scoping, memory management, and other implementation details. To conclude, it will compare PyLLVM to Numba, a Python-to-LLVM compiler from Continuum Analytics and touch on what the future has in store for PyLLVM.",
        "",
        "",
        ""
      ],
      "abstract_extra": "Hello!\r\n\r\nI am extremely excited to submit a proposal for EuroPython 2016! I\u2019ve been getting to know the Python community over the past year and a half and have been completely charmed. I\u2019m in my second year out of school and pretty new to speaking but I\u2019ve found the Python community to be supportive and welcoming.\r\n\r\nExperience with this talk\r\n====================\r\nThis talk was accepted at [PyCon 2016](https://us.pycon.org/2016/schedule/presentation/1420) in Portland, Oregon. When I submitted the talk proposal I was living in New York City, however now I live in Stockholm and am looking forward to meeting the European Python community! I don\u2019t think there will be too much audience overlap between the two conferences.\r\n\r\nI gave a version of this talk at PyGotham in August 2015. It was well received on Twitter (and another speaker, Eric Schles, mentioned in his talk that he thought everyone should watch the video!). I\u2019ve taken the feedback I got from this presentation and incorporated it into my new talk.\r\n\r\nThere were some technical difficulties with the A/V so I had to restart a few slides in, but the talk is almost fully recorded: \r\n\r\n[**Link to PyGotham video**](https://www.youtube.com/watch?v=_HdfEqSqI2M).\r\n\r\n[**Link to PyGotham slides**](https://github.com/aherlihy/PythonLLVM/blob/master/PyGotham%20Slides.pdf)\r\n\r\n[**Link to the paper that this talk is based on**](https://github.com/aherlihy/PythonLLVM/blob/master/Thesis.pdf)\r\n\r\nAnd if you\u2019re curious, the source code for the project itself is in the same repo!\r\n\r\nI also gave a much more technical version of this talk to the Brown University Computer Science department in 2014.\r\n\r\nOther Speaking Experience\r\n======================\r\nMost recently, I was invited to be a part of a panel organized by PyLadies and WriteSpeakCode called \u201cTales of Open Source: Five Contributors, Five Stories\u201d along with Ben Darnell, David Turner, Julian Berman, and Maia McCormick in October 2015 in NYC.\r\n[**Link to event page**](http://www.meetup.com/NYC-PyLadies/events/225696976)\r\n\r\nI spoke at OpenDataSciCon in Boston May 2015. I spoke about Monary, a fast, specialized MongoDB driver written in C and Python that copies data directly from MongoDB documents into NumPy arrays. \r\n[**Link to OpenDataSciCon talk**](http://bos2015.opendatascicon.com/schedule/monary-really-fast-analysis-with-mongodb-and-numpy). I tried to access this site just now (3/3) and it seems not to be working, but I'll leave the link there in case it is just temporarily down.\r\n\r\nI gave my first industry conference talk *ever* at PyData in NYC in November of 2014. I gave a talk similar to the OpenDataSciCon talk about Monary.\r\n[**Link to PyData video**](https://www.youtube.com/watch?v=E70AO8r5sMs)\r\n\r\nOpen Source Experience\r\n====================\r\nI am a contributor to PyMongo, Monary, MongoDB, and the MongoDB Ruby, C++, and C drivers. I currently maintain Mongo-Connector.",
      "tag_categories": [
        "Python",
        "Python",
        "Open Source",
        "Data Science",
        "Data Science"
      ],
      "emails": "herlihyap@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2016.europython.eu//conference/talks/wrestling-python-into-llvm-intermediate-representation",
      "admin_type": "",
      "companies": "MongoDB, Inc"
    },
    "483": {
      "abstract_short": "Presentation on how you can write faster Python in your daily work. I will briefly explain ways of profiling the code, discuss different code structures and show how they can be improved. You will see what is the fastest way to remove duplicates from a list, what is faster than a _for_ loop or how \u201casking for permission\u201d is slower than \u201cbegging for forgiveness\u201d.\r\n\r\n",
      "sub_title": "",
      "timerange": "2016-07-19 14:00:00, 2016-07-19 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@SebaWitowski",
      "id": 483,
      "speakers": "Sebastian Witowski",
      "title": "Writing faster Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "A1",
      "tags": [
        "Beginners",
        "Performance",
        "Best Practice"
      ],
      "abstract_long": [
        "Did you know that Python preallocates integers from -5 to 257 ? Reusing them 1000 times, instead of allocating memory for a bigger integer, can save you a couple of milliseconds of code\u2019s execution time. If you want to learn more about this kind of optimizations then, \u2026 well, probably this presentation is not for you :) Instead of going into such small details, I will talk about more _\"sane\"_ ideas for writing faster code.\r\nAfter a very brief overview of how to optimize Python code (rule 1: don\u2019t do this, rule 2: don\u2019t do this yet, rule 3: ok, but what if I really want to do this ?), I will show simple and fast ways of measuring the execution time and finally, discuss examples of how some code structures could be improved.\r\nYou will see:\r\n\r\n - What is the fastest way of removing duplicates from a list\r\n - How much faster your code is when you reuse the built-in functions instead of trying to reinvent the wheel\r\n - What is faster than the good ol\u2019 _for_ loop\r\n - If the lookup is faster in a list or a set (and when it makes sense to use each)\r\n - How the \u201cIt's better to beg for forgiveness than to ask for permission\u201d rule works in practice\r\n\r\nI will NOT go into details of _\"serious\"_ optimization, like using different Python implementation or rewriting critical code in C, etc.\r\n\r\n"
      ],
      "abstract_extra": "This is an extended and improved version of a presentation that I gave some time ago, as a part of Lightning Talks at CERN (slides and a link to the video are available here: [https://github.com/switowski/PythonPerformancePresentation][1]).\r\nThis time, less Dragon Ball pictures though :)\r\n\r\n  [1]: https://github.com/switowski/PythonPerformancePresentation\r\n",
      "tag_categories": [
        "Educational",
        "Programming",
        "Best Practice and Use Cases"
      ],
      "emails": "sebastian.witowski@cern.ch",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2016.europython.eu//conference/talks/writing-faster-python",
      "admin_type": "",
      "companies": "CERN"
    },
    "649": {
      "abstract_short": "In this talk, I'll show you how to write redis using asyncio.  You'll see how you can create a real world application using asyncio by creating a python port of redis.",
      "sub_title": "",
      "timerange": "2016-07-21 14:30:00, 2016-07-21 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@jsaryer",
      "id": 649,
      "speakers": "James Saryerwinnie",
      "title": "Writing Redis in Python with asyncio",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 2",
      "tags": [
        "NoSQL",
        "ASYNC / Concurreny",
        "Databases"
      ],
      "abstract_long": [
        "Python has been adding more and more async features to the language.  Starting with asyncio in python 3.4 and including the new async/await keywords in python 3.5, it's difficult to understand how all these pieces fit together.  More importantly, it's hard to envision how to use these new language features in a real world application.  In this talk we're going to move beyond the basic examples of TCP echo servers and example servers that can add number together.  Instead I'll show you a realistic asyncio application.  This application is a port of redis, a popular data structure server, written in python using asyncio.  In addition to basic topics such as handling simple redis commands (GET, SET, APPEND, etc),  we'll look at notifications using pub/sub, how to implement the MONITOR command, and persistence.  Come learn how to apply the asyncio library to real world applications. "
      ],
      "abstract_extra": "This is an idea I started about a year ago.  I wrote an initial blog post on the basic of writing redis in asyncio here: [Writing Redis in Python][1]\r\n\r\nHowever, this was all before the async/await keywords were added to the language and I found myself updating the code to reflect the latest changes to the python language and asyncio library.\r\n\r\nAt this point I think asyncio is at a nice and stable point where I can show the remaining work I've done for writing redis using asyncio.\r\n\r\nHere's a few places I've spoken in the past:\r\n\r\n* re:Invent 2015: https://www.portal.reinvent.awsevents.com/connect/sessionDetail.ww?SESSION_ID=1423&tclass=popup\r\n* OSCON: http://conferences.oreilly.com/oscon/open-source-2015/public/schedule/detail/42218\r\n* Pycon Canada: http://2013.pycon.ca/en/schedule/presentation/34/\r\n\r\n\r\n  [1]: http://jamesls.com/writing-redis-in-python-with-asyncio-part-1.html",
      "tag_categories": [
        "Databases",
        "Programming",
        "Databases"
      ],
      "emails": "js@jamesls.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/writing-redis-in-python-with-asyncio",
      "admin_type": "",
      "companies": "AWS"
    },
    "656": {
      "abstract_short": "There are many unit testing frameworks for C out there, but most of them require you to write your tests in C (or C++). While there might be good reasons to keep your implementation in C, those hardly apply to the tests. So wouldn't it be nice to use all the power of Python and its unit testing capabilities also for your C code? This talk will show you how.",
      "sub_title": "",
      "timerange": "2016-07-21 12:00:00, 2016-07-21 12:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 656,
      "speakers": "Alexander Steffen",
      "title": "Writing unit tests for C code in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Barria 1",
      "tags": [
        "Programming",
        "C-Languages",
        "Testing"
      ],
      "abstract_long": [
        "There are many unit testing frameworks for C out there, but most of them require you to write your tests in C (or C++). While there might be good reasons to keep your implementation in C (for example execution speed or resource consumption), those hardly apply to the tests. So wouldn't it be nice to use all the power of Python and its unit testing capabilities also for your C code?\r\n\r\nThis talk will show you how to combine CFFI and pycparser to easily create Python unit tests for C code, without a single line of C anywhere in the test cases. It will also cover creating mock functions in Python, that can be used by the C code under test to hide external dependencies. Finally, we will look at some of the challenges you might face when trying to mix Python and C and what to do about them."
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Other Programming Languages",
        "Testing"
      ],
      "emails": "Alexander.Steffen@infineon.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2016.europython.eu//conference/talks/writing-unit-tests-for-c-code-in-python",
      "admin_type": "",
      "companies": "Infineon Technologies AG"
    }
  }
}
