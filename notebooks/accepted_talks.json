{
  "Keynote": {
    "1162": {
      "abstract_short": "A journey through the current Python interpreter, some of the effects of its\r\nleaky abstraction on the language design and how we could evolve the language to future proof it. Covers some practical and not so practical ideas based on experience in the JavaScript and Rust ecosystem.",
      "sub_title": "",
      "timerange": "2017-07-10 09:15:00, 2017-07-10 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@mitsuhiko",
      "id": 1162,
      "speakers": "Armin Ronacher",
      "title": "A Python for Future Generations",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "python"
      ],
      "abstract_long": [
        "A journey through the current Python interpreter, some of the effects of its\r\nleaky abstraction on the language design and how we could evolve the language to future proof it. Covers some practical and not so practical ideas based on experience in the JavaScript and Rust ecosystem."
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Python"
      ],
      "emails": "ronacher.armin@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/a-python-for-future-generations",
      "admin_type": "Keynote",
      "companies": ""
    },
    "1161": {
      "abstract_short": "Many times data visualizations need to communicate insights clearly and effectively. But sometimes the goals of a visualization go beyond that: they need to inspire and engage people. But how do you draw them in? What is the process behind creating a creative data visualization? During this talk, I will show some of my projects, and explain a little about the process behind it.\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 09:15:00, 2017-07-11 10:00:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@JanWillemTulp",
      "id": 1161,
      "speakers": "Jan Willem Tulp",
      "title": "How to create inspiring data visualizations?",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Visualization",
        "Data Science"
      ],
      "abstract_long": [
        "Many times data visualizations need to communicate insights clearly and effectively. But sometimes the goals of a visualization go beyond that: they need to inspire and engage people. But how do you draw them in? What is the process behind creating a creative data visualization? During this talk, I will show some of my projects, and explain a little about the process behind it.\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Data Science"
      ],
      "emails": "janwillem@tulpinteractive.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/how-to-create-inspiring-data-visualizations",
      "admin_type": "Keynote",
      "companies": "TULP interactive"
    },
    "1163": {
      "abstract_short": "The history of computing, as it's often covered in textbooks or talks, remains primarily focused on a series of hardware advancements, architectures, operating systems and software. In this talk, we will instead explore the history of ethics in computing, touching on the early days of computers in warfare and science, leading up to ethical issues today such as Artificial Intelligence and privacy regulation.",
      "sub_title": "",
      "timerange": "2017-07-12 09:15:00, 2017-07-12 10:00:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@kjam",
      "id": 1163,
      "speakers": "Katharine Jarmul",
      "title": "If Ethics is not None",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Everything",
        "Best Practice",
        "Data Science",
        "Life"
      ],
      "abstract_long": [
        "The history of computing, as it's often covered in textbooks or talks, remains primarily focused on a series of hardware advancements, architectures, operating systems and software. In this talk, we will instead explore the history of ethics in computing, touching on the early days of computers in warfare and science, leading up to ethical issues today such as Artificial Intelligence and privacy regulation."
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "z-deprecateded",
        "Best Practice and Use Cases",
        "Data Science",
        "Community"
      ],
      "emails": "kjarmul@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/if-ethics-is-not-none",
      "admin_type": "Keynote",
      "companies": "kjamistan"
    },
    "1160": {
      "abstract_short": "We've all taken different routes to get to where we are today, and we're not all currently on the same road going the same place. Tracy Osborn will talk about the idea of the \"Python engineer,\" her (long and full of bumps and potholes) journey to learning and teaching Python, and the harmful myths about learning programming and the paths available when you do so.\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 09:15:00, 2017-07-13 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@limedaring",
      "id": 1160,
      "speakers": "Tracy Osborn",
      "title": "The Different Roads We Take",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Education",
        "Business"
      ],
      "abstract_long": [
        "We've all taken different routes to get to where we are today, and we're not all currently on the same road going the same place. Tracy Osborn will talk about the idea of the \"Python engineer,\" her (long and full of bumps and potholes) journey to learning and teaching Python, and the harmful myths about learning programming and the paths available when you do so.\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Educational",
        "Business"
      ],
      "emails": "tracy.j.osborn@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/the-different-roads-we-take",
      "admin_type": "Keynote",
      "companies": "Limedaring"
    },
    "1164": {
      "abstract_short": "A genuine encounter changes both parties. In this talk Daniele and Aisha will report on the dialogue opened up by recent PyCons and other Python events in Africa. They\u2019ll discuss Python\u2019s impact in countries including Namibia, Nigeria and Zimbabwe, and what open-source software means for Africa at large - and what the encounter means for Python too.",
      "sub_title": "",
      "timerange": "2017-07-14 09:15:00, 2017-07-14 10:00:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@EvilDMP, @",
      "id": 1164,
      "speakers": "Daniele Procida, Aisha Bello",
      "title": "The Encounter: Python\u2019s adventures in Africa",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Diversity",
        "Community"
      ],
      "abstract_long": [
        "A genuine encounter changes both parties. In this talk Daniele and Aisha will report on the dialogue opened up by recent PyCons and other Python events in Africa. They\u2019ll discuss Python\u2019s impact in countries including Namibia, Nigeria and Zimbabwe, and what open-source software means for Africa at large - and what the encounter means for Python too."
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Community",
        "Community"
      ],
      "emails": "daniele.procida@divio.ch, aishabello2050@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/the-encounter-pythons-adventures-in-africa",
      "admin_type": "Keynote",
      "companies": ", Divio"
    }
  },
  "EPS session": {
    "1149": {
      "abstract_short": "This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board.",
      "sub_title": "",
      "timerange": "2017-07-13 14:35:00, 2017-07-13 15:35:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@malemburg",
      "id": 1149,
      "speakers": "Marc-Andre Lemburg",
      "title": "EPS General Assembly",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "EPS",
        "EuroPython"
      ],
      "abstract_long": [
        "This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board."
      ],
      "user_votes": [],
      "abstract_extra": "This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board.",
      "tag_categories": [
        "Community",
        "Community"
      ],
      "emails": "mal@europython.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/eps-general-assembly-2",
      "admin_type": "EPS session",
      "companies": "eGenix.com Software GmbH"
    },
    "1148": {
      "abstract_short": "We need help with organizing and running EuroPython 2018.\r\n\r\nIn this session, we will explain how the EuroPython workgroup model works and where you could help.",
      "sub_title": "",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@malemburg",
      "id": 1148,
      "speakers": "Marc-Andre Lemburg",
      "title": "EuroPython 2018: Help us build the next edition!",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "EPS",
        "EuroPython"
      ],
      "abstract_long": [
        "We need help with organizing and running EuroPython 2018.\r\n\r\nIn this session, we will explain how the EuroPython workgroup model works and where you could help."
      ],
      "user_votes": [],
      "abstract_extra": "We need help with organizing and running EuroPython 2018.\r\n\r\nIn this session, we will explain how the EuroPython workgroup model works and where you could help.",
      "tag_categories": [
        "Community",
        "Community"
      ],
      "emails": "mal@europython.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/europython-2018-help-us-build-the-next-edition",
      "admin_type": "EPS session",
      "companies": "eGenix.com Software GmbH"
    }
  },
  "Community session": {
    "1168": {
      "abstract_short": "EuroPython Meeting of the Python Software Foundation\r\n\r\nMembers and non-members are invited to this EuroPython meeting of the PSF! Please join us for some updates from the PSF board.",
      "sub_title": "",
      "timerange": "2017-07-12 15:45:00, 2017-07-12 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1168,
      "speakers": "Ewa Jodlowska",
      "title": "PSF Meeting",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python Software Foundation (PSF)",
        "Community"
      ],
      "abstract_long": [
        "EuroPython Meeting of the Python Software Foundation\r\n\r\nMembers and non-members are invited to this EuroPython meeting of the PSF! Please join us for some updates from the PSF board."
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Community",
        "Community"
      ],
      "emails": "ewa@python.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/psf-meeting-1",
      "admin_type": "Community session",
      "companies": ""
    }
  },
  "Sponsored session": {
    "815": {
      "abstract_short": "Today\u2019s workout data surpasses prior years in both frequency and size; many online services and web apps attempt to handle this data for the masses by giving general workout metrics.  While this may work for most, athletes who want to get the most out their performance may need to dig into the data much deeper than normal.  In order to get the most of the data, the coaches and pro athletes of the future may have to step into the data science ring, leading to a new push in tools and techniques.",
      "sub_title": "",
      "timerange": "2017-07-10 12:10:00, 2017-07-10 12:40:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@triskadecaepyon",
      "id": 815,
      "speakers": "David Liu",
      "title": "Coaching of the future with Data Science and Workout Data frameworks",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Science",
        "Open-Source",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Today\u2019s workout data surpasses prior years in both frequency and size; many online services and web apps attempt to handle this data for the masses by giving general workout metrics.  While this may work for most, athletes who want to get the most out their performance may need to dig into the data much deeper than normal.  In order to get the most of the data, the coaches and pro athletes of the future may have to step into the data science ring, leading to a new push in tools and techniques.  \r\n\r\nFor the athlete, maximizing one\u2019s time and avoiding injury is of top priority. With the amount of data collection done today, advanced metrics and data mining can be used to gain a competitive edge over the rest of the field.  For the coach, keeping an eye on one\u2019s athletes is of prime concern, as they are responsible for planning and scheduling their athletes\u2019 workout schedules.\r\n\r\nIn this talk, learn about the tools, techniques, and frameworks that were created to enable these analyses, and the future of the workout data and competitive coaching.  \r\n"
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "3420": 7.00
        },
        {
          "300": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "3339": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "468": -1.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "x",
      "tag_categories": [
        "Sciences",
        "Open Source",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "david.a.liu@intel.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/coaching-of-the-future-with-data-science-and-workout-data-frameworks",
      "admin_type": "Sponsored session",
      "companies": "Intel Corporation"
    },
    "1167": {
      "abstract_short": "Introspection is often seen as a bad coding practice and as\r\nsuch a gadget.\r\nNevertheless, the Python Standard Library provides different tools\r\n(among them the 'inspect' library) to easily identify a generator,\r\nrecover the source code of a function or get a function signature.\r\nWe propose to spend 1/2 hour to dig into what introspection has to offer\r\nto developers, to see what tools are available, what you can get out of\r\nthem and some useful use cases that we met in our practice at Criteo.",
      "sub_title": "",
      "timerange": "2017-07-13 15:45:00, 2017-07-13 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@, @",
      "id": 1167,
      "speakers": "Hugues Lerebours, Renaud Bauvin",
      "title": "Inspect (Or Gadget)",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Track",
        "Business"
      ],
      "abstract_long": [
        "Introspection is often seen as a bad coding practice and as\r\nsuch a gadget.\r\nNevertheless, the Python Standard Library provides different tools\r\n(among them the 'inspect' library) to easily identify a generator,\r\nrecover the source code of a function or get a function signature.\r\nWe propose to spend 1/2 hour to dig into what introspection has to offer\r\nto developers, to see what tools are available, what you can get out of\r\nthem and some useful use cases that we met in our practice at Criteo."
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "z-deprecateded",
        "Business"
      ],
      "emails": "h.lerebours@criteo.com, r.bauvin@criteo.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/inspect-or-gadget",
      "admin_type": "Sponsored session",
      "companies": "Criteo"
    },
    "1166": {
      "abstract_short": "Winton ingests data continually from the world's financial markets. We track millions of individual timeseries, with divergent formats, and whose frequencies vary from months to milliseconds. We go beyond simply reading and storing it - we stitch distinct and vast data sets together and subject them to intricate calculations in real-time. This talk will focus on the way we use Python to achieve these ends, and how we are creating tools to further commoditise streaming as a service. ",
      "sub_title": "",
      "timerange": "2017-07-12 16:20:00, 2017-07-12 16:50:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@, @llawall",
      "id": 1166,
      "speakers": "Andreas Heider, Robert Wall",
      "title": "Taking the Hipster out of Streaming",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Science",
        "Data"
      ],
      "abstract_long": [
        "Winton ingests data continually from the world's financial markets. We track millions of individual timeseries, with divergent formats, from disparate time zones, and whose frequencies vary from months to milliseconds. We go beyond simply reading and storing it - we stitch distinct and vast data sets together and subject them to intricate calculations in real-time. This talk will focus on the way we use Python to achieve these ends, and how we are creating tools to further commoditise streaming as a service. "
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Sciences",
        "Data Science"
      ],
      "emails": "a.heider@winton.com, r.wall@winton.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/taking-the-hipster-out-of-streaming",
      "admin_type": "Sponsored session",
      "companies": "Winton"
    }
  },
  "training": {
    "835": {
      "abstract_short": "In this training, we learn how to create 2D and 3D games in Python.",
      "sub_title": "",
      "timerange": "2017-07-11 10:15:00, 2017-07-11 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@MartinChristen",
      "id": 835,
      "speakers": "Martin Christen",
      "title": "2D and 3D Game Development with Python",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Visualization",
        "OpenGL",
        "3D"
      ],
      "abstract_long": [
        "In this 3-hours training, we learn how to create 2D games in Python using pygame and other modules and how to create 3D games using OpenGL (with an outlook to the Vulkan API).\r\nWe start creating a simple 2D breakout game and then go on to 3D and then we create a simple Pong-like game in 3D.\r\n\r\nThis is an extended version of the workshop I gave at the PythonCamp 2017 in Cologne.\r\n\r\nAt the end, you know the basics about game programming, 2D-graphics, 3D-graphics, sound, music and are ready to create your first 2D or even 3D game using Python.\r\n\r\nBring your own device: this tutorial works best for Linux and Windows. Macs are probably supported too."
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "3328": 7.00
        },
        {
          "3722": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "3392": 3.00
        },
        {
          "434": 10.00
        },
        {
          "489": 10.00
        },
        {
          "1966": 10.00
        },
        {
          "1884": 3.00
        },
        {
          "3314": 3.00
        },
        {
          "306": 3.00
        },
        {
          "3350": 10.00
        },
        {
          "3486": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "651": 7.00
        },
        {
          "3777": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "2266": 3.00
        },
        {
          "2875": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3338": 9.00
        },
        {
          "2209": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 2.00
        },
        {
          "562": 2.00
        },
        {
          "2237": 9.00
        },
        {
          "468": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": -1.00
        },
        {
          "3743": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3076": 3.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Web",
        "Everything Else"
      ],
      "emails": "martin.christen@fhnw.ch",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/2d-and-3d-game-development-with-python",
      "admin_type": "",
      "companies": "FHNW - University of Applied Sciences and Arts"
    },
    "944": {
      "abstract_short": "With the increase in usage of Python over the past few years, developers have found ways to strain the Python language in the applications they write, and getting the most out the language has proved to be a difficult task. This tutorial will explain the latest techniques, tips & tricks to tune Python applications. Attendees will get hands-on experience by tuning the Black Scholes and Collaborative Filtering examples, along with a real-world example from the Barcelona Supercomputing Center.\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 10:15:00, 2017-07-13 13:15:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@triskadecaepyon, @",
      "id": 944,
      "speakers": "David Liu, Francisco Javier Conejero Ba\u00f1\u00f3n",
      "title": "A Hands-on approach to tuning Python applications for performance",
      "have_tickets": [
        true,
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Cython",
        "Performance",
        "Best Practice",
        "Multi-Processing",
        "Code Analysis"
      ],
      "abstract_long": [
        "With the increase in usage of Python over the past few years, developers have found ways to strain the Python language in the applications they write. For many who use Python in production, getting the most out the language has proved to be a difficult task. This tutorial will explain the latest techniques, tips & tricks to tune Python applications. Attendees will get hands-on experience on tuning Python performance for the Black Scholes algorithm and Collaborative Filtering, and will learn when and how to effectively use the right tools and techniques to get the best performance. We\u2019ll summarize with a look at a real world example from the Barcelona Supercomputing Center and the performance tuning methods they used.\r\n\u00a0\r\nOverview:\r\n- Introduction & Tools of the trade for optimizing Python performance\r\n - Native Performance libraries\r\n - Performance profilers\r\n - Parallelism tools and other accelerators (Dask, Numba, MPI4PY, numexpr, Cython)\r\n - Hands-On activity: Optimizing Black Scholes algorithm\r\n - Hands on activity: Collaborative Filtering example\r\n - Introduction & Tools of the trade for optimizing Python performance\r\n - Real world Application example: PyCOMPSs from Barcelona Supercomputing Center\r\n\r\n"
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "3454": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3701": 7.00
        },
        {
          "3592": 10.00
        },
        {
          "3428": 10.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "2794": 7.00
        },
        {
          "3275": 3.00
        },
        {
          "3492": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "3573": 7.00
        },
        {
          "1379": 10.00
        },
        {
          "2813": 3.00
        },
        {
          "3554": 7.00
        },
        {
          "2585": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3507": 3.00
        },
        {
          "3407": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "1132": 7.00
        },
        {
          "2365": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "930": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "3777": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "468": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "1355": 9.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 10.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "1490": -1.00
        },
        {
          "3495": 2.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 6.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Python",
        "Programming",
        "Best Practice and Use Cases",
        "Programming",
        "Programming"
      ],
      "emails": "david.a.liu@intel.com, francisco.conejero@bsc.es",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/a-hands-on-approach-to-tuning-python-applications-for-performance",
      "admin_type": "",
      "companies": "Barcelona Supercomputing Center, Intel Corporation"
    },
    "918": {
      "abstract_short": "Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of at-scale deployment. But containers by themselves are only slightly better than VMs in terms of management and be able to be deployed and managed at large scale. This is the root motivation that brought Kubernetes along. In this class you will learn both the (brief) history, theory  and hands-on practice of two of the most important technologies today: Containers and Kubernetes.",
      "sub_title": "",
      "timerange": "2017-07-10 10:15:00, 2017-07-10 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@rdodev",
      "id": 918,
      "speakers": "Ruben Orduz",
      "title": "A Thorough Introduction to Containers and Kubernetes",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "python",
        "Distributed Systems",
        "Docker",
        "DevOps general",
        "Scaling"
      ],
      "abstract_long": [
        "Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \"table stakes\" and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren't practical or accessible in the world of \"classic\" paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. \r\n\r\nBut as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they\u2019re all running and in healthy state? Enter Kubernetes.\r\n\r\nInitially developed internally by Google to replace their own aging and complex container orchestration and management framework. It had to meet all the stringent standards and mind-boggling scale that Google operates on, but from the get-go an effort was made to make the learning curve and developer experience as approachable as possible. At certain point the creators made the case to Google to release kubernetes to the open source community -- a crucial decision that has helped \u201ck8s\u201d (as it\u2019s commonly referred to as) reach rock star levels of fame and mind share not just in the FOSS community but also across industries and businesses from small operations to gigantic multinational corporations with thousands.\r\n\r\nThe goal of this course is to give the attendees a solid foundation of the core concepts mentioned above both in theory and hand-on practice using docker, kubernetes and friends to deploy a sample multi-tier python web application. All attendees need is a laptop with minikube installed and an Internet connection.\r\n\r\nCourse Outline:\r\n\r\n* Instructor intro\r\n* Theoretical Part I\r\n\t* The problem: the \u201cclassic\u201d way of application deployment\r\n\t* Containers\r\n\t\t* What are they\r\n\t\t* How they work\r\n\t\t* Resource isolation\r\n\t\t* Resource utilization\r\n\t\t* Access control\r\n\t\t* Common uses\r\n* Hands-on Part I\r\n\t* Container definition\r\n\t* Container Image\r\n\t* Registries (local/remote) and differences therein\r\n\t* Building a container image\r\n\t* Running containers\r\n\t* Container \u201cManagement\u201d\r\n* COFFEE BREAK / Q&A\r\n* Theoretical Part II\r\n\t* The problem(s) with container management\r\n\t* Kubernetes\r\n\t\t* Objects\r\n\t\t* API\r\n\t\t* Architecture\r\n\t\t* Life cycle\r\n\t\t* Deployments/upgrades/rollbacks\r\n* Hands-on Part II\r\n\t* kubectl introduction\r\n\t* Initial deployment of all tiers of the app\r\n\t* Tuning application parameters on-the-fly, scaling out/in\r\n\t* Upgrade/rollback\r\n\t* Self-healing/HA\r\n* Class wrap up and open Q&A\r\n"
      ],
      "user_votes": [
        {
          "3531": 10.00
        },
        {
          "2834": 10.00
        },
        {
          "195": 3.00
        },
        {
          "251": 7.00
        },
        {
          "3310": 10.00
        },
        {
          "3311": 7.00
        },
        {
          "468": 7.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "2032": 10.00
        },
        {
          "1490": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "419": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "3740": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "3350": 7.00
        },
        {
          "2294": 7.00
        },
        {
          "306": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 7.00
        },
        {
          "3777": 3.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "1897": 2.00
        },
        {
          "930": 6.00
        },
        {
          "3338": 9.00
        },
        {
          "310": 6.00
        },
        {
          "2209": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 2.00
        },
        {
          "2237": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3743": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "41": 9.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Python",
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "rubenoz@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/a-thorough-introduction-to-containers-and-kubernetes",
      "admin_type": "",
      "companies": ""
    },
    "951": {
      "abstract_short": "Pandas is the _Swiss-Multipurpose Knife_ for Data Analysis in Python. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. \r\nAfter this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations.\r\nPandas is not only useful in data science it's also a great tool for creating e.g. sales reports or any other data-driven report required in business.\r\nThe workshop will be provided as Jupyter notebook for the attendees to follow along.\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 10:15:00, 2017-07-13 13:15:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@hendorf",
      "id": 951,
      "speakers": "Alexander Hendorf",
      "title": "Agile Data Analytics with Pandas",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Visualization",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "Agile Data Analytics with Pandas Training.\r\nPandas is the _Swiss-Multipurpose Knife_ for Data Analysis in Python. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. \r\nAfter this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations.\r\nPandas is not only useful in data science it's also a great tool for creating e.g. sales reports or any other data-driven report required in business.\r\n\r\nPart one: _The Basics_\r\n\r\n* Working with pandas and Jupyter notebooks\r\n* reading and writing data across multiple formats (CSV, Excel, JSON, SQL, HTML,\u2026)\r\n* selecting and accessing data \r\n* inner-mechanics of Pandas: Data-Frames, Data-Series\r\n* boolean indexes\r\n* summary and Q&A\r\n\r\nPart two: _Visualisation_\r\n\r\nPandas features directly accessible, powerful visualisations.\r\n\r\n* data visualisation basics\r\n* enhance visualisations / inner mechanics\r\n* summary and Q&A\r\n\r\nPart three: Data Analytics and Aggregation\r\n\r\n* statistical data analysis and aggregation\r\n* indexing\r\n* data grouping and aggregation\r\n* summary and Q&A\r\n\r\nThe workshop will be provided as Jupyter notebook for the attendees to follow along.\r\n"
      ],
      "user_votes": [
        {
          "1897": 7.00
        },
        {
          "1878": 7.00
        },
        {
          "2356": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "3543": 7.00
        },
        {
          "468": 7.00
        },
        {
          "251": 7.00
        },
        {
          "3420": 7.00
        },
        {
          "2119": 10.00
        },
        {
          "2223": 10.00
        },
        {
          "3031": 10.00
        },
        {
          "1490": 10.00
        },
        {
          "3547": 7.00
        },
        {
          "3637": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "245": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "2069": 3.00
        },
        {
          "3573": 3.00
        },
        {
          "782": 10.00
        },
        {
          "1884": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "316": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "3801": 10.00
        },
        {
          "3777": 3.00
        },
        {
          "2889": 3.00
        },
        {
          "650": 10.00
        },
        {
          "3535": 3.00
        },
        {
          "2266": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2875": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "71": 10.00
        },
        {
          "545": 2.00
        },
        {
          "310": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 9.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "3495": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3743": 7.00
        },
        {
          "3327": -1.00
        },
        {
          "41": 9.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "hendorf@opotoc.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/agile-data-analytics-with-pandas",
      "admin_type": "",
      "companies": "K\u00f6nigsweg GmbH"
    },
    "928": {
      "abstract_short": "Ansible is the ultimate python tool for infrastructure and configuration management.\r\n\r\nThe students will learn - thru various examples presented in ipython notebook - how to use Ansible: from the simplest usage to real-life snippets, including communicating with bastion hosts, encrypting passwords and communicating with public clouds like openstack.\r\n\r\n\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@ioggstream",
      "id": 928,
      "speakers": "Roberto Polli",
      "title": "Ansible 2 done right",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Configuration Management (Ansible/Fabric/Chef/...)",
        "Best Practice",
        "System Administration"
      ],
      "abstract_long": [
        "After a quick Ansible roadshow, students  will be guided to reach the following goals:\r\n\r\n# Goals\r\n  - learn Ansible architecture\r\n  - describe delivery layout in ansible.cfg\r\n  - static and dynamic inventories (openstack / digitalocean example if internet connection available)\r\n  - store passwords in encrypted vaults\r\n  - run `ansible` using vaults secrets\r\n  - using bastion hosts and other ssh_opts \r\n  - writing basic playbooks, test driven deployment\r\n  - avoid typical yaml pitfalls\r\n  - using group variables and roles\r\n  - ansible galaxy as a role repository\r\n\r\n##  Bonus Tracks  \r\n \r\n  - testing roles with molecule  (presentation only)  \r\n  - writing ansible modules\r\n\r\n# Methodology\r\nThe training is interactive, jupyter notebooks  and a Docker image will be provided. Students will be driven performing the exercises and sharing their results. A couple of volunteers will be prepared to support the students.\r\n\r\n# Prerequisites\r\n\r\nThe training is based on Docker  images, so before the training, eveybody must setup:\r\n\r\n  - Docker 1.10 + for Linux x64 (on Linux, Windows, Mac)\r\n -  Clone training [sources][1]  \r\n  - Download the images (links will be available [here][1])\r\n\r\nFurther instructions on github when the training will be completed.\r\nFeel free to contact me for any issue or question!\r\n\r\n  [1]: https://github.com/ioggstream/python-course\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Best Practice and Use Cases",
        "DevOps"
      ],
      "emails": "robipolli@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/ansible-2-done-right",
      "admin_type": "",
      "companies": "Par-Tec Spa"
    },
    "932": {
      "abstract_short": "This tutorial looks at asynchronous programming with Python and how it has evolved in the last 10+ years. It starts off by exploring coroutines, the yield statement, some third-party libraries like Tornado and Twisted and ends with asyncio and curio.",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 932,
      "speakers": "Francesco Pierfederici",
      "title": "Asynchronous Programming With Python",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Python 3",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "This tutorial looks at asynchronous programming with Python and how it has evolved in the last 10+ years. It starts off by exploring coroutines, the yield statement, some third-party libraries like Tornado and Twisted and ends with asyncio and curio.\r\n\r\nRoughly half of the time (> 60 minutes) will be devoted to asyncio because it is a relatively new and very exciting technology with not a huge amount of in-depth literature. The rest of the time will be divided between explaining how we got to asyncio (and what everybody was doing before that) and looking at the other \u201ccompeting\u201d libraries out there. \r\n\r\nTime permitting, debugging and profiling tools and strategies will be explored as well. This last point is pretty important since async code can be quite hard to wrap one\u2019s head around. At the same time it is a big topic and would probably need its own separate tutorial\u2026\r\n\r\nIt is expected that participants know Python but no assumption is made on their ability to write asynchronous code. This will be a live coding experience so bring your laptop and follow along!"
      ],
      "user_votes": [
        {
          "2032": 10.00
        },
        {
          "394": 3.00
        },
        {
          "3420": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "1490": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3275": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "3605": 10.00
        },
        {
          "1884": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "1379": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "3350": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3360": 7.00
        },
        {
          "650": 10.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "767": 6.00
        },
        {
          "3338": 9.00
        },
        {
          "3084": -1.00
        },
        {
          "2660": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "3345": 6.00
        },
        {
          "3495": 6.00
        },
        {
          "3743": 3.00
        },
        {
          "3327": 6.00
        },
        {
          "3477": 3.00
        },
        {
          "3826": 6.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming"
      ],
      "emails": "fpierfed@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/asynchronous-programming-with-python",
      "admin_type": "",
      "companies": "IRAM"
    },
    "993": {
      "abstract_short": "Debugging is a daily activity of any programmer. Frequently, it is assumed that programmers can debug. However, often enough code simply does not work. This tutorial will introducing concepts for debugging systematically. Participants will debug example programs with different kinds of bugs and with increasing difficulty. The training will be interactive, so that you will improve your debugging skills in an entertaining way.\r\n",
      "sub_title": "from fixing SyntaxErrors to Delta Debugging",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@k_rother",
      "id": 993,
      "speakers": "Kristian Rother",
      "title": "Best Practices for Debugging",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Debugging",
        "Developing with Python",
        "Best Practice"
      ],
      "abstract_long": [
        "Debugging is a daily activity of any programmer. Frequently, it is assumed that programmers can debug. However, programmers often have to deal with existing code that simply does not work. This tutorial attempts to change that by introducing concepts for debugging and corresponding programming techniques.\r\n\r\nIn this tutorial, participants will learn strategies for systematically debugging Python programs. We will work through a series of examples, each with a different kind of bug and with increasing difficulty. The training will be interactive, combining one-person and group activities, to improve your debugging skills in an entertaining way.\r\n\r\nContents:\r\n---------\r\n\r\n - Syntax Error against Runtime exceptions\r\n - Get file and directory names right\r\n - Debugging with the scientific method\r\n - Inspection of variables with print and introspection functions\r\n - Using an interactive debugger\r\n - Pros and cons of try.. except\r\n - Delta debugging\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "An introductory talk to Delta Debugging can be found on[https://github.com/krother/talks][1]. Sample training materials by Kristian are available on[https://www.gitbook.com/@krother][2].\r\n\r\n  [1]: https://github.com/krother/talks/tree/master/delta_debugging\r\n  [2]: https://www.gitbook.com/@krother\r\n",
      "tag_categories": [
        "Testing",
        ">>> Suggested Track",
        "Best Practice and Use Cases"
      ],
      "emails": "krother@academis.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/tutorial-best-practices-for-debugging",
      "admin_type": "",
      "companies": "Academis"
    },
    "1097": {
      "abstract_short": "Microservices are receiving the buzzword treatment these days, so for a developer interested in learning this paradigm, it is sometimes hard to separate substance from fluff. In this tutorial, Miguel Grinberg starts with an introduction to this architecture, including what's great and not so great about it, and then teaches you how a traditional monolithic application written in Flask can be refactored into a modern distributed system based on microservices. ",
      "sub_title": "",
      "timerange": "2017-07-11 10:15:00, 2017-07-11 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@miguelgrinberg",
      "id": 1097,
      "speakers": "Miguel Grinberg",
      "title": "Building Microservices with Python and Flask",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Python 3",
        "Web Track",
        "APIs",
        "Microservices"
      ],
      "abstract_long": [
        "In this tutorial, Miguel Grinberg starts with an introduction to this architecture, including what's great and not so great about it, and then teaches you how a traditional monolithic application written in Flask can be refactored into a modern distributed system based on microservices.\r\n\r\nMicroservices rely heavily on good API design, for that reason, attendees need to have some amount of experience developing web applications with Python, in particular web APIs. The examples will all be using Flask, but Flask specific experience is not required, since the concepts apply to other web frameworks as well.\r\n\r\nBy the end of the class, attendees will have a good understanding of what the microservices architecture is, its benefits and its disadvantages. In the hands-on portion of the class, a complete microservices application will be built, and students will walk away with the application running on their laptops. "
      ],
      "user_votes": [],
      "abstract_extra": "I wanted to note that I'm giving this class at PyCon US in May.",
      "tag_categories": [
        "Python",
        ">>> Suggested Track",
        "Web",
        "Programming"
      ],
      "emails": "miguel.grinberg@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/building-microservices-with-python-and-flask",
      "admin_type": "",
      "companies": "Rackspace"
    },
    "1100": {
      "abstract_short": "Data Unit Tests is applying unit testing ideas and principles to data science and data engineering teams. Often, data validation is left as an application for the data science team, who is already working on building custom solutions and reports and must take more time to validate that the data received is within normal ranges or conditions. This workshop helps approach how to apply testing to data pipelines and reports.",
      "sub_title": "",
      "timerange": "2017-07-14 10:15:00, 2017-07-14 13:15:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@kjam",
      "id": 1100,
      "speakers": "Katharine Jarmul",
      "title": "Data Unit Testing with Python",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Jupyter/iPython",
        "Use Case",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Data"
      ],
      "abstract_long": [
        "Data validation is commonly used by data science teams to ensure their data \"smells right.\" Often, however, these teams might be evaluating the criteria by hand (or eyes) or evaluating only at end-of-term reports (i.e. monthly, quarterly or yearly numbers). In addition, these numbers may only be reviewed in aggregate, and the functions or pipelines used to create these reports might never be tested. Issues in schema changes, erroneous or duplicate data is left to fix perhaps after algorithms or other decision making approaches were already used on the datasets, leading to negative business impact.\r\n\r\nIn this workshop, we will evaluate why unit testing approaches are important even with a data science or data engineering team. We'll introduce libraries that can help incorporate data validation, schema constraints and unit tests into your data workflows. Finally, we'll look at a real-world use case and implement some data unit tests and alerting for failure.\r\n\r\nAttendees should have a working understanding of common data science libraries (like Pandas and NumPy) and have the repository installed before they attend. (link to come!)\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "kjarmul@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/data-unit-testing-with-python",
      "admin_type": "",
      "companies": "kjamistan"
    },
    "883": {
      "abstract_short": "Developers pick up Python quickly, but when they run into problems, many debug with print statements. Whether it's the concept of the debugger, or the interface of pdb, debugging is a chasm which not all cross.\r\n\r\nThis tutorial aims to bring Python debugging to the masses:\r\n\r\n - Visual debugging in a popular Python IDE\r\n- Live building of an arcade 2d game with hands-on section\r\n- A fun, fast-paced presentation style\r\n- Hands-on with can't-fail supporting material\r\n\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@paulweveritt",
      "id": 883,
      "speakers": "Paul Everitt",
      "title": "Debugging for the Masses...Visually",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Game-Development",
        "Best Practice",
        "Development"
      ],
      "abstract_long": [
        "Audience\r\n--------\r\n\r\nDevelopers who have learned Python, and know they need to learn \u201cthat debugger thing\u201d, but have either bounced off each attempt or gotten stuck at the basics.\r\n\r\nObjectives\r\n----------\r\n\r\nAttendees will understand why debugging is badass and helpful, what are the major concepts, how they apply during regular development, and how a visual debugger puts a friendly face on all of this. Walking out, debugging will seem not-scary-at-all.\r\n\r\nThis tutorial uses the free and open source PyCharm Community Edition, but the visual concepts apply to other IDEs as well.\r\n\r\nOutline\r\n-------\r\n\r\nIntro\r\n\r\nOrientation\r\n- Hello World in arcade, command line\r\n- Hello World in arcade, in PyCharm Run\r\n- Hello World in arcade, in PyCharm Debug (without optimization)\r\n- Hello World in arcade, in PyCharm Debug (with optimization)\r\n- Hello World in arcade, with an error, jump to line\r\n\r\nFirst Steps\r\n- Debugging without a debugger: Struggle through a print-oriented debug cycle\r\n\t- Debug with pdb\r\n\t- Set breakpoint\r\n\t- View variable information (Enhanced Variable Explorer, hides stuff)\r\n\t- Ditto, without restarting\r\n- Various knobs in the debug window, e.g. restart\r\n\t- Inline debugging\r\n\r\n\r\nProductive Debugging\r\n- Setting/unsetting the \u201cstop on exception\u201d support\r\n- Using the console/IPython/Evaluate Expression at a breakpoint\r\n- Conditional breakpoint\r\n- All flavors of stepping\r\n- Inline debugging\r\n- Hands-on\r\n\r\nIn Depth\r\n- Stack frames\r\n- Watches\r\n- Manage all breakpoints"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Everything Else",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "pauleveritt@me.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/debugging-for-the-massesvisually",
      "admin_type": "",
      "companies": "JetBrains s.r.o."
    },
    "791": {
      "abstract_short": "In this training we will explore different patterns that we often have to use in our web applications when dealing with async work.\r\n\r\nIn the Python and Django world, Celery is the go-to solution if we want to have workers, doing heavy lifting off the http process.\r\n\r\nWe will learn the basic Celery API and explore some frequently used patterns.",
      "sub_title": "",
      "timerange": "2017-07-10 10:15:00, 2017-07-10 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@Rado_g",
      "id": 791,
      "speakers": "Radoslav Georgiev",
      "title": "Django & Celery - frequently used patterns",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Django Track",
        "Use Case",
        "Django",
        "Best Practice",
        "APIs"
      ],
      "abstract_long": [
        "In this training we will explore different patterns that we often have to use in our web applications when dealing with async work.\r\n\r\nIn the Python and Django world, Celery is the go-to solution if we want to have workers, doing heavy lifting off the http process.\r\n\r\nWe will learn the basic Celery API and explore some frequently used patterns:\r\n\r\n* Running Celery in Django context.\r\n* Polling for results.\r\n* Using Celery canvas for complex flows.\r\n* Error handling and retrying.\r\n* Debugging and testing of Celery tasks.\r\n\r\nFor the training, a set of setup Django apps will be provided. The attendees will have to work on top of that in order to complete different Celery related tasks.\r\n"
      ],
      "user_votes": [
        {
          "3312": 10.00
        },
        {
          "195": 10.00
        },
        {
          "3256": 10.00
        },
        {
          "251": 7.00
        },
        {
          "468": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 10.00
        },
        {
          "3547": 10.00
        },
        {
          "245": 10.00
        },
        {
          "564": 3.00
        },
        {
          "3764": 3.00
        },
        {
          "1379": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "2259": 7.00
        },
        {
          "3407": 10.00
        },
        {
          "3492": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "1956": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "650": 3.00
        },
        {
          "3799": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3448": 10.00
        },
        {
          "3823": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "3827": 9.00
        },
        {
          "3832": 9.00
        },
        {
          "3826": 6.00
        },
        {
          "85": -1.00
        },
        {
          "3637": -1.00
        },
        {
          "3825": 10.00
        },
        {
          "3338": 9.00
        },
        {
          "3818": 6.00
        },
        {
          "3703": -1.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 2.00
        },
        {
          "3495": 2.00
        },
        {
          "171": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        "Application Frameworks",
        "Best Practice and Use Cases",
        "Web"
      ],
      "emails": "radorado@hacksoft.io",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/django-celery-frequently-used-patterns",
      "admin_type": "",
      "companies": "HackSoft"
    },
    "1090": {
      "abstract_short": "Optimization can often help to make Python programs faster or use less memory.\r\nDeveloping a strategy, establishing solid measuring and visualization techniques\r\nas well as knowing about algorithmic basics and datastructures are the foundation\r\nfor a successful optimization. The tutorial will cover these topics.\r\nExamples will give you a hands-on experience on how to approach efficiently.",
      "sub_title": "",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@pyacademy",
      "id": 1090,
      "speakers": "Mike M\u00fcller",
      "title": "Faster Python Programs - Measure, don't Guess",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Algorithms",
        "Tooling",
        "Data Structures",
        "Best Practice",
        "Performance"
      ],
      "abstract_long": [
        "Optimization can often help to make Python programs faster or use less memory.\r\nDeveloping a strategy, establishing solid measuring and visualization techniques\r\nas well as knowing about algorithmic basics and datastructures are the foundation\r\nfor a successful optimization. The tutorial will cover these topics.\r\nExamples will give you a hands-on experience on how to approach efficiently.\r\n\r\nPython is a great language. But it can be slow compared to other languages\r\nfor certain types of tasks. If applied appropriately, optimization may reduce\r\nprogram runtime or memory consumption considerably. But this often comes at a\r\nprice. Optimization can be time consuming and the optimized program may be more\r\ncomplicated. This, in turn, means more maintenance effort. How do you find\r\nout if it is worthwhile to optimize your program? Where should you start?\r\nThis tutorial will help you to answer these questions. You will learn how\r\nto find  an optimization strategy based on quantitative and objective criteria.\r\nYou will experience that one's gut feeling what to optimize is often wrong.\r\n\r\nThe solution to this problem is: \u201eMeasure, Measure, and Measure!\u201c. You will\r\nlearn how to measure program run times as well as profile CPU and memory.\r\nThere are great tools available. You will learn how to use some of them.\r\nMeasuring is not easy because, by definition, as soon as you start to measure,\r\nyou influence your system. Keeping this impact as small as possible is\r\nimportant. Therefore, we will cover different measuring techniques.\r\n\r\nFurthermore, we will look at algorithmic improvements. You will see that the\r\nright data structure for the job can make a big difference. Finally, you will\r\nlearn about different caching techniques.\r\n\r\n## Software Requirements\r\n\r\nYou will need Python 2.7 or 3.5 installed on your laptop. Python 2.6 or 3.3/3.4\r\nshould also work. Python 3.x is strongly preferred.\r\n\r\n\r\n### Jupyter Notebook\r\n\r\nI will use a Jupyter Notebook for the tutorial because it makes a very good\r\nteaching tool. You are welcome to use the setup you prefer, i.e editor, IDE,\r\nREPL. If you also like to use a Jupyter Notebook, I recommend `conda` for\r\neasy installation. Similarly to `virtualenv`, `conda` allows creating isolated\r\nenvironments but allows binary installs for all platforms.\r\n\r\nThere are two ways to install `Jupyter` via `conda`:\r\n\r\n1. Use [Minconda][10]. This is a  small install and (after you installed it)\r\n   you can use the command  `conda` to create an environment:\r\n  `conda create -n pycon2016 python=3.5`\r\n   Now you can change into this environment:\r\n   `source activate pycon2016`. The prompt should change to `(pycon2017)`.\r\n   Now you can install IPython: `conda install Jupyter`.\r\n\r\n2. Install [Anaconda][20] and you are ready to go if you don't mind installing\r\n   lots of packages from the scientific field.\r\n\r\n### Working witch ``conda`` environments\r\n\r\nAfter creating a new environment, the system might still work with some\r\nstale settings. Even when the command ``which`` tells you that you are using an\r\nexecutable from your environment, this might actually not be the case.\r\nIf you see strange behavior using a command line tool in your environment,\r\nuse ``hash -r`` and try again.\r\n\r\n[10]: http://conda.pydata.org/miniconda.html\r\n[20]: http://continuum.io/downloads\r\n\r\n\r\n### Tools\r\n\r\nYou can install these with ``pip`` (in the active ``conda`` environment):\r\n\r\n* [SnakeViz][3]\r\n* [line_profiler][4]\r\n* [Pympler][6]\r\n* [memory_profiler][7]\r\n* [pyprof2calltree][9]\r\n\r\n\r\n\r\n#### Linux\r\n\r\nUsing the package manager of your OS should be the best option.\r\n\r\n\r\n[1]: http://conda.pydata.org/miniconda.html\r\n[3]: http://jiffyclub.github.io/snakeviz/\r\n[2]: http://continuum.io/downloads\r\n[4]: https://pypi.python.org/pypi/line_profiler/\r\n[6]: https://pypi.python.org/pypi/Pympler\r\n[7]: https://pypi.python.org/pypi/memory_profiler\r\n[8]: http://kcachegrind.sourceforge.net/html/Home.html\r\n[9]: https://github.com/pwaller/pyprof2calltree/\r\n\r\nAudience\r\n---------\r\n\r\nProgrammers with good basic Python knowledge. No previous\r\nknowledge in the field of optimization is required.\r\n\r\n\r\nThis tutorial will help you to get the most out of your optimization work.\r\nYou will learn useful techniques for details combined with an overall strategy\r\nfor the big picture.\r\n\r\nThe Python programming language is relatively easy to learn and allows to\r\nsolve real-world problem with a just a few concepts.\r\n\r\nBut it also offers several advanced features that can help to greatly improve\r\nthe programming experience. The course teaches how important advanced features\r\nwork and provides details about meta-programming techniques. \r\n\r\nEXTERNAL TRAINING: Advanced Python (5. - 7. July)\r\n====================================\r\n\r\nThe Python programming language is relatively easy to learn and allows to\r\nsolve real-world problem with a just a few concepts.\r\n\r\nBut it also offers several advanced features that can help to greatly improve\r\nthe programming experience. The course teaches how important advanced features\r\nwork and provides details about meta-programming techniques. \r\n\r\nPlease note: This training is in the week before EuroPython and *not included in the conference ticket price*.\r\n\r\n_To attend you need to [register here][1]_\r\n[1]: https://goo.gl/BziwYd"
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Programming",
        "Programming",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "mmueller@python-academy.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/faster-python-programs-measure-dont-guess-2",
      "admin_type": "",
      "companies": "Python Academy GmbH & Co. KG"
    },
    "1055": {
      "abstract_short": "When you offer your open source application to the world, installation, integration, and getting-up-and-running difficulties often prevent the world from taking it! In this session we\u2019ll package your reusable app for one-click deployment on the Divio Cloud, making it instantly available and useful.\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 10:15:00, 2017-07-12 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@EvilDMP",
      "id": 1055,
      "speakers": "Daniele Procida",
      "title": "Launch your application into the cloud",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Deployment/Continuous Integration and Delivery",
        "Django",
        "Docker",
        "Packaging"
      ],
      "abstract_long": [
        "One of the aims of the Divio Cloud is to provide a platform for Python and Django developers to make their applications available to a wider audience.\r\n\r\nMany would-be adopters stumble at the first hurdles, particularly the less experienced adopters. With a little packaging, it\u2019s possible to make a reusable application available even to the least experienced of Python and Django project developers, and a good first experience is often all that\u2019s needed to give a potential user the confidence to persevere.\r\n\r\nPackaging your application as a Divio Cloud Addon makes installation into a real project as easy as a matter of a few clicks, including configuration. It helps showcase the application with minimal effort. You can even set up an example project, populated with realistic data, to give potential users a head-start. Your application can become a realistic choice for users who\u2019ll never clone a GitHub repository or pip install a package.\r\n\r\nThe Divio Cloud is a Python/Django-based platform-as-as-service, built specifically around the needs of Python Django developers. Divio Cloud projects and applications are available at no cost, indefinitely, both for application developers and end users. For application developers, there are opportunities to use the platform to earn revenue by supplying or supporting their products. Divio Cloud projects are Docker-based and readily portable to other platforms."
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Application Frameworks",
        "DevOps",
        "Python"
      ],
      "emails": "daniele.procida@divio.ch",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/launch-your-application-into-the-cloud",
      "admin_type": "",
      "companies": "Divio"
    },
    "974": {
      "abstract_short": "This workshop addresses one of the most common pain points in organizations : last-mile delivery of data science applications. The attendees would learn how to build a seamless end-to-end data driven application - data ingestion, exploration, machine learning, RESTful API and dashboard - to solve a business prediction problem and present it to their clients. ",
      "sub_title": "",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 17:00:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@anandology, @amitkaps",
      "id": 974,
      "speakers": "Anand Chitipothu, Amit Kapoor",
      "title": "Machine Learning as a Service",
      "have_tickets": [
        true,
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Public Cloud (AWS/Google/...)",
        "Microservices",
        "Machine-Learning"
      ],
      "abstract_long": [
        "> \u201cJack of all trades, master of none, though oft times better than master of one\u201d\r\n\r\nOne of the common pain points that we have come across in organizations is the last-mile delivery of data science applications. There are two common delivery vehicles of data products \u2013 dashboards and APIs.\r\n\r\nMore often than not, machine learning practitioners find it hard to deploy their work in production and full stack developers find it hard to incorporate machine learning models in their pipeline. To be able to successfully do a data science-driven product/application, it requires one to have a basic understanding of machine learning, server-side programming and front-end application.\r\n\r\nIn this workshop, one would learn how to build a seamless end-to-end data driven application \u2013 Starting from data ingestion, data exploration, creating a simple machine learning model, exposing the output as a RESTful API and deploying the dashboard as a web application \u2013 to solve a business problem.\r\n\r\n### Course Content:\r\n\r\n**Data Engineering**   \r\n1. Data Ingestion and Exploration\r\n\r\n**Machine Learning**   \r\n2. A simple machine learning model\r\n\r\n**Dashboard**   \r\n3.  Dashboard using bokeh     \r\n\r\n**API and Deployment**    \r\n4. RESTful API  \r\n5. Integrating Model output to DB  \r\n6.  Deployment   \r\n  \r\nThe repository for the workshop  is [here](https://github.com/amitkaps/full-stack-data-science)\r\n\r\n**Key takeaways** \r\n\r\nLearn how to build and deploy a machine learning application end-to-end\r\n\r\n"
      ],
      "user_votes": [
        {
          "3491": 7.00
        },
        {
          "2356": 7.00
        },
        {
          "195": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "468": 3.00
        },
        {
          "251": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "3031": 10.00
        },
        {
          "3278": 7.00
        },
        {
          "3328": 3.00
        },
        {
          "245": 7.00
        },
        {
          "564": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "3418": 3.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 10.00
        },
        {
          "3398": 3.00
        },
        {
          "3007": 7.00
        },
        {
          "2259": 7.00
        },
        {
          "3699": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3777": 10.00
        },
        {
          "650": 3.00
        },
        {
          "2266": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "3506": 6.00
        },
        {
          "1041": 6.00
        },
        {
          "3637": -1.00
        },
        {
          "3498": 10.00
        },
        {
          "380": 2.00
        },
        {
          "3799": 7.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 9.00
        },
        {
          "1490": -1.00
        },
        {
          "3495": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3743": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "This talk will be co-presented with Amit Kapoor\r\n\r\nThe speakers have presented at a number of PyCons and other popular data science conferences.\r\n\r\nSome of the recent ones are: Strata London 2017, Strata Singapore 2016, EuroPython 2016, PyCon Singapore 2016, SciPy USA(Austin) 2016\r\n",
      "tag_categories": [
        "DevOps",
        "Programming",
        "Data Science"
      ],
      "emails": "anandology@gmail.com, amitkaps@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/machine-learning-as-a-service",
      "admin_type": "",
      "companies": "Narrativeviz Consulting, rorodata"
    },
    "811": {
      "abstract_short": "Linear and quadratic optimizers and penalties are a mainstay of data science, and are popular due to their ability to handle large numbers of dimensions quickly. However, the use of linear and/or quadratic tools can seriously limit the amount and quality of information that can be applied in the inverse problem. This tutorial will introduce some tools within the `mystic\u2019 framework for efficiently solving high-dimensional non-convex optimization problems with nonlinear constraints.",
      "sub_title": "",
      "timerange": "2017-07-14 10:15:00, 2017-07-14 13:15:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@",
      "id": 811,
      "speakers": "Michael McKerns",
      "title": "Modern optimization methods in Python",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Predictions",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "This tutorial will introduce modern tools for solving optimization problems. We will start by introducing the cost function, and it\u2019s use in local and global optimization. We will then address how to monitor and diagnose your optimization convergence and results, tune your optimizer, and utilize compound termination conditions. This tutorial will discuss building and applying box constraints, penalty functions, and symbolic constraints. We will then demonstrate methods to efficiently reduce search space through the use of robust optimization constraints and kernel transformations.  Real-world inverse problems can be expensive, thus we will show how to enable your optimization to seamlessly leverage parallel computing. Large-scale optimizations also can greatly benefit from efficient solver restarts and the saving of state. This tutorial will cover using asynchronous computing for results caching and archiving, dynamic real-time optimization, and dimensional reduction. Next we will discuss new optimization methods that leverage parallel computing to perform fast global optimizations and n-dimensional global searches.\r\n\r\nThe audience need not be an expert in optimization, but should have interest in solving real-world optimization problems. We will begin with introductory optimizations, learning how to build confidence in understanding your results. By the end of the tutorial, participants will have knowledge of how to use modern constrained nonlinear optimization tools."
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "mmckerns@uqfoundation.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/modern-optimization-methods-in-python-1",
      "admin_type": "",
      "companies": "the UQ Foundation"
    },
    "752": {
      "abstract_short": "Feeling outflanked by ES6? Get back at them by writing mobile apps in Python.\r\n\r\nThe objective is to write an app in Python using native iOS UI.\r\n\r\nTraining will cover the Python / Objective-C bridge, how to create and use objc objects from Python, how to implement objc protocol as Python classes, as well as working around limitations of having 2 independent garbage collectors (objc and py runtimes).",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 752,
      "speakers": "Dima Tisnek",
      "title": "Native Python iOS apps",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Python 3",
        "Developing with Python",
        "Mac OS X"
      ],
      "abstract_long": [
        "Feeling outflanked by ES6?\r\nGet back at them by writing mobile apps in Python.\r\n\r\nThanks to Pybee/Russel KM, you can, and I'll show you now.\r\n\r\n## Objective\r\nThe objective is to [learn to] write an app in Python using native iOS UI. Training will cover the Python / Objective-C bridge, how to create and use objc objects from Python, how to implement objc protocol as Python classes, as well as working around limitations of having 2 independent garbage collectors (objc and py runtimes).\r\n\r\n## Plan\r\n\r\n - blank app that doesn't crash\r\n - delegates, window, views\r\n - containers and data sources\r\n - use components built in XCode interface builder\r\n - transitions, bells and whistles\r\n - save and restore app state\r\n\r\n## Goal\r\nAfter this training you'll have a simple working iOS app, ready to start beta-testing!\r\n\r\nThose who want to look at the code in advance will find it here: https://github.com/dimaqq/playing-with-python-on-ios\r\n\r\n"
      ],
      "user_votes": [
        {
          "2223": 3.00
        },
        {
          "1900": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "3275": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "2813": 3.00
        },
        {
          "2479": 7.00
        },
        {
          "2585": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "2365": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 10.00
        },
        {
          "3469": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "651": 10.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3575": 3.00
        },
        {
          "3298": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "1355": -1.00
        },
        {
          "3637": -1.00
        },
        {
          "767": 9.00
        },
        {
          "310": 9.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 6.00
        },
        {
          "562": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "468": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3495": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3477": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        ">>> Suggested Track",
        "Operating Systems"
      ],
      "emails": "dimaqq@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/native-python-ios-apps",
      "admin_type": "",
      "companies": "Self-employed"
    },
    "942": {
      "abstract_short": "Many people heard about speeding up CPython code by writing C\r\nExtensions but almost nobody did it.\r\n\r\nWriting bare C code is very hard and error prone, that's why much\r\neasier and safer Cython was born.\r\n\r\nIn the training we'll learn cythonization procedure step by step from very\r\nbeginning down to real world use cases.\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 10:15:00, 2017-07-12 13:15:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@andrew_svetlov",
      "id": 942,
      "speakers": "Andrew Svetlov",
      "title": "Optimizing Python code with Cython",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 1",
      "tags": [
        "Cython",
        "Performance"
      ],
      "abstract_long": [
        "Many people heard about speeding up CPython code by writing C\r\nExtensions but almost nobody did it.\r\n\r\nWriting bare C code is very hard and error prone, that's why much\r\neasier and safer Cython was born.\r\n\r\nThis Python-like language allows to write C Extensions without\r\nmanaging reference counting and exception handling manually, Cython\r\ncode is comparable with Python from clearness and readablity\r\nperspective but might be tens times faster.\r\n\r\nBut cythonizing the whole programm is redundant, mindless optimization\r\ndoesn't give any significant speedup but increases build toolchain\r\ncomplexity.\r\n\r\nIn the training we'll learn the procedure step by step from very\r\nbeginning down to real world use cases.\r\n\r\nThe talk is covering the following topics:\r\n* Problem detection aka bottleneck finding\r\n* Testing\r\n* Writing Cython optimizations for several common scenarios\r\n* Approaches for compiling and running\r\n* Tooling (profiling, debugging, coverage reporting)\r\n\r\nWe'll consider optimization of the following very typical domains (from easier to harder): \r\n* Simple Mathematics \r\n* Standard Python data structures \r\n* Custom data structures\r\n\r\nEvery example is started from non-optimized Python code and goes\r\nthrough several transformations to high speed Cython'ed extension.\r\n\r\nThe session pursuites teaching people to optimizing existing Python\r\nCode, bridging to exisiting C libraries is another very interesting\r\ntopic which is out of scope, sorry.\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming"
      ],
      "emails": "andrew.svetlov@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/optimizing-python-code-with-cython",
      "admin_type": "",
      "companies": ""
    },
    "781": {
      "abstract_short": "In this tutorial I will start a simple Python project from scratch and will develop it together with the attendees following a strict TDD methodology. The testing framework in use will be `pytest`, and during the training concepts like `coverage`, `flake8` and mocks (with the official `unittest.mock`) will be introduced.",
      "sub_title": "",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@tw_lgiordani",
      "id": 781,
      "speakers": "Leonardo Giordani",
      "title": "TDD in Python with pytest and mock",
      "have_tickets": [
        true
      ],
      "type": "Training (180 mins)",
      "status": "accepted",
      "track_title": "Sala del Tempio 2",
      "tags": [
        "Python 3",
        "Test Driven Development (TDD)"
      ],
      "abstract_long": [
        "In this tutorial I will start a simple Python project from scratch and will develop it together with the attendees following a strict TDD methodology. The testing framework in use will be [`pytest`][1], and during the training concepts like [`coverage`][2], [`flake8`][3] and mocks (with the official [`unittest.mock`][4] library) will be introduced.\r\n\r\nDuring the tutorial we will use Python 3, but the concepts introduced are valid for Python 2 as well.\r\n\r\nThe only requirement are a working Python 3 virtual environment and a text editor of choice.\r\nThere will be no time to install Python during the tutorial, so please take your time to configure your laptop.\r\n\r\n  [1]: https://docs.pytest.org/en/latest/\r\n  [2]: https://coverage.readthedocs.io/en/coverage-4.3.4/\r\n  [3]: http://flake8.pycqa.org/en/latest/\r\n  [4]: https://docs.python.org/3/library/unittest.mock.html\r\n"
      ],
      "user_votes": [
        {
          "3256": 10.00
        },
        {
          "3310": 7.00
        },
        {
          "251": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 10.00
        },
        {
          "3637": 3.00
        },
        {
          "3592": 10.00
        },
        {
          "3428": 10.00
        },
        {
          "564": 7.00
        },
        {
          "2227": 7.00
        },
        {
          "3292": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3392": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "2493": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "3507": 10.00
        },
        {
          "3369": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3777": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "3535": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "1355": 2.00
        },
        {
          "2834": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "2237": 2.00
        },
        {
          "3495": 6.00
        },
        {
          "171": 2.00
        },
        {
          "2286": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 6.00
        },
        {
          "468": -1.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "The training is based on this two series of posts on my blog\r\n\r\nhttp://blog.thedigitalcatonline.com/blog/2015/05/13/python-oop-tdd-example-part1/#.WOYOlXUrIUE\r\n\r\nhttp://blog.thedigitalcatonline.com/blog/2016/03/06/python-mocks-a-gentle-introduction-part-1/#.WOYOl3UrIUE",
      "tag_categories": [
        "Python",
        "Testing"
      ],
      "emails": "giordani.leonardo@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/tdd-in-python-with-pytest-and-mock",
      "admin_type": "",
      "companies": "We Got POP Ltd"
    }
  },
  "poster": {
    "998": {
      "abstract_short": " At The Mobility House we  utilize the  electric cars to store energy from renewable sources and utilize this energy when production can't supply the demand. \r\nTo do that, we build  a software which naturally distributed. Cars and a charger are connected at different times and location to our cloud based software.\r\nWe chose Python for rapidy building the various components of the system running on a variety of systems, from tiny PCs to cloud based systems. ",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@OzNTiram",
      "id": 998,
      "speakers": "Oz Tiram",
      "title": "Building a distributed system with Python for storing energy in electric cars",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 1",
      "tags": [
        "General",
        "Internet of Things",
        "Business",
        "Engineering",
        "Linux"
      ],
      "abstract_long": [
        " At The Mobility House we want to utilize the batteries found in electric cars to store energy from renewable sources and utilize this energy when production can not supply the demand. \r\nTo do that we are building software which naturally distributed. Each car and a charger are connected at different times and location to a central cloud based software which divides requests for energy consumption,\r\nthat is charging the car, or energy supply, that is  discharging the car.\r\nWe chose Python for rapidly building the various components of the system running on a variety of systems, from industry grade small servers, through large and powerful rack servers through cloud hosted servers. Python's rich eco-system of tools and libraries are a true booster for our system, and we would like to talk about our chosen architecture and celebrate  the tools we use from saltstack, pika, kombu, bottle and thespian."
      ],
      "user_votes": [
        {
          "3328": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3428": 10.00
        },
        {
          "564": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "306": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "1897": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "3407": 9.00
        },
        {
          "3412": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "468": 6.00
        },
        {
          "171": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "z-deprecateded",
        "DevOps",
        "Business",
        "Everything Else",
        "Operating Systems"
      ],
      "emails": "oz.tiram@mobilityhouse.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/building-a-distributed-system-with-python-for-storing-energy-in-electric-cars",
      "admin_type": "",
      "companies": "The Mobility House"
    },
    "1043": {
      "abstract_short": "At Modal Nodes we are developing a tool that enables us to focus on coding and planning and not on devops, having most of Operations transformed into an application. We want to share this tool that can be deployed on your own infrastructure or as a paid SaaS environment with the possibility to connect the swarm installations you are working on and set up a set of shared infrastructures and tools to work with and automate deployment of projects on the swarm infrastructure. ",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 13:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@ingmmo",
      "id": 1043,
      "speakers": "Marco Montanari",
      "title": "Django based Docker Manager for development teams",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 2",
      "tags": [
        "Django Track",
        "Git",
        "Docker",
        "DevOps general",
        "Web Track"
      ],
      "abstract_long": [
        "At Modal Nodes we are developing a tool that enables us to focus on coding and planning and not on devops, having most of Operations transformed into an application. We want to share this tool that can be deployed on your own infrastructure or as a paid SaaS environment with the possibility to connect the swarm installations you are working on and set up a set of shared infrastructures and tools to work with and automate deployment of projects on the swarm infrastructure. \r\nWe are doing this through an integration with Github and Dockerhub webhooks and triggers as well as a set of automation tools we are developing that enable the development team to focus on coding, be it in python/django, be it in nodejs, be it in php. The platform enables a team or a single developer to define programming templates for the single services set up and from there to build whole stacks of containers in a standardized fashion, without the hassle of complex configuration files (that can easily be re-generated anyway)."
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "1481": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "3592": 7.00
        },
        {
          "2813": 7.00
        },
        {
          "316": 10.00
        },
        {
          "3507": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "2985": 10.00
        },
        {
          "2698": 6.00
        },
        {
          "300": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "DevOps",
        "DevOps",
        "DevOps",
        ">>> Suggested Track"
      ],
      "emails": "marco.montanari@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/django-based-docker-manager-for-development-teams",
      "admin_type": "",
      "companies": "Modal Nodes"
    },
    "1157": {
      "abstract_short": "Many problems in statistics, finance, biology, pharmacology, physics, mathematics,\r\neconomics, and chemistry involve the determination of the global minimum of\r\nmultidimensional functions. Python modules from SciPy and PyPI for the\r\nimplementation of different stochastic methods (i.e.: pyEvolve, SciPy optimize) have\r\nbeen developed and successfully used in the Python scientific community.",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 13:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 1157,
      "speakers": "Sylvain Gubian",
      "title": "Efficient Global Optimization based on Generalized Simulating Annealing: PyGenSA",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 1",
      "tags": [
        "Science",
        "Track"
      ],
      "abstract_long": [
        "Many problems in statistics, finance, biology, pharmacology, physics, mathematics,\r\neconomics, and chemistry involve the determination of the global minimum of\r\nmultidimensional functions. Python modules from SciPy and PyPI for the\r\nimplementation of different stochastic methods (i.e.: pyEvolve, SciPy optimize) have\r\nbeen developed and successfully used in the Python scientific community. Based on\r\nTsallis statistics, the PyGenSA python module has been developed for generalized\r\nsimulated annealing to process complicated non-linear objective functions with a\r\nlarge number of local minima. Testing PyGenSA, basinhopping (SciPy) and differential\r\nevolution (SciPy) on many standard test functions used in optimization problems\r\nshows that PyGenSA is more reliable in general and more efficient in particular for\r\nhigh dimension problems.\r\n"
      ],
      "user_votes": [
        {
          "2479": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2834": -1.00
        },
        {
          "2356": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "468": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        "z-deprecateded"
      ],
      "emails": "sylvain.gubian@pmi.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/efficient-global-optimization-based-on-generalized-simulating-annealing-pygensa",
      "admin_type": "",
      "companies": "Philip Morris International R&D"
    },
    "1104": {
      "abstract_short": "MicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments.\r\nMicroPython is a full Python compiler and runtime that runs on the bare-metal. You get an interactive prompt (the REPL) to execute commands immediately, along with the ability to run and import scripts from the built-in filesystem.",
      "sub_title": "",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 1104,
      "speakers": "Christine Spindler",
      "title": "MicroPython \u2013 Python for Microcontrollers",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 2",
      "tags": [
        "MicroPython",
        "Open-Source",
        "Internet of Things (IoT)"
      ],
      "abstract_long": [
        "MicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments.\r\nMicroPython is a full Python compiler and runtime that runs on the bare-metal. You get an interactive prompt (the REPL) to execute commands immediately, along with the ability to run and import scripts from the built-in filesystem.\r\nThe REPL has history, tab completion, auto-indent and paste mode for a great user experience.\r\nMicroPython is packed full of advanced features such as an interactive prompt, arbitrary precision integers, closures, list comprehension, generators, exception handling and more. Yet it is compact enough to fit and run within just 256k of code space and 16k of RAM.\r\nMicroPython aims to be as compatible with normal Python as possible to allow you to transfer code with ease from the desktop to a microcontroller or embedded system. If you know Python you already know MicroPython. On the other hand, the more you learn about MicroPython the better you become at Python.\r\n\r\nBesides the introduction of MicroPython I'll present a poster with all important information regarding MicroPython. I will present demos with the official MicroPython pyboards."
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "1481": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "2063": 7.00
        },
        {
          "3454": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3372": 3.00
        },
        {
          "3701": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "2069": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "316": 10.00
        },
        {
          "3402": 3.00
        },
        {
          "306": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "3369": 3.00
        },
        {
          "3486": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "3777": 3.00
        },
        {
          "2889": 3.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 3.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "93": 6.00
        },
        {
          "85": -1.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 9.00
        },
        {
          "3345": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3799": 7.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 7.00
        },
        {
          "3629": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Open Source",
        "Hardware"
      ],
      "emails": "christine@micropython.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/micropython-python-for-microcontrollers",
      "admin_type": "",
      "companies": ""
    },
    "1046": {
      "abstract_short": "Authentication is always a mess. Django offers nice tools, but they don't speak REST. Using a set of standard libraries and a few simple endpoints, comes modal-auth, a stand-alone authentication framework for integration with pure js front-ends that relies on JWT and a simple API to enable easy integration with other parties. The tool is delivered as a django project as well as a Docker Image.",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 13:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@ingmmo",
      "id": 1046,
      "speakers": "Marco Montanari",
      "title": "modal-auth, a stand-alone JWT based authenticator with social magic for SPAs",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 1",
      "tags": [
        "Authentication",
        "Mobile",
        "JavaScript Web Frameworks (AngularJS/ReactJS/...)",
        "Django"
      ],
      "abstract_long": [
        "Authentication is always a mess. Django offers nice tools, but they don't speak REST. Using a set of standard libraries and a few simple endpoints, comes modal-auth, a stand-alone authentication framework for integration with pure js front-ends that relies on JWT and a simple API to enable easy integration with other parties. \r\nThe system relies on Django Rest Framework, Djoser and Django-Rest-Framework-JWT to deliver the various parts as REST APIs. The system enables in addition the integration with Social Authentication both via static web redirects as well as token-based app authentication.\r\nThe tool is delivered as a Django project as well as a Docker Image. "
      ],
      "user_votes": [
        {
          "564": 3.00
        },
        {
          "2479": 10.00
        },
        {
          "2585": 3.00
        },
        {
          "1956": 10.00
        },
        {
          "1041": -1.00
        },
        {
          "85": -1.00
        },
        {
          "3407": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Security",
        "Web",
        "Web",
        "Application Frameworks"
      ],
      "emails": "marco.montanari@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/modal-auth-a-stand-alone-jwt-based-authenticator-with-social-magic-for-spas",
      "admin_type": "",
      "companies": "Modal Nodes"
    },
    "1146": {
      "abstract_short": "PyDMFT is a scientific library written in Python. It has been developed as a simple toolset for research on interacting electronic systems. It keeps data abstractions to the minimum thus making it easily compatible with NumPy arrays, easy to serialize and to store data. Beyond the scope of the library, PyDMFT offers a large collection of python scripts capable of reproducing results presented on peer reviewed journal articles. \r\n",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 13:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@najeraoscar1",
      "id": 1146,
      "speakers": "Oscar Najera",
      "title": "PyDMFT: A library and a reproducible science case study",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 2",
      "tags": [
        "Use Case",
        "Science Track",
        "Open-Source",
        "Physics"
      ],
      "abstract_long": [
        "PyDMFT is a scientific library written in Python with Cython extensions and use of Numba for speed. It has been developed as a simple toolset for research on interacting electronic systems. It keeps data abstractions to the minimum thus making it easily compatible with NumPy arrays, easy to serialize and store data. Beyond the scope of the library, PyDMFT offers a large collection of python scripts that by using the library are capable of reproducing results presented on peer reviewed journal articles. This collections of research recipes are executed, organized, and displayed in a web gallery using the package Sphinx-Gallery. This large archive allows to find the specific implementation of a research work, makes it easy to recall how to execute a script as all the runtime data and setup need to be available for the gallery to be generated. As the library evolves, new builds of the gallery make it clear if examples break due to change in the library.\r\n"
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "47": 7.00
        },
        {
          "251": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "650": 10.00
        },
        {
          "3566": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "380": -1.00
        },
        {
          "1041": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Open Source",
        "Sciences"
      ],
      "emails": "hello@oscarnajera.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pydmft-a-library-and-a-reproducible-science-case-study",
      "admin_type": "",
      "companies": "Laboratoire de Physique des Solides"
    },
    "847": {
      "abstract_short": "Poster about open source projects Python that are being developed at CERN, for example: [PyROOT ][1], [Invenio][2], [Indico][3] and more.\r\n\r\n  [1]: https://root.cern.ch/pyroot\r\n  [2]: http://invenio-software.org/\r\n  [3]: http://indico-software.org\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@SebaWitowski",
      "id": 847,
      "speakers": "Sebastian Witowski",
      "title": "Python at CERN",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 1",
      "tags": [
        "Science",
        "General",
        "Python general",
        "Open-Source",
        "Physics"
      ],
      "abstract_long": [
        "The Large Hadron Collider at CERN is producing 600 million collisions every second. Only 1 in a million collisions is interesting. It requires a fast programming language to analyze and filter this amount of data.\r\nIs Python such a language? No. Does it mean there is no place for Python at CERN? Quite the contrary. The ease of use makes Python a very popular programming language among scientists.\r\nThe interesting bits of data from the LHC have to be analyzed, shared and published. And with CERN\u2019s pursuit to create and use open source software, many interesting Python projects were born. \r\nFor big data processing, analysis and visualization, the ROOT framework [https://root.cern.ch] has been used for over 20 years. Nowadays, more scientists know Python, so the PyROOT [https://root.cern.ch/pyroot] was created \u2013 a Python extension module that combines Python\u2019s ease of use with the powerful capabilities of ROOT.\r\nTo manage all the scientific documents published at CERN, a digital library framework  Invenio [http://invenio-software.org] was created. It can be used to easily build a fully customized digital library, institutional repository or a multimedia archive and it powers websites like: https://zenodo.org, https://cds.cern.ch or https://analysispreservation.cern.ch.\r\nSharing knowledge \u2013 one of CERN\u2019s core values \u2013 can be achieved through various lectures, workshops and conferences. All these events can easily be organized with the help of Indico [http://indico-software.org]."
      ],
      "user_votes": [
        {
          "2356": 7.00
        },
        {
          "2209": 10.00
        },
        {
          "47": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "251": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "2834": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "1900": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "2488": 3.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "1924": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "2813": 3.00
        },
        {
          "300": 7.00
        },
        {
          "1132": 10.00
        },
        {
          "3486": 3.00
        },
        {
          "85": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 10.00
        },
        {
          "3318": 3.00
        },
        {
          "3298": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "3703": 2.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 9.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 9.00
        },
        {
          "3418": 2.00
        },
        {
          "171": 9.00
        },
        {
          "468": 6.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3799": 7.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        "z-deprecateded",
        "Python",
        "Open Source",
        "Sciences"
      ],
      "emails": "sebastian.witowski@cern.ch",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/python-at-cern",
      "admin_type": "",
      "companies": "CERN"
    },
    "1045": {
      "abstract_short": "Semantic relatedness, or similarity between documents plays an important role in many\r\ntextual applications. Text understanding starts with the challenge of finding machine-understandable representation that captures the semantics of texts.\r\nWe explore and benchmark this issue of document similarity by experimenting with various existing language models, examining their performance in the task of computing document similarity by ranking different News Summary Bots.",
      "sub_title": "Using Semantic Models to outrank Frequency and Topic Models in the task of Text Summarization.",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 13:30:00",
      "sub_community": "pydata",
      "duration": 180,
      "twitters": "@karan_saxena",
      "id": 1045,
      "speakers": "Karan Saxena",
      "title": "Ranking News Summary Bots by Semantic Document Relatedness",
      "have_tickets": [
        false
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 1",
      "tags": [
        "Natural Language Processing",
        "Big Data",
        "Beginners",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Semantic relatedness, or similarity between documents plays an important role in many\r\ntextual applications such as Information Retrieval, Document Classification, Question Answering, and more. Text understanding starts with the challenge of finding machine-understandable representation that captures the semantics of texts.\r\n\r\nMeasurement of semantic relatedness comprises two constituents:\r\n - An effective representation of documents\r\n - A similarity measure between documents in terms of their respective representations.\r\n\r\nIn particular, we chose three semantic models (**Word2Vec** and **Doc2Vec**, **Doc2VecC**) and one frequency-based model (**Tf-Idf**), for extracting and representing document features.\r\nWe explore and benchmark this issue of document similarity by experimenting with various existing language models, examining their performance in the task of computing document similarity by ranking different News Summary Bots.\r\nWe rank eight bots in all - \r\n-Luhn\r\n-Edmundson\r\n-Latent Semantic Analysis, LSA\r\n-LexRank\r\n-TextRank\r\n-SumBasic\r\n-KL-Sum\r\n\r\nWe use **CommonCrawl** news dataset documents as our input to the Summary Bots, and the all the eight different summaries are rated according to their semantic relatedness to the input document.\r\nFor semantic models, relatedness is calculated by converting each input document and all the summaries into vector embedding format and then taking the cosine similarity of each summary with the parent document."
      ],
      "user_votes": [
        {
          "3613": 10.00
        },
        {
          "251": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "300": 10.00
        },
        {
          "2209": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "2119": 9.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 6.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "- PyData Berlin 2017 [[Link][1]]\r\n- Google Summer of Code (GSoC) 2017 HoA at **Google, India**. [[Link][2]]\r\n- Google Summer of Code (GSoC) 2017 Panel Discussion at **Google, India**. [[Link][3]]\r\n- Basics of Android Rooting session by Google Developer Group (GDG) at **Intel, India**. [[Link][4]].\r\n- **Google Summer of Code (GSoC) for Python Software Foundation (PSF)** Blog [[Link][5]]. Worked on **European MaRs Analog Station (ERAS)** for **Italian Mars Society (IMS)**.\r\n- **Youtube Channel** [[Link][6]]\r\n- **Book** - Anomalous Behavior Detection In Large Scale Internet Flow Datasets. [ISBN 3330010878] **[[Amazon Link][7]]**\r\n- **Resume** [[Link][8]]\r\n\r\n  [1]: https://pydata.org/berlin2017/proposals/103/\r\n  [2]: https://www.youtube.com/watch?v=cyZjRPyIn8U\r\n  [3]: https://www.facebook.com/SaxenaKaran/videos/1329907687028732/\r\n  [4]: http://www.youtube.com/watch?v=lLDoD3QVWKw\r\n  [5]: https://karansaxena.blogspot.in/2016/08/gsoc-2016-submission.html\r\n  [6]: https://www.youtube.com/channel/UCWWKOoVBlgyF6Ad36MSksXw\r\n  [7]: https://www.amazon.com/Anomalous-Behaviour-Detection-Internet-Datasets/dp/3330010878\r\n  [8]: https://drive.google.com/open?id=0BxJk_tkOfo0HNlhXMlRlcjNJcjg",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Educational",
        "Data Science",
        "Data Science"
      ],
      "emails": "mrksaxena@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/ranking-news-summary-bots-by-semantic-document-relatedness",
      "admin_type": "",
      "companies": "Machine and Language Learning (MALL) Lab, IISc"
    },
    "843": {
      "abstract_short": "Solar optimization investment project programmed in Python and solved by the CPLEX and Gurobi solvers. The Spyder in Anaconda was used as the Python IDE to implement the model, which has many tuples and conditionals and a huge amount of data that were manipulated. The output displays were also programmed, which were very convenient for reading the model solutions. We were able to elaborate a deep analysis using optimization in Python without any cost in terms of software licenses.",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 843,
      "speakers": "Cleber Rocco",
      "title": "Solar Energy Optimization Project in Python",
      "have_tickets": [
        true
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 2",
      "tags": [
        "Algorithms",
        "Educational Track",
        "Science Track",
        "Case Study",
        "Analytics"
      ],
      "abstract_long": [
        "This study presents a solar optimization investment project programmed in Python and solved by the CPLEX and Gurobi. A public university in Brazil would like to analyze the possibility to build a solar farm to generate electricity to its facilities. A team of two students and an assistant professor of operations research, all without any background on Python programming, chose this language to carry out the project due to its simplicity, the fact of being open-source and the possibility to use powerful optimization solvers free of charge for academics. We have used Spyder as the Python IDE in Anaconda to implement the model composed an objective function, 10 families of constraints and 6 families of variables. One model feature is the use of many tuples and conditionals and a huge amount of data that were manipulated, since the planning horizon was 25 years, with the options of 10 different solar panels and 6 inverter technologies to choose. The output displays were also programmed, which were very convenient for reading the model solutions. From this project, we were able to deliver to the university a deep analysis using optimization tools without any cost in terms of software licenses, like it could have happened if we had chosen GAMS or AMPL. The goal of the presentation is to discuss the model implemented in Python, with several codes of data manipulation. To understand the study is required a basic background on mathematical modeling in Python and optimization."
      ],
      "user_votes": [
        {
          "468": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "2183": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 10.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "3384": 10.00
        }
      ],
      "abstract_extra": "In the poster, we will also discuss the difference between mathematical model implementation using Gurobipy library and Pyomo syntax.",
      "tag_categories": [
        "Data Science",
        ">>> Suggested Track",
        ">>> Suggested Track",
        "Case Study",
        "Data Science"
      ],
      "emails": "cleber.rocco@fca.unicamp.br",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/solar-energy-optimization-project-in-python",
      "admin_type": "",
      "companies": "University of Campinas  - UNICAMP"
    },
    "891": {
      "abstract_short": "My poster will guide you through the process of building your first simple Twitter bot by helping you understand Twitter's APIs and \"botiquette\", available Python libraries and possible hosting solutions, as well as suggesting ideas for potential own bots and introducing you to existing Twitter bots for inspiration.",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 17:00:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@kkvie",
      "id": 891,
      "speakers": "Kerstin Kollmann",
      "title": "Twitter Bot Basics with Python",
      "have_tickets": [
        false
      ],
      "type": "Poster session (180 mins)",
      "status": "accepted",
      "track_title": "Poster Session 2",
      "tags": [
        "DIY",
        "Beginners",
        "APIs",
        "The Answer to Life the Universe and Everything Else"
      ],
      "abstract_long": [
        "Many of us use Twitter on a daily basis, but mostly as users or consumers who communicate via our personal (or organisation) accounts in quasi \"official capacity\", using our own voice... when we're not busy keeping up with the news, friends, the industry \u2013 and the occasional Twitter bot delivering content into our timelines.\r\n\r\nProgramming Twitter bots can actually be quite fun and is not all that complicated once you know some Twitter API basics and botiquette, and which Python libraries you can use to talk to Twitter. Coming up with a neat, unique idea for a bot might actually turn out to be the greater challenge than understanding how to make it work!\r\n\r\nWith the help of my poster and using a bot I programmed myself as an example, I will show you how you, too, can build your first simple Twitter bot.\r\n\r\nI will: walk you through the process of setting up a Twitter app, tell you what you need to know about the platform's APIs (plural, yes!), let you know what to avoid if you do not want your bot to get banned, give tips on how to release your bot into the wild, and demonstrate how to use Python to actually get your bot to do stuff! Additionally, I will provide ideas for potential bots (as well as suggestions for how they can be realised with Python) and point out existing Twitter bots for inspiration."
      ],
      "user_votes": [
        {
          "3543": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "251": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3328": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3318": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "93": 3.00
        },
        {
          "2834": 6.00
        },
        {
          "530": 2.00
        },
        {
          "3603": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "3382": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3777": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Everything Else",
        "Educational",
        "Web",
        "Everything Else"
      ],
      "emails": "python@kerstinkollmann.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/twitter-bot-basics-with-python",
      "admin_type": "",
      "companies": ""
    }
  },
  "helpdesk": {
    "1017": {
      "abstract_short": "We\u2019ll try to help everybody, especially new comers in Python, to understand better the asynchronous pattern, and AsyncIO in general.\r\n\r\nDon\u2019t hesitate to ask us any question, especially if you think it\u2019s a stupid question: No stupid questions, only stupid answers.",
      "sub_title": "",
      "timerange": "2017-07-10 10:30:00, 2017-07-10 12:00:00, 2017-07-10 14:00:00, 2017-07-10 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@GMLudo",
      "id": 1017,
      "speakers": "Ludovic Gasc",
      "title": "AsyncIO support for beginners",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Python 3",
        "Beginners",
        "Architecture",
        "HTTP",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Example of questions we\u2019ll try to answer, it\u2019s a compilation of questions we\u2019ll already received:\r\n\r\n - Where is the 101 of AsyncIO ?\r\n - When I can use AsyncIO ?\r\n - Why to add async/await keywords ? It\u2019s only aliases of @asyncio.coroutine/yield from ?\r\n - I don\u2019t understand the difference between a task and a coroutine, could you explain me ?\r\n - When I need to add await before a call function ?\r\n - How to spot quickly the code can be asynchronous with synchronous code ?\r\n - How I can use synchronous libraries in my asynchronous code ?\r\n - How to architecture my source code with AsyncIO ?\r\n - I don\u2019t understand the internals of AsyncIO with event loop and how yield from works internally. (Spoiler alert: To start to code with Python itself, did you understand before the CPython\u2019s internals ?)\r\n - Why another asynchronous network framework ? Need already covered by Twisted/Tornado/Gevent/\u2026\r\n - Why some libraries need to be reimplemented, like aiohttp or aiopg ?\r\n - Now that Django channels exist, AsyncIO is useless, isn\u2019t it ?\r\n - What\u2019s the difference between AsyncIO, curio and Trio ?\r\n\r\n"
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "251": 7.00
        },
        {
          "468": 10.00
        },
        {
          "3310": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3372": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "3428": 10.00
        },
        {
          "245": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "2813": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "3402": 10.00
        },
        {
          "2259": 3.00
        },
        {
          "3369": 7.00
        },
        {
          "2365": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "2493": 3.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "545": -1.00
        },
        {
          "3314": 2.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "171": 9.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Educational",
        "Programming",
        "Web",
        "Programming"
      ],
      "emails": "gmludo@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/asyncio-support-for-beginners",
      "admin_type": "",
      "companies": "ALLOcloud"
    },
    "1171": {
      "abstract_short": "I am the author of the Flask Mega-Tutorial, the most popular Flask tutorial after the one in the Flask official documentation. I also wrote the O\u2019Reilly Flask Web Development book, and a number of Flask extensions. I would be happy to answer questions about Flask, help you debug your Flask project, give you advice on any topic related to web development with or without Flask, REST APIs, microservices, WebSocket, Async, etc.\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 12:00:00, 2017-07-13 14:00:00, 2017-07-13 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@miguelgrinberg",
      "id": 1171,
      "speakers": "Miguel Grinberg",
      "title": "Flask and Web Development Help Desk",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "APIs"
      ],
      "abstract_long": [
        "I am the author of the Flask Mega-Tutorial, the most popular Flask tutorial after the one in the Flask official documentation. I also wrote the O\u2019Reilly Flask Web Development book, and a number of Flask extensions. I would be happy to answer questions about Flask, help you debug your Flask project, give you advice on any topic related to web development with or without Flask, REST APIs, microservices, WebSocket, Async, etc.\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Web"
      ],
      "emails": "miguel.grinberg@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/flask-help-desk",
      "admin_type": "",
      "companies": "Rackspace"
    },
    "1154": {
      "abstract_short": "You've heard about MicroPython, but are unsure about how to start with\r\nit? Or maybe you are already building your own project, but got stuck\r\nwith a problem? Come talk to me, and maybe we will be able to find a\r\nsolution. Some example questions:\r\n\r\n* What hardware is supported, how to flash MicroPython to a particular board,\r\n  and what features are available on each of them?\r\n* Which parts should I choose for a particular project that I have in mind?\r\n* How do I start porting MicroPython to a particular platform?\r\n* How do I find the libraries and drivers for particular hardware? How would\r\n  I go about writing my own?\r\n* I built this thing, but it doesn't work right, what may be wrong?",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 12:00:00, 2017-07-11 14:00:00, 2017-07-11 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@",
      "id": 1154,
      "speakers": "Radomir Dopieralski",
      "title": "MicroPython help desk",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Wearables",
        "Gadgets",
        "MicroPython",
        "Internet of Things (IoT)",
        "Hardware/IoT Track"
      ],
      "abstract_long": [
        "You've heard about MicroPython, but are unsure about how to start with\r\nit? Or maybe you are already building your own project, but got stuck\r\nwith a problem? Come talk to me, and maybe we will be able to find a\r\nsolution. Some example questions:\r\n\r\n* What hardware is supported, how to flash MicroPython to a particular board,\r\n  and what features are available on each of them?\r\n* Which parts should I choose for a particular project that I have in mind?\r\n* How do I start porting MicroPython to a particular platform?\r\n* How do I find the libraries and drivers for particular hardware? How would\r\n  I go about writing my own?\r\n* I built this thing, but it doesn't work right, what may be wrong?"
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Hardware",
        "Hardware",
        "Python",
        "Hardware",
        ">>> Suggested Track"
      ],
      "emails": "ep2016@sheep.art.pl",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/micropython-help-desk",
      "admin_type": "",
      "companies": ""
    },
    "1112": {
      "abstract_short": "Come and chat with us about OpenStack! We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project.\r\nYour helpers will be OpenStack developers with years of experience using and developing on a number of projects.",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 12:00:00, 2017-07-12 14:00:00, 2017-07-12 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@d0ugal",
      "id": 1112,
      "speakers": "Dougal Matthews",
      "title": "OpenStack Help Desk",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Open Stack",
        "Best Practice"
      ],
      "abstract_long": [
        "Come and chat with us about OpenStack! We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project.\r\nYour helpers will be OpenStack developers with years of experience using and developing on a number of projects."
      ],
      "user_votes": [
        {
          "3256": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "3543": 3.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "3369": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "300": 7.00
        },
        {
          "93": -1.00
        },
        {
          "1041": 6.00
        },
        {
          "767": 6.00
        },
        {
          "2169": 9.00
        },
        {
          "3703": -1.00
        },
        {
          "380": -1.00
        },
        {
          "562": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "DevOps",
        "Best Practice and Use Cases"
      ],
      "emails": "dougal@dougalmatthews.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/open-stack-help-desk-2017",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "1165": {
      "abstract_short": "So, you want to make the most out of PyPy but you don't know where to start? This is the right place! :)\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 12:00:00, 2017-07-13 14:00:00, 2017-07-13 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@antocuni",
      "id": 1165,
      "speakers": "Antonio Cuni",
      "title": "PyPy help desk",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "PyPy"
      ],
      "abstract_long": [
        "So, you want to make the most out of PyPy but you don't know where to start? This is the right place! :)\r\nExamples of questions:\r\n\r\n- how to use and install PyPy, either system wide or by using virtualenv\r\n\r\n- how to optimize your programs for the PyPy JIT\r\n\r\n- how to use vmprof to profile your programs and look at the code generated by the JIT\r\n\r\n- how to install 3rd party packages and compatibility issues\r\n\r\n- how to use CFFI to interface with C code effectively\r\n"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Python"
      ],
      "emails": "anto.cuni@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pypy-help-desk",
      "admin_type": "",
      "companies": "My own"
    },
    "1169": {
      "abstract_short": "If you have any questions about SaltStack, are interested in deploying it or just wish to know more about it, this is your stop! We can answer your questions about:\r\n\r\n- Salt's architecture\r\n- States\r\n- Pillar\r\n- Beacons\r\n- Reactor\r\n- Salt's API\r\n- ... and more.",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 12:00:00, 2017-07-14 14:00:00, 2017-07-14 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@godlike64",
      "id": 1169,
      "speakers": "Juan Manuel Santos",
      "title": "SaltStack help desk",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Saltstack"
      ],
      "abstract_long": [
        "If you have any questions about SaltStack, are interested in deploying it or just wish to know more about it, this is your stop! We can answer your questions about:\r\n\r\n- Salt's architecture\r\n- States\r\n- Pillar\r\n- Beacons\r\n- Reactor\r\n- Salt's API\r\n- ... and more."
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps"
      ],
      "emails": "godlike64@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/saltstack-help-desk",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "786": {
      "abstract_short": "So you want to use Jupyter but you don't know where to start....or you started but now you feel lost.\r\n\r\nWell, we are here to help!\r\nbeginners are especially welcome and we will do our best to answer all your questions!",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 12:00:00, 2017-07-12 14:00:00, 2017-07-12 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@christianbarra",
      "id": 786,
      "speakers": "Christian Barra",
      "title": "So you want to use Jupyter.....",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Beginners",
        "Notebook",
        "Jupyter/iPython"
      ],
      "abstract_long": [
        "So you want to use Jupyter but you don't know where to start....or you started but now you feel lost.\r\n\r\nWell, we are here to help!\r\nbeginners are especially welcome and we will do our best to answer all your questions!\r\n\r\nExample of questions we\u2019ll try to answer:\r\n\r\n - How can I install Jupyter Notebook?\r\n - How can I install JupyterLab?\r\n - How can I use different version of Python with Jupyter?\r\n - Is there a way to share notebooks?\r\n - Can I use Jupyter remotely?\r\n - What can I do with Jupyter?\r\n - Plotting libraries for Jupyter\r\n - ....\r\n\r\nRemember to bring your computer!\r\n"
      ],
      "user_votes": [
        {
          "2356": 7.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 10.00
        },
        {
          "3031": 3.00
        },
        {
          "1490": 7.00
        },
        {
          "3547": 10.00
        },
        {
          "3392": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3369": 7.00
        },
        {
          "3486": 3.00
        },
        {
          "3469": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 10.00
        },
        {
          "2493": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2660": 6.00
        },
        {
          "3382": 9.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 9.00
        },
        {
          "562": 2.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "26+2 years old, curious, adventurer and wanna be skeptical statistician. \r\nI am a @europythons board member, @europython organizer and proud member of the Python Italia community. I love teaching and spread Python around the world through project like Microbit:Polska or PyBootCamp.\r\nI am Founder&Ceo of Cassiny.io , where we provide **Notebook As A Super Service**.\r\n\r\n",
      "tag_categories": [
        "Educational",
        "Data Science",
        "Data Science"
      ],
      "emails": "christiancalogero.barra@studenti.unipd.it",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/jupyter-helpdesk",
      "admin_type": "",
      "companies": "cassiny.io"
    },
    "848": {
      "abstract_short": "Software Carpentry is a voluntee based project that has been teaching a significant part of the next generation of researchers and data scientists the computing skills they need to get more done in less time and with less pain.\r\n\r\nThe goal of this help desk is to assist any beginner with problems they encountered when using Bash, Git and Python. EuroPython attendees are invited to read the online Software Carpentry lessons and visit the help desk with questions.",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 12:00:00, 2017-07-14 14:00:00, 2017-07-14 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@https://twitter.com/rgaiacs, @matkuzak",
      "id": 848,
      "speakers": "Raniere Silva, Mateusz Kuzak",
      "title": "Software Carpentry Help Desk - Start using Python and Git",
      "have_tickets": [
        true,
        false
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 2",
      "tags": [
        "Education",
        "Beginners",
        "Educational Track",
        "Science Track",
        "Jupyter/iPython"
      ],
      "abstract_long": [
        "Software Carpentry is a voluntee based project that, since 1998, has been teaching researchers in science, engineering, medicine, and related disciplines the computing skills they need to get more done in less time and with less pain. With more that 100 workshops worldwide, Software Carpentry is training a significant part of the next generation of researchers and data scientists.\r\n\r\nNormally, Software Carpentry workshop is a 2-day event that covers Bash, Git and Python. Instructors will teach how to navigate among files and directories using the command line, how to manipulate files using the command line, how to use Git to version controls your project, how to restore a old version of a file if you are using Git, how to create Python variables, how to create Python functions, how to create plots with matplotlib, ... The material used in the workshops is available online under a open source license.\r\n\r\nThe feedback received from workshop hosts, workshop attendees and readers of the online lessons has been very positive. Learners at the workshop enjoy the hands on approach that Software Carpentry uses during the workshop.\r\n\r\nThe goal of this help desk is to assist any beginner to solve their problem and be more confident when using Bash, Git and Python. EuroPython attendees are invited to read the online Software Carpentry lessons and visit the help desk to solve any questions they have."
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "1878": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "1900": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3722": 10.00
        },
        {
          "2069": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "3566": 10.00
        },
        {
          "3084": -1.00
        },
        {
          "300": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Educational",
        "Educational",
        ">>> Suggested Track",
        ">>> Suggested Track",
        "Data Science"
      ],
      "emails": "raniere@rgaiacs.com, mateusz.kuzak@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/software-carpentry-help-desk-start-using-python-and-git",
      "admin_type": "",
      "companies": "Netherlands eScience Center, Software Sustainability Institute"
    },
    "1117": {
      "abstract_short": "We will answer your questions about pytest, tox and devpi. These  tools and their plugins  can help you  you with testing and releasing your packages either individually or when used together. \r\n\r\nAny questions regarding getting started or  concrete problems are welcome. We might not be able to solve all of them, but we will try our best to get you started and point you in the right direction. ",
      "sub_title": "Make testing fun again",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 12:00:00, 2017-07-11 14:00:00, 2017-07-11 15:30:00",
      "sub_community": "",
      "duration": 180,
      "twitters": "@obestwalter",
      "id": 1117,
      "speakers": "Oliver Bestwalter",
      "title": "The pytest/tox/devpi helpdesk",
      "have_tickets": [
        true
      ],
      "type": "Help desk (180 mins)",
      "status": "accepted",
      "track_title": "Help Desk 1",
      "tags": [
        "Best Practice",
        "Developing with Python",
        "Open-Source",
        "Testing",
        "Learning"
      ],
      "abstract_long": [
        "We will answer your questions about [pytest][1], [tox][2] and [devpi][3]. These  tools and their plugins  can help you  you with testing and releasing your packages either individually or when used together. \r\n\r\nAny questions regarding getting started or  concrete problems are welcome. We might not be able to solve all of them, but we will try our best to get you started and point you in the right direction. \r\n\r\nPotential topics and questions are:\r\n\r\n - I would like to test functionality X, but don't know how to go about this, can you help me?\r\n\r\n - pytest/tox/devpi does not work as I expect. Is this a bug or am I doing it wrong?\r\n\r\n - My tox.ini is pretty verbose - can I simplify it somehow?\r\n\r\n - I use Unittest for my tests, how can pytest make things better for me?\r\n\r\n - My test suite is turning into an unmaintainable mess, can you give me some tips on how to avoid that?\r\n\r\n - I have a weird bug that I can only reproduce on my laptop, can you have a look?\r\n\r\n - I can't test things properly locally because our continuous integration system is doing a lot of extra work, is there a way to do this differently?\r\n\r\n  [1]: https://docs.pytest.org/en/latest/\r\n  [2]: https://tox.readthedocs.io/en/latest/\r\n  [3]: http://doc.devpi.net/latest/\r\n"
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "152": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "419": 3.00
        },
        {
          "782": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "306": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3360": 10.00
        },
        {
          "2889": 10.00
        },
        {
          "300": 3.00
        },
        {
          "468": 10.00
        },
        {
          "380": 6.00
        },
        {
          "3376": 9.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "171": 2.00
        },
        {
          "3418": 2.00
        },
        {
          "2286": 2.00
        },
        {
          "105": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Open Source",
        "Testing",
        "Data Science"
      ],
      "emails": "oliver.bestwalter@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/the-pytesttoxdevpi-helpdesk",
      "admin_type": "",
      "companies": "Avira Operations"
    }
  },
  "interactive": {
    "963": {
      "abstract_short": " This is an excellent occasion to try your skills in building and programming small electronic devices. We will program some ESP8266-based development boards, make them blink LEDs, move servos, display pictures, read sensors, react to buttons, and, more importantly, talk over HTTP and MQTT with servers.",
      "sub_title": "",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@",
      "id": 963,
      "speakers": "Radomir Dopieralski",
      "title": "MicroPython Workshop",
      "have_tickets": [
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Wearables",
        "Gadgets",
        "MicroPython",
        "Internet of Things (IoT)",
        "Hardware/IoT Track"
      ],
      "abstract_long": [
        "We will program some ESP8266-based development boards, make them blink LEDs, move servos, display pictures, read sensors, react to buttons, and, more importantly, talk over HTTP and MQTT with servers. This is an excellent occasion to try your skills in building and programming small electronic devices. No experience with electronics is required, everything you need to know will be covered during the workshop.\r\nYou will need to bring a laptop with a USB port. If it runs Windows, make sure to have some terminal emulator installed, such as PuTTy, CoolTerm or  even HyperTerm. On Linux and OSX we will use Screen, so you don't need anything special.\r\nI only have about 20 kits for this, so the number of people that can take part is limited."
      ],
      "user_votes": [
        {
          "74": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "3547": 3.00
        },
        {
          "1900": 10.00
        },
        {
          "245": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "2069": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "3486": 10.00
        },
        {
          "3084": 3.00
        },
        {
          "2259": 7.00
        },
        {
          "71": 10.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3298": 7.00
        },
        {
          "85": -1.00
        },
        {
          "2356": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 9.00
        },
        {
          "3345": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "3799": 3.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 6.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 7.00
        },
        {
          "3629": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Hardware",
        "Hardware",
        "Python",
        "Hardware",
        ">>> Suggested Track"
      ],
      "emails": "ep2016@sheep.art.pl",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/micropython-workshop",
      "admin_type": "",
      "companies": ""
    },
    "1066": {
      "abstract_short": "Ridiculous but fun programming game in 2 parts:\r\n\r\n - Python Bee: Solo programming, spelling your program out loud one character at a time, without being able to look at the code you're writing.\r\n\r\n - With a Twist: Group programming where you must enter alternate characters of the code but are not allowed to communicate with each other by any other means.\r\n",
      "sub_title": "",
      "timerange": "2017-07-14 14:00:00, 2017-07-14 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@",
      "id": 1066,
      "speakers": "Emma Gordon",
      "title": "Python Bee",
      "have_tickets": [
        true
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "python"
      ],
      "abstract_long": [
        "Thought up in 2009 by a group of MIT students who entered the Python bee into a competition for \u201cbad ideas\u201d, a Python bee is like a spelling bee for programmers. \r\n\r\nInstead of spelling words, participants are given functions to write and must spell them out loud - one character at a time, without looking at the code that they're writing! Players must spell valid Python and every character counts, including symbols and whitespace. \r\n\r\nAnd the twist for the second round (credit for this one goes to dropboxblogs):\r\n \r\nYou're now allowed to look at the code, but... you must now team up with other programmers, entering alternate characters without being allowed to communicate via any other means.\r\n\r\nIn order for everyone to be able to have a go, we'll split up into small groups to play - for those that want to be competitive, we'll use a scoring system so that we can still declare an overall champion. You're very welcome to come along just to have fun though!\r\n\r\nTL;DR - a fun hour of slightly ridiculous programming games :)"
      ],
      "user_votes": [
        {
          "251": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3592": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "650": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "562": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3477": 3.00
        },
        {
          "3770": -1.00
        },
        {
          "468": 9.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python"
      ],
      "emails": "emma.gordon@cantab.net",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/python-bee",
      "admin_type": "",
      "companies": "Cambridge Medical Robotics"
    },
    "1016": {
      "abstract_short": "This interactive game teaches is the follow-up of the [Router Game by Roberto Polli][1], and teaches various TCP / IP protocols using [paper and pen][2].\r\n\r\nParticipants are divided in teams, simulating exchanges through various protocols (DNS, TCP, IP)\r\n\r\nThe team which is faster in exchanging messages wins.\r\n\r\n  [1]: https://ep2016.europython.eu/conference/talks/the-router-game\r\n  [2]: https://twitter.com/europython/status/755045388340559872\r\n",
      "sub_title": "Learn Networking with paper and pencil (Giovanni Mancuso + Roberto Polli=",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@ioggstream, @",
      "id": 1016,
      "speakers": "Roberto Polli, Danilo Abbasciano",
      "title": "TCP / IP Animated",
      "have_tickets": [
        true,
        false
      ],
      "type": "Interactive (60 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Internet of Things"
      ],
      "abstract_long": [
        "This interactive game teaches is the follow-up of  [the Router Game by Roberto Polli][1], and teaches various TCP / IP protocols using [paper and pen][2].\r\n\r\nParticipants are divided in teams, simulating exchanges through various protocols (DNS, TCP, IP)\r\n\r\nEvery player has an L3 role: a PC or mobile phone, a Router, a Load Balancer ... and must communicate with the others following the associate specification (eg. a TCP client may buffer frames, a Load Balancer re-encapsulates IP datagram, ... )\r\n\r\nThe team which is faster in exhanging messages wins.\r\n\r\n  [1]: https://ep2016.europython.eu/conference/talks/the-router-game\r\n  [2]: https://twitter.com/europython/status/755045388340559872\r\n"
      ],
      "user_votes": [
        {
          "3310": 3.00
        },
        {
          "47": 3.00
        },
        {
          "2209": 3.00
        },
        {
          "251": 7.00
        },
        {
          "3311": 3.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "1481": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "3084": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "3469": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 3.00
        },
        {
          "300": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "1897": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3345": 2.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 10.00
        }
      ],
      "abstract_extra": "With Roberto Polli",
      "tag_categories": [
        "DevOps"
      ],
      "emails": "robipolli@gmail.com, danilo.abbasciano@par-tec.it",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/tcp-ip-animated",
      "admin_type": "",
      "companies": ", Par-Tec Spa"
    }
  },
  "talk": {
    "1071": {
      "abstract_short": "As a developer at the Ministry of Truth you\u2019ve been tasked with writing a context manager for use in ideologically sensitive situations that will temporarily make 2 + 2 equal 5, using only the Python Standard Libraries.\r\n\r\nIn this talk I\u2019ll walk through how to accomplish this task while providing a crash course in CPython internals. I\u2019ll discuss how python objects are stored in memory and how scripts are transformed into AST, compiled into code objects, and executed by the CPython VM.",
      "sub_title": "Learn ctypes and CPython internals while hacking int.__add__",
      "timerange": "2017-07-10 11:20:00, 2017-07-10 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@FrankieDintino",
      "id": 1071,
      "speakers": "Frankie Dintino",
      "title": "2 + 2 = 5: Monkey-patching CPython with ctypes to conform to Party doctrine",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Developing with Python",
        "Python general",
        "Fun and Humor",
        "C-Languages",
        "CPython"
      ],
      "abstract_long": [
        "A few weeks into your tenure as a software engineer at the Ministry of Truth you are assigned your first real feature request: write a context manager that can make \u201c2 + 2\u201d equal 5 at runtime. Your solution should be written only in Python (for maximum portability). Absurd? Perhaps, but you know better than to ask questions. You are no thought-criminal.\r\n\r\nIn this talk I walk through the steps I took to modify the value of two plus two in CPython at runtime\u2014using only Python and the ctypes module. What began for me as a silly and frivolous side project became an education in how the python data model works behind the scenes and how CPython compiles, optimizes, and executes python code.\r\n\r\nThe goal of this talk is to provide an introduction to CPython internals while walking through the steps needed to monkeypatch integer addition to make \u201c2 + 2\u201d equal 5. The audience should come away with a better understanding of how python objects and types are represented in memory, how references are counted, and how python scripts are transformed into abstract syntax trees, compiled into code objects, and then executed by the CPython virtual stack machine. And because I\u2019ve limited myself to using ctypes, these topics can be explored without familiarity with C as a prerequisite."
      ],
      "user_votes": [
        {
          "683": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "394": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "1214": 7.00
        },
        {
          "245": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "3350": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "300": 3.00
        },
        {
          "3658": 10.00
        },
        {
          "509": 3.00
        },
        {
          "3703": -1.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3777": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 6.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Python",
        "Everything Else",
        "Other Programming Languages",
        "Python"
      ],
      "emails": "fdintino@theatlantic.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/2-2-5-monkey-patching-cpython-with-ctypes-to-conform-to-party-doctrine",
      "admin_type": "",
      "companies": "The Atlantic"
    },
    "1026": {
      "abstract_short": "There is a bewildering array of techniques to make Python go faster. This talk explains the options you have to make your Python code run 100x faster or better!\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 11:20:00, 2017-07-13 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 1026,
      "speakers": "Paul Ross",
      "title": "A faster Python? You Have These Choices",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Cython",
        "Performance",
        "Developing with Python",
        "CPython"
      ],
      "abstract_long": [
        "Python was never intended as a fast language but many modern uses of Python require high performance computing, particularly in data science. This talk explores your options for squeezing maximum performance out of critical Python code.\r\n\r\nThis talk provides a succinct summary of the options you have: C extensions, Cython, CFFI, PyPy and many others. It also shows the trade-offs between execution performance and the cost of writing and maintaining code with each choice. Each option is also explored for maturity and ease of use for Python programmers. A real world programming problem is coded and benchmarked using each of these techniques. All the code used in the talk is available on GitHub.\r\n\r\nAt the end of this talk you will be better place to decide on which technique to use to make your code run 100x faster."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "1878": 10.00
        },
        {
          "3364": 7.00
        },
        {
          "683": 3.00
        },
        {
          "804": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "468": 7.00
        },
        {
          "251": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "394": 7.00
        },
        {
          "2063": 7.00
        },
        {
          "2834": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "1022": 7.00
        },
        {
          "564": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3418": 7.00
        },
        {
          "722": 3.00
        },
        {
          "3605": 7.00
        },
        {
          "1449": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2479": 7.00
        },
        {
          "300": 3.00
        },
        {
          "306": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3699": 10.00
        },
        {
          "3492": 3.00
        },
        {
          "1132": 10.00
        },
        {
          "1956": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3469": 7.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3816": 10.00
        },
        {
          "3814": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2127": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "3506": 6.00
        },
        {
          "545": 6.00
        },
        {
          "1041": 2.00
        },
        {
          "3339": 6.00
        },
        {
          "930": 9.00
        },
        {
          "380": 2.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming",
        ">>> Suggested Track",
        "Python"
      ],
      "emails": "apaulross@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/a-faster-python-you-have-these-choices",
      "admin_type": "",
      "companies": ""
    },
    "1061": {
      "abstract_short": "A lot of Git users operate it just by remembering a bunch of commands and repeating them in a correct order.  In this talk, I will dig into the internals of Git with Python, that will help you better understand how Git works.",
      "sub_title": "",
      "timerange": "2017-07-13 11:20:00, 2017-07-13 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 1061,
      "speakers": "Andrey Syschikov",
      "title": "A journey into Git internals with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Git"
      ],
      "abstract_long": [
        "Despite 12 years of history and wide popularity the workings of Git still remain largely a mystery for many.  A lot of Git users operate it just by remembering a bunch of commands and repeating them in a correct order.  I was one of them until I decided to dig deeper into how Git actually works and suddenly I understood that internally Git operates by rather simple principles and after you figure them out suddenly all those commands start to make sense. To look into the Git's internal structure you need a programming language to crunch the data and Python fit perfectly for this task.\r\n\r\nIn this talk, I will dig into the internals of Git with Python, that will help you better understand how Git works."
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "195": 10.00
        },
        {
          "74": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "1481": 10.00
        },
        {
          "47": 7.00
        },
        {
          "394": 3.00
        },
        {
          "3370": 7.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "2119": 10.00
        },
        {
          "3031": 3.00
        },
        {
          "3278": 7.00
        },
        {
          "685": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "3328": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "3605": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3573": 3.00
        },
        {
          "1924": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "1132": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "306": 3.00
        },
        {
          "2057": 3.00
        },
        {
          "3507": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "85": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "3695": 10.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "3318": 3.00
        },
        {
          "2875": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "310": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 2.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps"
      ],
      "emails": "asyschikov@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/a-journey-into-git-internals-with-python",
      "admin_type": "",
      "companies": "TravelBird B.V. "
    },
    "886": {
      "abstract_short": "In this talk we will present our Python + ROS based robotic platform aimed to support a natural and effective humans-robot interaction. We will describe the platform hardware and software configuration and the use we made of available high level Python libraries for spoken language processing, sentiment analysis, vision and Artificial Intelligence applications interfacing.  We will present the latest status of the platform together with a NAO based demo.",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@",
      "id": 886,
      "speakers": "Enrico Carbognani",
      "title": "A robotic platform for natural and effective human-robot interaction",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Natural Language Processing",
        "Robotics",
        "Machine-Learning"
      ],
      "abstract_long": [
        "This  talk deals  with  the usage  of  artificial  intelligent  techniques  in  humanoid  robotics. The focus is on human\u2013robot interaction with the goal of building a robotic platform which embodiments are able to interact in natural and effective way with humans through speech, gestures, and facial expressions. The system is fully implemented in Python and based on the Robotic Operating System (ROS). The talk will describe the hardware and software configuration of our currently NAO based humanoid platform.  The strategy has been to use available high level Python libraries for spoken language processing, sentiment analysis,  vision,  interfacing with Artificial Intelligence applications  in   order   to   provide current edge technologies performances.   The overall system architecture is based on finite state machines nodes interacting via the ROS communication layer. \r\nThe main fields of applications that the platform is targeting are:\r\n   - Entertainment\r\n   - Education\r\n   - Field robotics\r\n   - Home and companion robotics\r\n   - Hospitality\r\n   - Robot Assisted Therapy (RAT)\r\nWe will present the latest status of the platform together with a NAO based demo.\r\n"
      ],
      "user_votes": [
        {
          "2223": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "1900": 3.00
        },
        {
          "245": 3.00
        },
        {
          "3722": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "1884": 7.00
        },
        {
          "316": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "2889": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "468": 2.00
        },
        {
          "171": 6.00
        },
        {
          "3345": 9.00
        },
        {
          "2286": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "3629": 10.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Hardware",
        "Data Science"
      ],
      "emails": "enrico.carbognani@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/a-robotic-platform-for-natural-and-effective-human-robot-interaction",
      "admin_type": "",
      "companies": ""
    },
    "753": {
      "abstract_short": "Unreal Engine is the game industry leading platform for developing AAA Videogames. Now you can script your gameplay logic, automate your development pipelines or test your productions with Python too. The UnrealEnginePython plugin aims at covering the whole feature set of  Unreal Engine 4 and extending it with the huge modules library available in the Python world. The talk will show how and why the project was started and who is already using it.",
      "sub_title": "",
      "timerange": "2017-07-10 15:45:00, 2017-07-10 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@unbit",
      "id": 753,
      "speakers": "Roberto De Ioris",
      "title": "AAA Games with Unreal Engine 4 and Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Developing with Python",
        "Game-Development"
      ],
      "abstract_long": [
        "Unreal Engine is the game industry leading platform for developing AAA Videogames. Now you can script your gameplay logic, automate your development pipelines or test your productions with Python too. The UnrealEnginePython plugin aims at covering the whole feature set of  Unreal Engine 4 and extending it with the huge modules library available in the Python world.\r\n\r\nThe talk will briefly introduce the Unreal Engine platform and its capabilities as well as how it can be programmed without the python plugin (Blueprints and C++).\r\n\r\nThe biggest part of the talk will focus on how the Unreal Engine 4 patterns are mapped to the python plugin, what is already working and what you can expect from future developments.\r\n\r\nNo prior knowledge of game/graphics programming is required,  and if you are in the movie or cartoon industry you can get interesting infos too"
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "195": 7.00
        },
        {
          "468": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3372": 10.00
        },
        {
          "3547": 3.00
        },
        {
          "3538": 10.00
        },
        {
          "1900": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3350": 10.00
        },
        {
          "3486": 7.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "545": -1.00
        },
        {
          "530": 2.00
        },
        {
          "767": 6.00
        },
        {
          "489": 9.00
        },
        {
          "3818": 6.00
        },
        {
          "2660": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "3076": 7.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Everything Else"
      ],
      "emails": "roberto@20tab.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/aaa-games-with-unreal-engine-4-and-python",
      "admin_type": "",
      "companies": "20tab, Unbit, Aiv, Holey"
    },
    "779": {
      "abstract_short": "This talk shows what Python Abstract Base Classes are and how they can be used to categorise objects and implement a virtual inheritance tree. The `collections` module and the concept of metaclass are also discussed. The talk is divided in three different \"levels of difficulty\".\r\n\r\nLevel 1: EAFP and complex tests - Polymorphism - Collections\r\nLevel 2: Registering - Abstract Base Classes - Categories\r\nLevel 3: Build your ABCs - MRO with metaclasses - Mixins\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 12:10:00, 2017-07-11 12:55:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@tw_lgiordani",
      "id": 779,
      "speakers": "Leonardo Giordani",
      "title": "Abstract Base Classes: a smart use of metaclasses",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Mix-Ins",
        "Meta Classes",
        "Developing with Python",
        "python",
        "The Answer to Life the Universe and Everything Else"
      ],
      "abstract_long": [
        "This talk shows what Python Abstract Base Classes (ABCs) are and how they can be used to categorise objects and implement a virtual inheritance tree. The goal of the talk is to introduce programmers to the concept of ABCs, and to show that metaclasses are not a terribly complex topic, but something that can be used by normal programmers. The talk is divided in three different \u201clevels of difficulty\u201d, each of one going deeper in the technical aspects of the subject.\r\n\r\n**Level 1: EAFP and complex tests - Polymorphism - Collections**\r\nThe first level is meant to give a quick overview of the `collections` package and some useful code snippets. Even beginners can benefit of the information given here. To complete this level you only need to know what a `try/except` block is.\r\n\r\n**Level 2: Registering - Abstract Base Classes - Categories**\r\nThe second level shows what real and virtual inheritance are, explains what is the meaning of registering and defines Abstract Base Classes. To complete this level you need to know what class inheritance is (i.e. what `class MyList(list)` means).\r\n\r\n**Level 3: Build your ABCs - MRO with metaclasses - Mixins - Interfaces**\r\nThe third level shows how to create your own ABCs and why metaclasses are not a difficult concept. Then the method resolution order for metaclasses is quickly discussed. To complete this level you need\r\n\r\n"
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "804": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "394": 3.00
        },
        {
          "2834": 7.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "564": 3.00
        },
        {
          "3463": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3292": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "722": 3.00
        },
        {
          "3573": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3409": 3.00
        },
        {
          "3554": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "2294": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "3492": 3.00
        },
        {
          "2365": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 7.00
        },
        {
          "300": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 10.00
        },
        {
          "545": 2.00
        },
        {
          "3143": 6.00
        },
        {
          "3818": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 6.00
        },
        {
          "171": 2.00
        },
        {
          "2286": 6.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 2.00
        },
        {
          "468": 9.00
        }
      ],
      "abstract_extra": "If needed I'm available to make the talk longer to be more beginner-friendly. I am going to present it at the London Python Meetup in a longer format, so slides will be already available in both formats.\r\n\r\nThe uploaded slides are from a former version of the talk and could be changed to suit the different audience.",
      "tag_categories": [
        "Programming",
        "Programming",
        ">>> Suggested Track",
        "Python",
        "Everything Else"
      ],
      "emails": "giordani.leonardo@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/abstract-base-classes-a-smart-use-of-metaclasses",
      "admin_type": "",
      "companies": "We Got POP Ltd"
    },
    "1081": {
      "abstract_short": "In this session, we\u2019ll introduce you to MXNet, an Open Source Deep Learning library and we\u2019ll show you how to run it with Python on a Raspberry Pi. Then, using a camera and a pre-trained object detection model, we\u2019ll show random objects to the Pi\u2026and listen to what it thinks the objects are!",
      "sub_title": "",
      "timerange": "2017-07-13 15:45:00, 2017-07-13 16:45:00",
      "sub_community": "pydata",
      "duration": 60,
      "twitters": "@",
      "id": 1081,
      "speakers": "Julien Simon",
      "title": "AI on a Pi",
      "have_tickets": [
        false
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Raspberry PI",
        "Open-Source",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Deep Learning"
      ],
      "abstract_long": [
        "In recent months, Artificial Intelligence has become the hottest topic in the IT industry. In this session, we\u2019ll first explain how Deep Learning \u2014 a subset of AI \u2014 differs from traditional Machine Learning and how it can help you solve complex problems such as computer vision or natural language processing. Then, we\u2019ll show you how to start writing Deep Learning applications in Python thanks to MXNet, a popular library for Deep Learning for both CPUs and GPUs. We'll also see how to use pre-trained models and we'll load one on a Raspberry Pi equipped with a camera. Finally, we\u2019ll show random objects to the Pi\u2026and listen to what it thinks the objects are, thanks to the text-to-speech capabilities of Amazon Polly."
      ],
      "user_votes": [
        {
          "3310": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3454": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "3592": 7.00
        },
        {
          "1214": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "2069": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "2813": 10.00
        },
        {
          "2259": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "3486": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "85": 2.00
        },
        {
          "2209": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "1041": 2.00
        },
        {
          "562": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3629": 10.00
        },
        {
          "3384": 10.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Hardware",
        "Open Source",
        "Data Science",
        "Data Science"
      ],
      "emails": "julien@julien.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/ai-on-a-pi",
      "admin_type": "",
      "companies": "Amazon Web Services"
    },
    "822": {
      "abstract_short": "PyTorch is an optimized tensor library for Deep Learning, and is a recent newcomer to the growing list of GPU programming frameworks available in Python, its main difference being its support for dynamic computation graphs, where every single iteration can be different. In this talk I will present an introduction to the PyTorch library and overview its main features using some simple examples, paying particular attention to how it performs algorithmic differentiation using the autograd package.",
      "sub_title": "",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@paul_ogrady",
      "id": 822,
      "speakers": "Paul O'Grady",
      "title": "An introduction to PyTorch & Autograd",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Deep Learning",
        "Science Track",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "PyTorch is an optimized tensor library for Deep Learning, and is a recent newcomer to the growing list of GPU programming frameworks available in Python. Like other frameworks it offers efficient tensor representations and is agnostic to the underlying hardware. However, unlike other frameworks it allows you to create \"define-by-run\" neural networks resulting in dynamic computation graphs, where every single iteration can be different---opening up a whole new world of possibilities. Central to all neural networks in PyTorch is the Autograd package, which performs Algorithmic Differentiation on the defined model and generates the required gradients at each iteration. In this talk I will present a gentle introduction to the PyTorch library and overview its main features using some simple examples, paying particular attention to the mechanics of the Autograd package.\r\n\r\nKeywords: GPU Processing, Algorithmic Differentiation, Deep Learning, Linear algebra."
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "2834": 7.00
        },
        {
          "2119": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "3703": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "1877": 7.00
        },
        {
          "3278": 3.00
        },
        {
          "3506": 2.00
        },
        {
          "509": 10.00
        },
        {
          "469": 7.00
        },
        {
          "3084": -1.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "3495": 6.00
        },
        {
          "2286": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3629": 10.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        ">>> Suggested Track",
        "Data Science",
        "Data Science"
      ],
      "emails": "paul.ogrady@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/an-introduction-to-pytorch-autograd",
      "admin_type": "",
      "companies": "Zalando"
    },
    "1054": {
      "abstract_short": "This talk will introduce you to Sanic, the Python 3 web framework that supports async request handlers with a simple, Flask-like, API.\r\n\r\nWe will start with a Sanic overview and compare it with other similar options before looking at the API and working through a basic app. Our goal here will be to get a feel for the Sanic API and demonstrate how it fits together. After this we will cover some of the more unique and interesting possibilities with Sanic, such as support for websockets and HTTP2.",
      "sub_title": "",
      "timerange": "2017-07-10 16:20:00, 2017-07-10 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@d0ugal",
      "id": 1054,
      "speakers": "Dougal Matthews",
      "title": "Async Web Apps with Sanic",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Web General",
        "Web",
        "Web Track",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "This talk will introduce you to Sanic, the Python 3 web framework that supports async request handlers with a simple, Flask-like, API.\r\n\r\nWe will start with a Sanic overview and compare it with other similar options before looking at the API and working through a basic app. Our goal here will be to get a feel for the Sanic API and demonstrate how it fits together. After this we will cover some of the more unique and interesting possibilities with Sanic, such as support for websockets and HTTP2.\r\n\r\nA web framework is often only as powerful as its ecosystem, so we will take a look at some of the popular Sanic extensions for databases, templating and testing."
      ],
      "user_votes": [
        {
          "3256": 3.00
        },
        {
          "251": 10.00
        },
        {
          "135": 3.00
        },
        {
          "3370": 7.00
        },
        {
          "468": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3701": 3.00
        },
        {
          "380": 10.00
        },
        {
          "3428": 10.00
        },
        {
          "1900": 7.00
        },
        {
          "564": 7.00
        },
        {
          "2227": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "530": 10.00
        },
        {
          "1966": 10.00
        },
        {
          "3486": 3.00
        },
        {
          "300": 3.00
        },
        {
          "306": 7.00
        },
        {
          "3084": 2.00
        },
        {
          "3507": 3.00
        },
        {
          "71": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "2127": 10.00
        },
        {
          "3628": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 6.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Web",
        ">>> Suggested Track",
        "Web",
        "Programming"
      ],
      "emails": "dougal@dougalmatthews.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/introduction-to-sanic-and-lessons-learned",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "808": {
      "abstract_short": "Python web application developers using frameworks which implement the WSGI standard are lacking with two major limitations:\r\n1. They can only implement a synchronous http request-response cycle, limiting the amount of requests a single server can handle.\r\n2. WSGI only supports HTTP lacking protocols with persistent connections needed for bi-directional communication. \r\nIn this talk we will explore asynchronous web servers, concurrency and real-time communication using web sockets \r\n\r\n",
      "sub_title": "\u05e9\u05c1n introduction for web developers",
      "timerange": "2017-07-11 14:35:00, 2017-07-11 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@amitnabarro",
      "id": 808,
      "speakers": "Amit Nabarro",
      "title": "Asynchronous I/O and the real-time web",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Web General",
        "Performance",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Building web applications is one of the most common uses of Python. With a plethora of different web frameworks aiming at varying audiences, it has become a rather simple and well-documented process to develop web applications and web services. So popular it has become that the WSGI specification is the industry standard protocol for developing web applications with Python.  \r\nBut the WSGI standard is lacking with two major limitations:\r\n\r\n - It supports only the \u2018traditional\u2019 synchronous http request-response cycle thus creating a \u2018glass ceiling\u2019 with the amount of requests a single server can handle \u2013 often described as the C10K problem\r\n - It does not provide an easy and efficient way of developing two-way communication between servers and clients. Often referred to as the real-time web this capability has become increasingly popular with modern web applications. \r\n\r\nOver the past decade multiple networking libraries have been developed to address these limitations. \r\nIn this talk we will explore:\r\n\r\n \r\n\r\n - What is an asynchronous web server and how it differs from other, WSGI-based web servers. \r\n - What is concurrency and how it can help us achieve supreme performance and scalability in our web applications. We will survey noteworthy libraries which will help achieve true concurrency. \r\n - How to develop real-time communication, using web sockets, with our Javascript application\r\n - Concerns, limitations and pitfalls when developing asynchronous web applications.\r\n\r\n"
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "683": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "1973": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "251": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3278": 3.00
        },
        {
          "3372": 10.00
        },
        {
          "152": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "3275": 3.00
        },
        {
          "2069": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "2479": 7.00
        },
        {
          "3007": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "306": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3407": 7.00
        },
        {
          "3369": 10.00
        },
        {
          "3398": 7.00
        },
        {
          "663": 3.00
        },
        {
          "3779": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "509": 3.00
        },
        {
          "3339": 6.00
        },
        {
          "489": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3743": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        },
        {
          "3629": -1.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Programming",
        "Web",
        "Programming"
      ],
      "emails": "amit.nabarro@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/asynchronous-io-and-the-real-time-web-an-introduction-for-web-developers",
      "admin_type": "",
      "companies": "475 Cumulus"
    },
    "912": {
      "abstract_short": "Linear programming is often regarded as very theoretical or even not known at all as a well-developed method of solving real world problems.\r\n\r\nThe talk gives a short introduction to LP problems and presents an interesting use case for the Python linear programming problem solver PuLP: that of creating a conference schedule.",
      "sub_title": "",
      "timerange": "2017-07-12 12:10:00, 2017-07-12 12:40:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@malemburg",
      "id": 912,
      "speakers": "Marc-Andre Lemburg",
      "title": "Automatic Conference Scheduling with PuLP",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Algorithms",
        "Use Case",
        "Developing with Python",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Analytics"
      ],
      "abstract_long": [
        "Linear programming is often regarded as very theoretical or even not known at all as a well-developed method of solving real world problems.\r\n\r\nThe talk gives a short introduction to LP problems and presents an interesting use case for the Python linear programming problem solver PuLP: that of creating a conference schedule.\r\n"
      ],
      "user_votes": [
        {
          "468": 7.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "419": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "2493": 3.00
        },
        {
          "1884": 7.00
        },
        {
          "2813": 3.00
        },
        {
          "269": 10.00
        },
        {
          "3007": 3.00
        },
        {
          "316": 10.00
        },
        {
          "300": 3.00
        },
        {
          "1041": 6.00
        },
        {
          "767": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Data Science",
        "Data Science"
      ],
      "emails": "mal@europython.eu",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/automatic-conference-scheduling-with-pulp",
      "admin_type": "",
      "companies": "eGenix.com Software GmbH"
    },
    "1105": {
      "abstract_short": "Selenium is a tool mostly used for testing GUI applications, but it also gives you the ability to automate online interactions e.g. logging into your social media account and liking the posts of others.\r\nTesting shouldn't be the only domain Selenium is the tool to go! \r\nJoin me for insights about automating the fast changing webpage of Instagram.",
      "sub_title": "",
      "timerange": "2017-07-12 16:20:00, 2017-07-12 16:50:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@timigrossmann",
      "id": 1105,
      "speakers": "Tim Gro\u00dfmann",
      "title": "Automating Instagram with Python and Selenium",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Beginners",
        "Educational Track",
        "Open-Source",
        "Jupyter/iPython",
        "Learning"
      ],
      "abstract_long": [
        "In this talk about using Selenium and Python for social media automation you will get some insights into growing your own open source projects into tools that really get used and maintained by a community. You will get an idea of what pitfalls you have to face when working with something as fast changing as Instagram and how to best tackle this. \r\nYou'll  learn what the \"Page Object\" design pattern is, what it is useful for and why we use it.\r\nEven though we'll also look into some growth analysis, you won't need any knowledge of math or statistics.\r\nA lot of the talk will be based on my article on InstaPy published at the freeCodeCamp publication on Medium: https://medium.freecodecamp.com/my-open-source-instagram-bot-got-me-2-500-real-followers-for-5-in-server-costs-e40491358340\r\n\r\nSo, who is this talk suited for?\r\nIf you're just starting out with python, are interested in automation or simply like to see a fun and interesting little open source project, I'd love to see you at my talk and hear your ideas and opinions about it.\r\n"
      ],
      "user_votes": [
        {
          "2119": 10.00
        },
        {
          "1973": 3.00
        },
        {
          "251": 3.00
        },
        {
          "3311": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "489": 10.00
        },
        {
          "3418": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "2057": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "3469": 7.00
        },
        {
          "3360": 10.00
        },
        {
          "300": 3.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3720": 10.00
        },
        {
          "3628": 2.00
        },
        {
          "2834": -1.00
        },
        {
          "380": -1.00
        },
        {
          "1041": 2.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3777": -1.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        ">>> Suggested Track",
        "Open Source",
        "Data Science",
        "Data Science"
      ],
      "emails": "contact.timgrossmann@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/automating-instagram-with-python-and-selenium",
      "admin_type": "",
      "companies": ""
    },
    "783": {
      "abstract_short": "Baby steps into short-text classification with python. Technologies used: flask, nltk, sklearn, green unicorn",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 783,
      "speakers": "Alisa Dammer",
      "title": "Baby steps in short-text classification with python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Education",
        "Programming",
        "python",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "This talk aims to provide an information about where and how one could start using **simple text-classification** models. Additionally it will be shown how a python classificator  can be incorporated into existing system.\r\nThe presentation will be broken into 3 topics and a conclusion.\r\nFirst, the presentation provides an overview of how the problem was approached, what information was useful or not and how the technologies stack shown in the second part was decided on.\r\nSecond part will concentrate on using  **Naive Bayesian** model for text classification. How the model was trained, what difficulties were met and how they were solved. Additionally the talk will give a brief overview of other possible model choices (random forest, SVM).\r\nThe third part will show how the model was deployed and used in the production. One architecture solution will be shown in details (**REST** calls between Java Client and Flask Server), while other possibilities will be mentioned briefly. \r\nAs the conclusion the possible improvements for the model in use will be suggested as well as short example of supervised learning algorithm (**CNN**) and unsupervised classification algorithm (**LDA**) for the same purpose. Along with the examples the proc and cons will be named.\r\n\r\nTechnologies mentioned and used: _Flask, Green Unicorn vs uWSGI, NLTK, Sci-Kit, Python 3, Java 8, Jersey, Docker, Kubernetes_\r\n\r\n"
      ],
      "user_votes": [
        {
          "3637": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "135": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "3031": 7.00
        },
        {
          "3372": 3.00
        },
        {
          "3428": 3.00
        },
        {
          "245": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "2585": 7.00
        },
        {
          "3407": 3.00
        },
        {
          "3348": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "2698": 2.00
        },
        {
          "3143": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "3799": 3.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Programming",
        "Python",
        "Data Science",
        "Data Science"
      ],
      "emails": "alisa.dammer@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/baby-steps-with-python-in-text-classification",
      "admin_type": "",
      "companies": "Joblift"
    },
    "373": {
      "abstract_short": "After the success in previous years, we\u2019re pleased to again announce a session form we have specially created for newcomers to the Python programming language:  the Beginners\u2019 Day, on Sunday, July 9th, from 10:00 until 17:00, at the Palacongressi di Rimini (Via della Fiera 23, Rimini), same location of the main conference.\r\n\r\nHarry Percival will be hosting the workshop.\r\n\r\nIf you\u2019re thinking of coming to the conference but you\u2019re new to Python, this could be the session for you.  Whether you\u2019re totally new to programming or you already know another language, this full day session, taking place on the first day of the conference, will give you a crash-course in Python, and the ecosystem around it, to give you the context you need to get the most out of the rest of EuroPython.",
      "sub_title": "",
      "timerange": "2017-07-09 10:00:00, 2017-07-09 17:00:00, 2015-07-20 11:00:00, 2015-07-20 13:30:00, 2015-07-20 14:30:00, 2015-07-20 15:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@hjwp",
      "id": 373,
      "speakers": "Harry Percival",
      "title": "Beginners' Day",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Beginners' Day",
      "tags": [
        "python"
      ],
      "abstract_long": [
        "This session will be presented in English (although a few of the coaches do speak basic Spanish, French and Italian). \r\n\r\nPlease bring your laptop, as a large part of the day will be devoted to learning Python on your own PC.\r\n\r\n\r\nSessions will include:\r\n\r\n * **A high-level introduction to Python and programming in general.**  Where did Python come from, what is programming all about, and what do I need to know to understand all these in-jokes about cheese shops?\r\n * **A self-directed learning session**, with specific tutorials for total beginners and more experienced programmers, accompanied by coaches who will be there to answer your questions and help you when you get stuck.  Learn at your own pace!\r\n * **A session on the Python \"ecosystem\"** -- intro to the wider world of Python: some topics and bits of jargon that are bound to come up this week: open source, free software, github, packages, pip, pypi, scientific computing, scipy, numpy, pandas, ipython notebook, web frameworks, django, flask, asyncio, the BDFL, the Zen of Python, etc etc.  Find out what are the tools, areas of interest, in-jokes, people of note...\r\n * **\"How to get the best out of the conference\"** - recommended talks, what to do at lunchtimes or in the evenings, tips on when and how to ask questions (hint: as often as possible!), what an \u201copen space\u201d is, and more.\r\nWe need to get an idea of numbers for this session, we will open registrations soon."
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "Python"
      ],
      "emails": "hjwp2@cantab.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/python-for-beginners",
      "admin_type": "",
      "companies": "PythonAnywhere"
    },
    "976": {
      "abstract_short": "Code review is a critical examination which everyone musts give attention. During code review process, every engineer should be careful about communication issues, and be aware of their responsibilities. This talk aims to give best practices about communication skills, and good behaviours from reviewer\u2019s and reviewee\u2019s perspectives with supporting real life examples. Hence, these skills help you to become not only a good reviewer, but also a good software engineer the one everyone works with.",
      "sub_title": "",
      "timerange": "2017-07-14 12:10:00, 2017-07-14 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 976,
      "speakers": "Burak Goynuk",
      "title": "Best Practices for Code Reviews",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Beginners",
        "Clean Code",
        "Best Practice",
        "Code Analysis",
        "failures/mistakes"
      ],
      "abstract_long": [
        "Code review is a critical examination which software engineers collaborate with other engineers, feel the team, improve their abilities, share their knowledge, and find defects early. This talk aims to show importance of the code review, give best practices about it by explaining good behaviours from both reviewer\u2019s and reviewee\u2019s perspective, with supporting real life examples, and stories.\r\n\r\n- Like for other methodologies in engineering, to have good communication skills is the most critical requirement for review. You can start by being polite and humble. \r\n\r\n- Good reviewee should review his code before committing, be grateful, and positive about comments. Also, not to understand comments in personal is very important.\r\n\r\n- Reviewer should understand problems, and requirements before starting review. He/she must check for whether all requirements are satisfied, or broken things, affected areas. Looking for future, considering all test cases, and maintenance issues are also in the plate of reviewers.\r\n\r\nAt the end of this talk, you will be aware of communication skills helping you to be a good team mate, have a good understanding of code review, software development cycle.  Then, you will be able to make your team happy both as being reviewer and reviewee. \r\n\r\nYou will learn lots of best practices like above, which help you to be not only a good reviewer, but also be a good software engineer the one everyone wants to work with."
      ],
      "user_votes": [
        {
          "3531": 3.00
        },
        {
          "1897": 3.00
        },
        {
          "683": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "3310": 7.00
        },
        {
          "251": 7.00
        },
        {
          "394": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 7.00
        },
        {
          "3668": 3.00
        },
        {
          "3592": 10.00
        },
        {
          "245": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3328": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "3573": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "2866": 10.00
        },
        {
          "3409": 7.00
        },
        {
          "3554": 7.00
        },
        {
          "2813": 3.00
        },
        {
          "2783": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2782": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "3360": 3.00
        },
        {
          "651": 7.00
        },
        {
          "3777": 7.00
        },
        {
          "2418": 10.00
        },
        {
          "2889": 10.00
        },
        {
          "58": 7.00
        },
        {
          "3394": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "3298": 7.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2127": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "767": 6.00
        },
        {
          "2169": 6.00
        },
        {
          "2209": -1.00
        },
        {
          "2660": 6.00
        },
        {
          "3382": 2.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 3.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 2.00
        },
        {
          "171": 2.00
        },
        {
          "3345": 6.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Educational",
        "Best Practice and Use Cases",
        "Programming",
        "Best Practice and Use Cases"
      ],
      "emails": "burak.goynuk@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/best-practices-for-code-reviews",
      "admin_type": "",
      "companies": "Udemy"
    },
    "1000": {
      "abstract_short": "Experienced programmers know that good programming involves a lot more than\r\nwriting code. Python offers an established set of techniques. Yet, the inexperienced programmer is often unaware of tools such as pdb, virtualenv and pyscaffold that make Python programs more reliable. This talk provides an overview of accepted best practices for debugging, testing, and maintenance, and provides hints what kind of project they are applicable to.",
      "sub_title": "",
      "timerange": "2017-07-11 16:20:00, 2017-07-11 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@k_rother",
      "id": 1000,
      "speakers": "Kristian Rother",
      "title": "Best Practices for Debugging, Testing and Maintenance",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Best Practice",
        "Test Libraries (pyTest/node/...)",
        "Testing",
        "Debugging"
      ],
      "abstract_long": [
        "Experienced programmers know that good programming involves a lot more than\r\nwriting code. Python offers an established set of techniques from several areas:\r\nDebugging is not an extraordinary activity, but certain tools and\r\nprocedures are available. E.g. automated tests ensure that bugs don\u2019t\r\ncome back. Finally, maintenance practices keep programs healthy for a long period of time. As a program grows, these best practices become more and more important.\r\n\r\nThe inexperienced programmer is often unaware of the tools available to\r\nmake Python programs more stable. This talk provides an overview of\r\naccepted best practices for debugging, testing, and maintenance, and\r\nprovides hints what kind of project they are applicable to.\r\n\r\nThe talk draws a map of tools and practices, including:\r\n\r\n* pdb\r\n* PEP8\r\n* py.test\r\n* pyscaffold\r\n* virtualenv\r\n* Sphinx"
      ],
      "user_votes": [
        {
          "1912": 7.00
        },
        {
          "3256": 7.00
        },
        {
          "1973": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3637": 3.00
        },
        {
          "3328": 10.00
        },
        {
          "3428": 7.00
        },
        {
          "1900": 7.00
        },
        {
          "2227": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "3392": 10.00
        },
        {
          "434": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "468": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3350": 7.00
        },
        {
          "1132": 10.00
        },
        {
          "3369": 3.00
        },
        {
          "2057": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "3360": 10.00
        },
        {
          "651": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "3535": 7.00
        },
        {
          "650": 3.00
        },
        {
          "3684": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "1897": 2.00
        },
        {
          "3603": 6.00
        },
        {
          "2209": -1.00
        },
        {
          "3818": 9.00
        },
        {
          "380": 2.00
        },
        {
          "3412": -1.00
        },
        {
          "1041": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "105": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 2.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "This talk might fit well next to \"Writing awesome PyPI packages in Python\" by Magdalena Rother.\r\n\r\nThe author has recently written a book on the subject of the talk: Pro Python Best Practices: Debugging, Testing and Maintenance [http://www.apress.com/us/book/9781484222409][1]\r\n\r\nTwo talks of the speaker can be found on[https://github.com/krother/talks][2]\r\n\r\n  [1]: http://www.apress.com/us/book/9781484222409\r\n  [2]: https://github.com/krother/talks\r\n",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Testing",
        "Testing",
        "Testing"
      ],
      "emails": "krother@academis.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/best-practices-for-debugging-testing-and-maintenance",
      "admin_type": "",
      "companies": "Academis"
    },
    "1116": {
      "abstract_short": "Python is now used at MPCDF in the emerging area of \u201catom probe crystallography\u201d (APT): a Fourier spectral analysis in 3D reciprocal space is computed to reveal both composition and crystallographic structure at the atomic scale of billions experimental data sets. The Python data ecosystem has proved to be well suited to this, as it has grown beyond the confines of single machines to embrace scalability. We describe our approach to scaling across multiple GPUs and our visualization methods too.",
      "sub_title": "",
      "timerange": "2017-07-12 12:10:00, 2017-07-12 12:55:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@jose_dibernardo",
      "id": 1116,
      "speakers": "Giuseppe Di Bernardo",
      "title": "Big Data Analytics at the MPCDF: GPU Crystallography with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Visualization",
        "Big Data",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Science",
        "Analytics"
      ],
      "abstract_long": [
        "In close collaboration with scientists from MPG, the Max Planck Computing and Data Facility is\u00a0engaged in the development and optimization of algorithms and applications for high performance\u00a0computing, as well as in the design and\u00a0implementation of solutions for data-intensive projects.\u00a0Python is now used at MPCDF in the emerging area of \u201catom probe crystallography\u201d (APT): a Fourier spectral analysis in 3D reciprocal space can be simulated in order to reveal both composition and crystallographic structure at the atomic scale of billions APT experimental data sets. The Python data ecosystem has proved to be well suited to this, as it has grown beyond the confines of single machines to embrace scalability. This talk aims to describe our approach to scaling across multiple GPUs, and the role of our visualization methods too. Our data workflow analysis relies on the GPU-accelerated Python software package called PyNX, an open source Python library which provides fast parallel computation scattering. The code is well suited for GPU computing, using both the pyCUDA and pyOpenCL libraries. Exploratory data analysis and performance tests are initially carried on through Jupyter notebooks and Python packages e.g., pandas, matplotlib, plotly. In production stage, interactive visualization is realized by using standard scientific tool, e.g. Paraview, an open-source 3D visualization program which e.g. requires Python modules to generate visualization components within VTK files."
      ],
      "user_votes": [
        {
          "3543": 7.00
        },
        {
          "468": 6.00
        },
        {
          "3310": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "47": 7.00
        },
        {
          "245": 3.00
        },
        {
          "3292": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "3573": 7.00
        },
        {
          "782": 10.00
        },
        {
          "2865": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "3298": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "3506": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3711": 10.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Sciences",
        "Data Science"
      ],
      "emails": "giuseppe.di-bernardo@mpcdf.mpg.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/big-data-analytics-at-the-mpcdf-gpu-crystallography-with-python",
      "admin_type": "",
      "companies": "Max Planck Computing and Data Facility (MPCDF)"
    },
    "756": {
      "abstract_short": "Why should a Python programmer be interested in _Bitcoin_ and the _Blockchain_ technology?\r\nApart from being the basis of crypto currencies, the Blockchain is a decentralized registry that cannot be modified. This means that using a Blockchain, users can trust in the validity of a dataset without the need to establish a central authority.\r\nHaving understood the basis of the Blockchain technology will enable you to create applications that might build up the technology stack of our near future.",
      "sub_title": "",
      "timerange": "2017-07-10 14:35:00, 2017-07-10 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@el2be",
      "id": 756,
      "speakers": "Benno Luthiger",
      "title": "Bitcoin and Blockchain for Pythoneers",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Databases",
        "Business",
        "Open-Source",
        "Business Track"
      ],
      "abstract_long": [
        "Why should a Python programmer be interested in Bitcoin and the Blockchain technology?\r\n\r\nBlockchain technology is one of the fastest moving part in the Fintech area. However, the Blockchain is not only the basis of crypto currencies. First of all it\u2019s a decentralized registry that cannot be modified. This means that using a Blockchain, users can trust in the validity of a dataset without the need to establish a central authority. Thus, the Blockchain can be used to store records e.g. of land ownership or and other property rights in countries with weak or corrupt or otherwise incompetent authorities.\r\n\r\nTherefore, Python programmers with an understanding of this technology are especially well prepared to contribute in this area, because the agility inherent to Python makes it easy to program in a fast moving environment. The fact that various applications in the Bitcoin and Blockchain area are implemented in Python prove this notion. However, the reverse is also true: An understanding of the distributed ledger technology possibly enables you to solve problems in projects you encounter in the near future.\r\n\r\nIn this talk, I will present the following topics:\r\n\u2022\tThe Blockchain architecture: nodes, transactions, headers.\r\n\u2022\tThe Bitcoin protocol and its proof of work (POW)\r\n\u2022\tSmart contracts\r\n\u2022\tBitcoin alternatives: Proof-of-work (PoW) compared to Proof-of-stake (PoS)\r\n"
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "2356": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "47": 3.00
        },
        {
          "3310": 3.00
        },
        {
          "251": 3.00
        },
        {
          "3311": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "41": 6.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "245": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3418": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "3605": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "2479": 10.00
        },
        {
          "2057": 3.00
        },
        {
          "2259": 10.00
        },
        {
          "3350": 3.00
        },
        {
          "3319": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "3779": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 10.00
        },
        {
          "3684": 3.00
        },
        {
          "3394": 3.00
        },
        {
          "2493": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "3628": 2.00
        },
        {
          "545": 6.00
        },
        {
          "509": 6.00
        },
        {
          "3143": 6.00
        },
        {
          "767": 9.00
        },
        {
          "3084": -1.00
        },
        {
          "562": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "3743": 7.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 2.00
        },
        {
          "3629": 2.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Databases",
        "Business",
        "Open Source",
        ">>> Suggested Track"
      ],
      "emails": "luthiger@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/bitcoin-and-blockchain-for-pythoneers",
      "admin_type": "",
      "companies": "ETH Zurich"
    },
    "1025": {
      "abstract_short": "[Godot][1] is an advanced, feature-packed, multi-platform 2D and 3D open source game engine.\r\nThis talk cover the year long journey of the port of Python as a scripting language for the engine from it initial need coming from the limitations of Godot's Python-like custom scripting language to the different approaches tried to bind Python to Godot.",
      "sub_title": "",
      "timerange": "2017-07-10 12:10:00, 2017-07-10 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@touilleMan",
      "id": 1025,
      "speakers": "Leblond Emmanuel",
      "title": "Bringing Python to Godot game engine",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Game-Development",
        "Open-Source"
      ],
      "abstract_long": [
        "[Godot][1] is an advanced, feature-packed, multi-platform 2D and 3D open source game engine.\r\nThe project has joined the Software Freedom Conservancy project and it growing community makes it hopes to become a real alternative to Unity&GameMaker.\r\n\r\nThis talk cover a year long journey of the port of Python as a scripting language for the engine, starting from a rant against Godot's Python-like proprietary language.\r\n\r\nWe will have a look at Godot's internal architecture as  is it itself a real interpreter with it garbage collector, dynamic typing, introspection and even builtin custom scripting language. All of this having to work next to our Python interpreter and communicate back and forth with it.\r\n\r\nFinally we will see the different approaches that have been tried to bind Python to Godot each with there own pros&cons:\r\n\r\n - Using Micropython interpreter instead of CPython\r\n\r\n - Using PyBind11 to statically bind to Godot C++ API\r\n\r\n - Using CFFI and rely on a 3rd party C API\r\n\r\nThe audience should have some basic knowledge of C level computing (static vs dynamic language, compilation & linking).\r\n\r\n  [1]: https://godotengine.org/\r\n"
      ],
      "user_votes": [
        {
          "2063": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "1035": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "2057": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "509": 3.00
        },
        {
          "545": 2.00
        },
        {
          "300": -1.00
        },
        {
          "380": -1.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "I've already done a talk on the subject last February [during the GodotCon][1] (which was held in Bruxelles right after the FOSDEM). However a lot have changed since then :-)\r\n\r\n  [1]:  https://www.youtube.com/watch?v=_7Sq1TdLgKQ\r\n",
      "tag_categories": [
        "Everything Else",
        "Open Source"
      ],
      "emails": "emmanuel.leblond@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/bringing-python-to-godot-game-engine",
      "admin_type": "",
      "companies": "Scille"
    },
    "1086": {
      "abstract_short": "In this talk you\u2019ll learn that creating a full-stack application in Python, with an  NPM, Webpack and React front-end, is in fact really easy! I will provide you with an easy-to- follow walkthrough of how to create a website that talks to your python back-end. You\u2019ll exit this talk feeling confident that you can now create your own full-stack web application.",
      "sub_title": "",
      "timerange": "2017-07-10 11:20:00, 2017-07-10 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@angineering",
      "id": 1086,
      "speakers": "Angela Branaes",
      "title": "Building a full-stack web application with Python, NPM, Webpack and React",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Python 3",
        "JavaScript Web Frameworks (AngularJS/ReactJS/...)",
        "Developing with Python",
        "Web Track"
      ],
      "abstract_long": [
        "Creating full-stack applications with Python, NodeJS and React can seem daunting at first. Having made many variations of these, I will show you the ropes, so you too can discover that it is in fact easy to get going.\r\n\r\nIn this talk you will learn to create a full-stack web application in Python, with a Nodejs and React front-end. I will provide you with an easy-to- follow walkthrough of the process, and you\u2019ll exit this talk feeling confident that you can now create your own full-stack web application."
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "804": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "1481": 7.00
        },
        {
          "251": 7.00
        },
        {
          "3459": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "2834": 10.00
        },
        {
          "3372": 10.00
        },
        {
          "3592": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "530": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "1449": 10.00
        },
        {
          "269": 10.00
        },
        {
          "2479": 7.00
        },
        {
          "2585": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "3507": 3.00
        },
        {
          "3699": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "930": 10.00
        },
        {
          "3695": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 7.00
        },
        {
          "3597": 3.00
        },
        {
          "3816": 10.00
        },
        {
          "3814": 10.00
        },
        {
          "93": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "3296": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "1897": 6.00
        },
        {
          "3143": 6.00
        },
        {
          "3407": 9.00
        },
        {
          "3818": 2.00
        },
        {
          "380": 6.00
        },
        {
          "3703": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "171": -1.00
        },
        {
          "105": 3.00
        },
        {
          "2286": 6.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Web",
        ">>> Suggested Track",
        ">>> Suggested Track"
      ],
      "emails": "abranaes@ahl.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/building-a-full-stack-web-application-with-python-nodejs-and-react",
      "admin_type": "",
      "companies": "Man AHL"
    },
    "967": {
      "abstract_short": "Building a real-time embedded audio sampling application with **MicroPython**. Inspired by a challenge to build a compact voice recording talking toy, this talk explores a solution using **MicroPython**, a **pyboard** and the **AMP Audio skin** from early design stage though to testing concluding with a demonstration.",
      "sub_title": "",
      "timerange": "2017-07-10 14:35:00, 2017-07-10 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@KaiTakDotOrg",
      "id": 967,
      "speakers": "Alan Christie",
      "title": "Building a real-time embedded audio sampling application with MicroPython",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Gadgets",
        "Sensors",
        "MicroPython",
        "Case Study",
        "Micro-Computers"
      ],
      "abstract_long": [
        "While demonstrating the pyboard to a group of colleagues, a challenge was set to produce a practical demonstration of the device that would provide automatic and continuous voice recording and playback of short spoken phrases similar to that found in a number of talking toys.\r\n\r\nThis talk covers the process of designing and testing the embedded real-time Python solution and includes the architecture, test methodologies and recordings as the stages progressed to the final source code. The talk concludes with a live demonstration of the final application. The solution uses MicroPython (an embedded implementation of Python 3), the pyboard and its AMP Audio skin.\r\n\r\n**MicroPython** is a lean implementation of Python 3 that is optimised to run in a very small footprint on micro-controllers and in constrained environments. It was created by the Australian programmer and physicist Damien George, after a successful Kickstarter backed campaign in 2013.\r\n\r\nThe **pyboard** is the original reference hardware created to host MicroPython. It is a compact low-power board based on an ARM processor with a heap of approximately 100kBytes that can run at 168MHz. It has sufficient hardware services and real-time capabilities to control all kinds of electronic projects.\r\n\r\nThe **AMP Audio skin** is a small additional module that attaches to the pyboard that adds a small power amplifier, speaker and a microphone with a pre-amp.\r\n"
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "74": 7.00
        },
        {
          "1481": 3.00
        },
        {
          "251": 3.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "3738": 3.00
        },
        {
          "1900": 10.00
        },
        {
          "2069": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2585": 3.00
        },
        {
          "316": 10.00
        },
        {
          "3486": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3369": 10.00
        },
        {
          "663": 7.00
        },
        {
          "3597": 3.00
        },
        {
          "3777": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "3799": 3.00
        },
        {
          "58": 7.00
        },
        {
          "3394": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "646": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "1355": -1.00
        },
        {
          "3628": 6.00
        },
        {
          "85": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "2237": 6.00
        },
        {
          "3345": 9.00
        },
        {
          "3418": 2.00
        },
        {
          "3495": 6.00
        },
        {
          "3743": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 3.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Hardware",
        "Hardware",
        "Python",
        "Case Study",
        "Hardware"
      ],
      "emails": "alan@kaitak.co.uk",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/building-a-real-time-embedded-audio-sampling-application-with-micropython",
      "admin_type": "",
      "companies": ""
    },
    "773": {
      "abstract_short": "Serverless applications in Python sounds, strange isn\u2019t? In this talk I\u2019ll explain how to build not only crop images or select data from DynamoDB, but build real application, what kind of troubles are we should expect, how to make decision is your task fit into serverless architecture in Python or may be you should use, general approach. How fast serverless applications written in Python, and more important how to scale it.",
      "sub_title": "",
      "timerange": "2017-07-10 11:20:00, 2017-07-10 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@a_soldatenko",
      "id": 773,
      "speakers": "Andrii Soldatenko",
      "title": "Building Serverless applications with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Public Cloud (AWS/Google/...)",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "python"
      ],
      "abstract_long": [
        "1. History overview of serverless term\r\n2. Getting started with Amazon Web Services and AWS Lambda\r\n3. Chalice python serverless microframework for AWS\r\n3.1 How to build REST API using AWS API gateway\r\n3.2 Configure URL parameters and add additional routing\r\n3.3 Error handling and error messages and logging\r\n3.4 Request metadata and content types\r\n3.5 CORS support\r\n3.6 Python serverless microframework for AWS compare to other similar frameworks\r\n4. Run Django application on AWS Lambda using Zappa\r\n5. Create secret API using secure endpoint on API Gateway\r\n5.1 Use API Keys for accessing your API endpoint\r\n5.2 Introducing custom authorizers in Amazon API Gateway using JSON Web token\r\n5.3 Use Amazon API Gateway Custom Authorizers\r\n5.4 IAM Policy and who it\u2019s works\r\n5.5 Use Amazon Cognito Your User Pool\r\n5.6 Let's Encrypt SSL Domain Certification and Installation\r\n6. Advanced Python Programming model of building Lambda functions\r\n6.1 What is Lambda Function Handler and how AWS Lambda can invoke when the service executes your code?\r\n6.2 How useful runtime information while a Lambda function is running?\r\n6.3 How to add logging statements and write logs into CloudWatch?\r\n6.4 How to work with exceptions and how Lambda handle it?\r\n7. AWS lambda and Python 3 (3 min)\r\n7.1 Try to find AWS Lambda instance OS\r\n7.2 Let\u2019s check if Python 3 is on there somewhere\r\n7.3 Build a Python3 virtualenv to run inside AWS Lambda\r\n7.4 Try to invoke Python 3 from Python 2.7.\r\n7.5 AWS Limits"
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "1897": 3.00
        },
        {
          "683": 3.00
        },
        {
          "3256": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 7.00
        },
        {
          "468": 3.00
        },
        {
          "251": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3701": 3.00
        },
        {
          "3592": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "489": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "3554": 10.00
        },
        {
          "316": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "2259": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "663": 7.00
        },
        {
          "3777": 3.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "3506": 2.00
        },
        {
          "1931": 10.00
        },
        {
          "3407": 9.00
        },
        {
          "380": 2.00
        },
        {
          "562": 2.00
        },
        {
          "2237": 6.00
        },
        {
          "3418": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 6.00
        },
        {
          "242": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Web",
        "Python"
      ],
      "emails": "andrii.soldatenko@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/building-serverless-applications-with-python",
      "admin_type": "",
      "companies": "Toptal"
    },
    "907": {
      "abstract_short": "Verified fakes are a great way to make sure that your unit tests are valid. If you are testing against an unverified mock, your tests might say that your code works when the third party service that you are mocking has changed.\r\n\r\nThis talk assumes that you know a bit about testing practices and you want to dive deep into ensuring the correctness of your code. We will follow a practical example of a verified fake with tools such as `pytest` and Travis CI.",
      "sub_title": "",
      "timerange": "2017-07-10 12:10:00, 2017-07-10 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@adamdangoor",
      "id": 907,
      "speakers": "Adam Dangoor",
      "title": "But how do you know your mock is valid? Verified fakes of web services",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Test Driven Development (TDD)",
        "Test Libraries (pyTest/node/...)",
        "Testing",
        "APIs",
        "python"
      ],
      "abstract_long": [
        "If your code calls a third party service then you may want to test that your code works but you don't want to call the service in your tests.\r\n\r\nIt may be expensive, slow or impossible to call that service. For example, if you are making a Slack bot, you want to create tests which don't make calls across the network to Slack.\r\n\r\nOne approach is to create a mock of that service. Our tests can now run quickly, cheaply and reliably. But if we copy the service incorrectly, or if the service changes, our tests will pass while our code does not work.\r\n\r\nVerified fakes solve this problem. You can write tests which confirm that your mock is an accurate representation of the service being mocked. Those tests can be a small subset of your test suite and they can be run periodically, to verify the validity of the many tests which use the mock.\r\n\r\nThis talk will follow the example of VWS-Python, a verified fake for a proprietary web service. It will discuss the practicalities of creating such a fake and it will focus on the trade-offs, tooling and approaches involved.\r\n\r\nBy the end of this talk the audience will understand how to tie together `pytest`, Travis CI, `requests` and `Responses` to create a verified fake.\r\n  \r\nThe talk is aimed at people who have an interest in writing correct software. It is assumed that the audience is familiar with basic testing techniques."
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "3256": 10.00
        },
        {
          "74": 7.00
        },
        {
          "251": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "1022": 3.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "484": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "3292": 7.00
        },
        {
          "1476": 10.00
        },
        {
          "3605": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 10.00
        },
        {
          "3809": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "663": 3.00
        },
        {
          "284": 10.00
        },
        {
          "651": 7.00
        },
        {
          "3500": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3695": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2582": 3.00
        },
        {
          "69": -1.00
        },
        {
          "3339": 6.00
        },
        {
          "3407": 2.00
        },
        {
          "2209": 2.00
        },
        {
          "380": 6.00
        },
        {
          "3480": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "105": 7.00
        },
        {
          "3743": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3826": 6.00
        },
        {
          "3770": 6.00
        },
        {
          "2698": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Testing",
        "Testing",
        "Testing",
        "Web",
        "Python"
      ],
      "emails": "adamdangoor@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/but-how-do-you-know-your-mock-is-valid-verified-fakes-of-web-services-by-exam",
      "admin_type": "",
      "companies": "Mesosphere"
    },
    "797": {
      "abstract_short": "The objective of this call is to share the best way to write a C extension for Python.\r\nLot of good libraries are written in C, a Python developer should know how to quickly write a C library wrapper.\r\nAfter this call, Python developers will fully understand taking and ending of Python extensions.",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@realitix",
      "id": 797,
      "speakers": "Jean-S\u00e9bastien Bevilacqua",
      "title": "Call a C API from Python becomes more enjoyable with CFFI",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Best Practice",
        "Python general",
        "Developing with Python",
        "Performance",
        "C-Languages"
      ],
      "abstract_long": [
        "*Python is slow ! Python can\u2019t access bare metal !*\r\n\r\nYou often hear theses assumptions? Theses limitations can be surpassed by Python extensions written in C. However, according to my personal experience, doing this by leveraging C may yield to several issues (e.g., memory management).\r\n\r\nC Foreign Function Interface for Python (a.k.a., CFFI) allows you to easily write Python extensions. One of the main aims of CFFI is to to wrap C libraries. Along the same lines, it may also be used for performance enhancement.\r\n\r\nBy this call, I am firstly presenting CFFI and it\u2019s two modes of utilization: API level and ABI level. Then I will share my own experience about wrapping [shaderc][1] library in six hours ([pyshaderc][2]).\r\n\r\nNext we are going to the next level, let\u2019s wrap all the Vulkan API! Vulkan is the new 3D API and is not a piece of cake. To see the real advantage of CFFI, a side by side comparison between two Python modules is going to be presented:\r\n\r\n - **CVulkan** is a Vulkan wrapper written fully in C, it\u2019s a classic C extension for Python\r\n - **vulkan** is its CFFI counterpart without any C written, only Python\r\n\r\nI have developed two versions of Vulkan wrapper (one in a pure C, and the second by leveraging CFFI) and I can assure you that CFFI is a a way better!\r\n\r\nLet\u2019s code!\r\n\r\n  [1]: https://github.com/google/shaderc\r\n  [2]: https://github.com/realitix/pyshaderc\r\n"
      ],
      "user_votes": [
        {
          "1973": 10.00
        },
        {
          "468": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "251": 7.00
        },
        {
          "3308": 7.00
        },
        {
          "2834": 3.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 10.00
        },
        {
          "3547": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "3463": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "3392": 3.00
        },
        {
          "1884": 3.00
        },
        {
          "645": 10.00
        },
        {
          "306": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "3369": 3.00
        },
        {
          "2365": 7.00
        },
        {
          "663": 3.00
        },
        {
          "930": 10.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "3535": 3.00
        },
        {
          "650": 7.00
        },
        {
          "3500": 10.00
        },
        {
          "545": 2.00
        },
        {
          "2209": 2.00
        },
        {
          "3818": 2.00
        },
        {
          "3376": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 9.00
        },
        {
          "171": 2.00
        },
        {
          "2286": 6.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3084": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Python",
        ">>> Suggested Track",
        "Programming",
        "Other Programming Languages"
      ],
      "emails": "realitix@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/call-a-c-api-from-python-becomes-more-enjoyable-with-cffi",
      "admin_type": "",
      "companies": "Linagora"
    },
    "1049": {
      "abstract_short": "This talk covers how to turn a simple Python application into a\r\nfirst-class Kubernetes citizen.  Starting with the basic steps you can\r\nrely on the runtime for, covering logging and all the way to\r\nsupporting the service live-cyle, health checking and monitoring in a\r\nKubernetes environment.  You will see that building a cloud-native\r\napplication is not very hard and something you can gradually\r\nintroduce.",
      "sub_title": "",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@flubdevork",
      "id": 1049,
      "speakers": "Floris Bruynooghe",
      "title": "Cloud Native Python in Kubernetes",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Software Design",
        "Docker",
        "Microservices"
      ],
      "abstract_long": [
        "Serverside applications are more and more likely to need to run in\r\ndynamic cloud environments where they can automatically scale as\r\nrequired.  One rightfully popular approach is to run the application\r\nas a Docker container inside a Kubernetes cluster, giving you a lot of\r\noperational benefits thanks to the Kubernetes folks.\r\n\r\nFor the most part it is rather easy to make your Python application\r\nwork inside a Docker container.  But there are a number of common\r\npatterns one can follow to save time by delegating more things to the\r\nruntime environment.  Furthermore you can start adding a few simple\r\nnon-intrusive features to your application which will help improve the\r\napplication live-cycle in the cluster, ensuring smooth hand-over when\r\nmigrating the container to different nodes or scaling it up or down.\r\n\r\nThis talk will quickly cover the basics of Kubernetes and will then\r\nstart from a simple program and will discuss the steps to take to make\r\nit behave well in this environment.  Starting with the basics steps\r\nyou can rely on the runtime for, covering logging and all the way to\r\nsupporting the service life-cycle, health checking and monitoring in a\r\nKubernetes environment.  You will see that building a cloud-native\r\napplication is not very hard and something you can gradually\r\nintroduce."
      ],
      "user_votes": [
        {
          "195": 3.00
        },
        {
          "804": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "2834": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "468": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3701": 7.00
        },
        {
          "3547": 10.00
        },
        {
          "3592": 7.00
        },
        {
          "564": 3.00
        },
        {
          "3456": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2813": 7.00
        },
        {
          "306": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "71": 10.00
        },
        {
          "3398": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "789": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "2127": 7.00
        },
        {
          "509": 10.00
        },
        {
          "310": 6.00
        },
        {
          "3407": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "171": 6.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "DevOps",
        "Programming"
      ],
      "emails": "flub@devork.be",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/cloud-native-python-in-kubernetes",
      "admin_type": "",
      "companies": "Google"
    },
    "824": {
      "abstract_short": "Python threading and multiprocessing package is to perform operations in parallel. In this talk, people will get introduced to python threading and multiprocessing packages. This talk will cover multiprocessing/threaded development best practices, problems comes in development, things to know before multiprocessing. After this talk attendees will be able to develop multiprocessing/threaded applications.\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@",
      "id": 824,
      "speakers": "pratik dhanave",
      "title": "concurrency in python",
      "have_tickets": [
        false
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Multi-Threading",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Python threading and multiprocessing package is to perform operations in parallel. In this talk, people will get introduced to python threading and multiprocessing packages. This talk will cover multiprocessing/threaded development best practices, problems comes in development, things to know before multiprocessing. After this talk attendees will be able to develop multiprocessing/threaded applications.\r\n\r\nOutline\r\n\r\nConcurrency and parallelism\r\nWhat is multiprocessing and multi-threading\r\nThreads\r\nGlobal Interpreted Lock\r\nCondition\r\nlocks - Lock & RLock\r\nSemaphore\r\nTimer\r\nThread Pool\r\nProcess\r\nProcess Pool\r\nPipe\r\nQueue\r\nShared memory\r\nGevent\r\nThis talk will cover best practices and problems in multiprocessing and threaded application development."
      ],
      "user_votes": [
        {
          "3364": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "251": 10.00
        },
        {
          "468": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "3592": 7.00
        },
        {
          "3428": 10.00
        },
        {
          "564": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "722": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3398": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "3535": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "545": 2.00
        },
        {
          "2834": 6.00
        },
        {
          "3143": 6.00
        },
        {
          "2356": -1.00
        },
        {
          "3407": 9.00
        },
        {
          "3818": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3384": 10.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Programming"
      ],
      "emails": "i.pratikdhanave@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/concurrency-in-python",
      "admin_type": "",
      "companies": "softcorner"
    },
    "796": {
      "abstract_short": "Cyber-security is a critical part of all Internet applications; it protects our resources and users. Bootstrap yourself with knowledge regarding cyber security on many different layers and phases of application development. The talk focuses on the main issues when designing, developing and deploying python applications.",
      "sub_title": "",
      "timerange": "2017-07-11 11:20:00, 2017-07-11 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 796,
      "speakers": "Piotr Dyba",
      "title": "CyberSecurity.bootcamp()",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Web General",
        "Security",
        "Privacy",
        "Developing with Python",
        "RESTful"
      ],
      "abstract_long": [
        "Cyber-security is a critical part of all distributed applications. By understanding and implementing proper security measures, you guard your own resources against malicious attackers as well as provide a secure environment for all relevant parties. \r\n\r\nThe purpose of the talk is to show starting points on how to improve security in python applications by destroying a few servers during the presentation. It will provide the most important information and will cover:\r\n\r\n0. Threat modeling\r\n1. Common attack vectors on Python applications. \r\n2. Why python is not vulnerable to some kinds of attacks.\r\n3. Why is eval so dangerous?\r\n4. Improving server deployment and security management.\r\n5. Automated security testing.\r\n6. Pentesting.\r\n7. Who is a CISO and why is cyber-security awareness in the company so important nowadays.\r\n\r\nBasic knowledge of networking, python and REST is advised. \r\n"
      ],
      "user_votes": [
        {
          "527": 10.00
        },
        {
          "3652": 10.00
        },
        {
          "3499": 10.00
        },
        {
          "1878": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "685": 7.00
        },
        {
          "152": 7.00
        },
        {
          "3496": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "722": 7.00
        },
        {
          "782": 3.00
        },
        {
          "1884": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "310": 6.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 2.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": 6.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Security",
        "Security",
        ">>> Suggested Track",
        "Web"
      ],
      "emails": "piotr@dyba.com.pl",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/cybersecuritybootcamp",
      "admin_type": "",
      "companies": "F-Secure"
    },
    "924": {
      "abstract_short": "The new frame evaluation API was introduced to Python 3.6 in PEP 523 and it allows to specify a per-interpreter function pointer to handle the evaluation of frames.\r\nIn this talk we are going to explain how standard way of debugging in Python works and how the new frame evaluation API may be useful for creating the fast debugger. Also we will consider why such fast debugging was not possible in the previous versions of Python.",
      "sub_title": "",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@lisa_shashkova",
      "id": 924,
      "speakers": "Elizaveta Shashkova",
      "title": "Debugging in Python 3.6: Better, Faster, Stronger",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Python 3",
        "Debugging",
        "Developing with Python",
        "CPython",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "Python 3.6 was released in December of 2016 and it has a lot of new cool features. Some of them are quite easy for using: a developer can read, for example, about f-strings and they can start using them in their programs as soon as possible. But sometimes features are not so evident, and a new frame evaluation API is one of them. \r\n\r\nThe new frame evaluation API was introduced to CPython in PEP 523 and it allows to specify a per-interpreter function pointer to handle the evaluation of frames. It might not be evident how to use this new feature in everyday life, but it\u2019s quite easy to understand how to build a fast debugger based on it. \r\n\r\nIn this talk we are going to explain how standard way of debugging in Python works and how a new frame evaluation API may be useful for creating the fast debugger. Also we will consider why such fast debugging was not possible in the previous versions of Python. If someone hasn\u2019t made a final decision to move to Python 3.6 this talk will provide some new reasons to do it. "
      ],
      "user_votes": [
        {
          "1897": 7.00
        },
        {
          "195": 3.00
        },
        {
          "804": 10.00
        },
        {
          "468": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "2209": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "394": 7.00
        },
        {
          "2063": 7.00
        },
        {
          "3420": 7.00
        },
        {
          "135": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "3278": 7.00
        },
        {
          "2183": 10.00
        },
        {
          "685": 3.00
        },
        {
          "3701": 3.00
        },
        {
          "3428": 10.00
        },
        {
          "564": 10.00
        },
        {
          "2227": 10.00
        },
        {
          "484": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "1379": 10.00
        },
        {
          "3554": 7.00
        },
        {
          "2479": 10.00
        },
        {
          "3486": 10.00
        },
        {
          "1132": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "306": 7.00
        },
        {
          "3407": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "2365": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "85": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "3597": 10.00
        },
        {
          "3360": 10.00
        },
        {
          "651": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 10.00
        },
        {
          "58": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3296": 10.00
        },
        {
          "3299": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "530": 2.00
        },
        {
          "930": 9.00
        },
        {
          "767": 9.00
        },
        {
          "3603": 9.00
        },
        {
          "310": 6.00
        },
        {
          "489": 6.00
        },
        {
          "3818": 6.00
        },
        {
          "2660": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "1490": 7.00
        },
        {
          "171": -1.00
        },
        {
          "2286": 9.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 2.00
        },
        {
          "242": 7.00
        },
        {
          "3384": 10.00
        }
      ],
      "abstract_extra": "This talk will be presented at PyCon US 2017: https://us.pycon.org/2017/schedule/presentation/526/",
      "tag_categories": [
        "Python",
        "Testing",
        ">>> Suggested Track",
        "Python",
        "Python"
      ],
      "emails": "elizabeth.shashkova@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/debugging-in-python-36-better-faster-stronger",
      "admin_type": "",
      "companies": "JetBrains"
    },
    "838": {
      "abstract_short": "Declarative Programming is a programming paradigm that focuses on describing *what* should be computed in a problem domain without describing *how* it should be done. This introductory talk  explains the basic ideas of declarative programming, why and how you wanna use it by providing examples in Python. Additionally a short presentation of [PyDatalog][1] is given to build the bridge between declarative and logistic programming.\r\n  [1]: https://sites.google.com/site/pydatalog/home\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 15:45:00, 2017-07-13 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@FlorianWilhelm",
      "id": 838,
      "speakers": "Florian Wilhelm",
      "title": "Declarative Thinking and Programming",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Developing with Python",
        "Programming",
        "Best Practice",
        "Clean Code"
      ],
      "abstract_long": [
        "Declarative Programming is a programming paradigm that focuses on describing *what* should be computed in a problem domain without describing *how* it should be done.  The talk starts by explaining differences between a *declarative* and *imperative* approach with the help of examples from everyday life. Having established a clear notion of declarative programming as well as pointed out some advantages, we transfer these concepts to programming in general. For example, the usage of control flow statements like loops over-determine the order of computation which impedes scalable execution as well as it often violates the single level of abstraction principle. \r\n\r\nFollowing the theoretical part of the talk, some practical examples are given how declarative programming can be applied easily within Python. This comprises the advantages and disadvantages of using a configuration file, e.g. config.yaml, versus a Python configuration module, e.g. setup.py. Furthermore, the benefits of avoiding statements of control flow with the help of list and dictionary comprehensions as well as sets are demonstrated.\r\n\r\nThe talk is concluded by a short, high-level excursion to a logistic programming language, namely PyDatalog in order to build the bridge between logistic and declarative programming. This is accomplished by showing how a mathematical crossword can be easily solved with the help of declarative and logistic programming."
      ],
      "user_votes": [
        {
          "683": 3.00
        },
        {
          "74": 3.00
        },
        {
          "3310": 3.00
        },
        {
          "251": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "3409": 7.00
        },
        {
          "316": 10.00
        },
        {
          "306": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "651": 3.00
        },
        {
          "650": 10.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3684": 7.00
        },
        {
          "3575": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "3628": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Programming",
        "Best Practice and Use Cases",
        "Educational"
      ],
      "emails": "florian.wilhelm@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/declarative-thinking-and-programming",
      "admin_type": "",
      "companies": "inovex"
    },
    "948": {
      "abstract_short": "In this talk, we will go through the whole process of data mining and knowledge discovery of broadband internet at home. Firstly we write a script to run speed test periodically and log the metric. Then we parse the log data and convert them into a time series and visualize the data for a certain period. Next we conduct some data analysis; finding trends, forecasting, and detecting anomalous data. There will be several statistic or deep learning techniques used for the analysis; ARIMA, LSTM.",
      "sub_title": "",
      "timerange": "2017-07-14 11:20:00, 2017-07-14 12:05:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@_midnight_radio",
      "id": 948,
      "speakers": "Hongjoo Lee",
      "title": "Deep Learning your Broadband Network @HOME",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Machine-Learning",
        "Deep Learning",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "Most of us have broadband internet services at home. Sometimes it does not work well, and we visit speed test page and check internet speed for ourselves or call cable company to report the service failure. As a Python programmer, have you ever tried to automate the internet speed test on a regular basis? Have you ever thought about logging the data and analyzing the time series ?\r\n\r\nIn this talk, we will go through the whole process of data mining and knowledge discovery. Firstly we write a script to run speed test periodically and log the metric. Then we parse the log data and convert them into a time series and visualize the data for a certain period.\r\n\r\nNext we conduct some data analysis; finding trends, forecasting, and detecting anomalous data. There will be several statistic or deep learning techniques used for the analysis; ARIMA (Autoregressive Integrated Moving Average), LSTM (Long Short Term Memory).\r\n\r\nThe goal is to provide basic idea how to run speed test and collect metrics by automated script in Python. Also, I will provide high level concept of the methodologies for analyzing time series data. Also, I would like to motivate Python people to try this at home.\r\n\r\nThis session is designed to be accessible to everyone, including anyone with no expertise in mathematics, computer science. Understandings of basic concepts of machine learning and some Python tools bringing such concepts into practice might be helpful, but not necessary for the audience."
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "74": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "251": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 10.00
        },
        {
          "3492": 3.00
        },
        {
          "3348": 10.00
        },
        {
          "3469": 3.00
        },
        {
          "300": 10.00
        },
        {
          "3500": 7.00
        },
        {
          "3684": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 9.00
        },
        {
          "468": 2.00
        },
        {
          "3368": 3.00
        },
        {
          "3711": 7.00
        },
        {
          "3629": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "lee.hongjoo@yandex.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/deep-learning-your-broadband-network-home",
      "admin_type": "",
      "companies": ""
    },
    "1101": {
      "abstract_short": "There's a widespread belief among machine learning practitioners that algorithms are objective and allow us to deal with the messy reality in a nice, objective way, without worrying about all the yucky human nature things. This talk will argue that this belief is wrong. Algorithms, just like the humans who create them, can be severely biased and despicable indeed. ",
      "sub_title": "",
      "timerange": "2017-07-13 16:20:00, 2017-07-13 16:50:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@maciejgryka",
      "id": 1101,
      "speakers": "Maciej Gryka",
      "title": "Despicable machines: how computers can be assholes",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Education",
        "Community",
        "Best Practice",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "When working on a new ML solution to solve a given problem, do you think that you are simply using objective reality to infer a set of unbiased rules that will allow you to predict the future? Do you think that worrying about the morality of your work is something other people should do? If so, this talk is for you.\r\n\r\nIn this brief time, I will try to convince you that you hold great power over how the future world will look like and that you should incorporate thinking about morality into the set of ML tools you use every day. We will take a short journey through several problems, which surfaced over the last few years, as ML and AI generally, became more widely used. We will look at bias present in training data, at some real-world consequences of not considering it (including one or two hair-raising stories) and cutting-edge research on how to counteract this.\r\n\r\nThe outline of the talk is: - Intro the problem: ML algos can be biased! - Two concrete examples. - What's been done so far (i.e. techniques from recently-published papers). - What to do next: unanswered questions."
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "1973": 7.00
        },
        {
          "3543": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "685": 3.00
        },
        {
          "1900": 3.00
        },
        {
          "1022": 3.00
        },
        {
          "3404": 10.00
        },
        {
          "245": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "2259": 3.00
        },
        {
          "3398": 7.00
        },
        {
          "3486": 3.00
        },
        {
          "316": 7.00
        },
        {
          "2889": 3.00
        },
        {
          "3535": 3.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2127": 7.00
        },
        {
          "93": 2.00
        },
        {
          "3382": 9.00
        },
        {
          "3799": 7.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "171": 9.00
        },
        {
          "3495": 6.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 7.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Community",
        "Best Practice and Use Cases",
        "Data Science",
        "Data Science"
      ],
      "emails": "maciej@gryka.net",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/despicable-machines-how-computers-can-be-assholes",
      "admin_type": "",
      "companies": "RainforestQA"
    },
    "922": {
      "abstract_short": "Apache Airflow is an open-source Python tool for orchestrating data processing workflows. Tasks are arranged into a directed acyclic graph (DAG). Shape of the graph decides the overall logic of the workflow. A DAG can have many branches and you decide which of them to follow at execution time.\r\n\r\nWe go over basic Airflow concepts and demonstrate how easy it is to define your own workflows in Python code. We also cover ways of adding custom task operators, sensors and plugins.",
      "sub_title": "",
      "timerange": "2017-07-13 14:35:00, 2017-07-13 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@postrational",
      "id": 922,
      "speakers": "Micha\u0142 Karzy\u0144ski",
      "title": "Developing elegant workflows in Python code with Apache Airflow",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Best Practice",
        "Clean Code",
        "Open-Source",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "Every time a new batch of data comes in, you start a set of tasks. Some tasks can run in parallel, some must run in a sequence, perhaps on a number of different machines. That's a workflow.\r\n\r\nDid you ever draw a block diagram of your workflow? Imagine you could bring that diagram to life and actually run it as it looks on the whiteboard. With Airflow you can just about do that.\r\n\r\n[Apache Airflow][1] is an open-source Python tool for orchestrating data processing pipelines. In each workflow tasks are arranged into a directed acyclic graph (DAG). Shape of this graph decides the overall logic of the workflow. A DAG can have many branches and you can decide which of them to follow and which to skip at execution time.\r\n\r\nThis creates a resilient design because each task can be retried multiple times if an error occurs. Airflow can even be stopped entirely and running workflows will resume by restarting the last unfinished task. Logs for each task are stored separately and are easily accessible through a friendly web UI.\r\n\r\nIn my talk I will go over basic Airflow concepts and through examples demonstrate how easy it is to define your own workflows in Python code. We'll also go over ways to extend Airflow by adding custom task operators, sensors and plugins.\r\n\r\n  [1]: http://airflow.apache.org\r\n"
      ],
      "user_votes": [
        {
          "1897": 6.00
        },
        {
          "468": 10.00
        },
        {
          "2209": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "564": 7.00
        },
        {
          "1466": 7.00
        },
        {
          "3292": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "300": 7.00
        },
        {
          "1132": 10.00
        },
        {
          "3369": 7.00
        },
        {
          "3492": 10.00
        },
        {
          "3486": 10.00
        },
        {
          "85": 3.00
        },
        {
          "3500": 7.00
        },
        {
          "58": 7.00
        },
        {
          "3816": 7.00
        },
        {
          "646": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 3.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Educational",
        "Open Source",
        "Data Science",
        "Data Science"
      ],
      "emails": "europython@karzyn.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/developing-elegant-workflows-in-python-code-with-apache-airflow",
      "admin_type": "",
      "companies": "Intel"
    },
    "830": {
      "abstract_short": "The web is constantly evolving, that is even more true with the frontend world. You don\u2019t have anymore the traditional webapp, in fact you now have two apps, backend and frontend. But how do they communicate? Traditionally we have always created REST APIs, but now, there\u2019s a new player. GraphQL!",
      "sub_title": "",
      "timerange": "2017-07-11 16:20:00, 2017-07-11 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@patrick91",
      "id": 830,
      "speakers": "Patrick Arminio",
      "title": "Django and Graphql",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Django",
        "RESTful",
        "APIs"
      ],
      "abstract_long": [
        "The web is constantly evolving, that is even more true with the frontend world. You don\u2019t have anymore the traditional webapp, in fact you now have two apps, backend and frontend. But how do they communicate? Traditionally we have always created REST APIs, but now, there\u2019s a new player. GraphQL!"
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "914": 7.00
        },
        {
          "2356": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "195": 7.00
        },
        {
          "468": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3764": 3.00
        },
        {
          "3456": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3574": 10.00
        },
        {
          "2259": 7.00
        },
        {
          "3407": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "650": 7.00
        },
        {
          "58": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "3628": 6.00
        },
        {
          "85": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 3.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "242": 10.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Application Frameworks",
        "Web",
        "Web"
      ],
      "emails": "patrick.arminio@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/django-and-graphql",
      "admin_type": "",
      "companies": "Stink Studios"
    },
    "1150": {
      "abstract_short": "This year, we will again have a Django Girls workshop, organized by FuzzyBrains, an Italian non-profit based in Florence. The workshop will be held on Sunday, July 9th in the EuroPython 2017 conference venue from 09:00 to 18:00 CEST.\r\n",
      "sub_title": "",
      "timerange": "2017-07-09 09:00:00, 2017-07-09 17:00:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@europython",
      "id": 1150,
      "speakers": "Tobey Announced",
      "title": "Django Girls EuroPython 2017",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Django Girls",
      "tags": [
        "General",
        "python"
      ],
      "abstract_long": [
        "The Django Girls workshops series was founded at EuroPython 2014. Since then we've sponsored a Django Girls workshops every year, by providing free rooms, catering and discounted or free tickets to workshop participants and trainers.\r\n\r\n**Django Girls EuroPython 2017** \r\n\r\nThis year, we will again have a Django Girls workshop, organized by [FuzzyBrains][1], an Italian non-profit based in Florence. The workshop will be held on Sunday, July 9th in the [EuroPython 2017 conference][2] venue from 09:00 to 18:00 CEST.\r\n\r\nThe workshop is for free, but you have to apply on the [Django Girls website][3] to be able to attend.\r\n\r\nFor more information, please check the [Django Girls EuroPython website][4].\r\n\r\n**How we sponsor the event**\r\n\r\nFor EuroPython 2017, we are providing the room and catering in the conference venue, as well as giving free conference tickets to trainers and making available up to 30 discounted student rate conference tickets to the workshop attendees. We have also allowed attendees to submit to our financial aid program.\r\n\r\n  [1]: https://www.fuzzybrains.org/en/\r\n  [2]: https://ep2017.europython.eu/en/location/sprints/\r\n  [3]: https://djangogirls.org/europython/apply/\r\n  [4]: https://djangogirls.org/europython/"
      ],
      "user_votes": [],
      "abstract_extra": "none",
      "tag_categories": [
        "z-deprecateded",
        "Python"
      ],
      "emails": "alex@hendorf.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/django-girls-europython-2017",
      "admin_type": "",
      "companies": "EuroPython"
    },
    "1063": {
      "abstract_short": "After a year building a startup on top of Django Rest Framework there are lots of thinks to talk about.\r\nThis talk is a walkthrough of the discoveries we have made at OnTruck during that year.\r\nIt covers the pitfalls we have both avoided and fallen into. The tricks that have helped us keep our speed and sanity. The tools we have both used and discarded on the way. And finally the tips we would give ourselves if we were starting all over again after this year.",
      "sub_title": "",
      "timerange": "2017-07-10 12:10:00, 2017-07-10 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1063,
      "speakers": "Alejandro Castillo",
      "title": "Django Rest Framework, one year after: tips, tools, tricks and pitfalls.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Django Track",
        "Django",
        "Developing with Python"
      ],
      "abstract_long": [
        "One year ago we started OnTruck. Our CTO had previously had some success with DRF so after discussing it, we decided to give it a try. After a year building a quickly iterating startup on top of Django Rest Framework, we have reflected a lot on it. Even now, with a full year of development on top of it, we still periodically discuss going forward or dropping it. For the time being it still wins. So we think we have learned a lot about it.\r\nThis talk is a walkthrough of the discoveries & learnings we have made at OnTruck during that year.\r\nWe will cover different aspects of the framework, what advantages it has given us and also what tradeoffs it has forced. We will discuss both how it relates to Django on the inside and how it relates with other systems outside. We will approach it both from a purely user perspective and also discuss some of its internals and the way we tweaked them to make it work for us. We will cover the pitfalls we have both avoided and fallen into. The tricks that have helped us keep our speed and sanity. The tools we have both used and discarded on the way. And finally the tips we would give ourselves if we were starting all over again after this year."
      ],
      "user_votes": [
        {
          "3531": 3.00
        },
        {
          "804": 7.00
        },
        {
          "251": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "2223": 10.00
        },
        {
          "3592": 7.00
        },
        {
          "3496": 3.00
        },
        {
          "3764": 7.00
        },
        {
          "3292": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "3418": 10.00
        },
        {
          "2488": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "1379": 10.00
        },
        {
          "2479": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3350": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "3407": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "663": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2582": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "85": -1.00
        },
        {
          "3339": 9.00
        },
        {
          "300": 2.00
        },
        {
          "2169": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "2209": 2.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "2286": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Application Frameworks",
        ">>> Suggested Track"
      ],
      "emails": "castillo@ontruck.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/django-rest-framework-one-year-after-tips-tools-tricks-and-pitfalls",
      "admin_type": "",
      "companies": "OnTruck"
    },
    "1035": {
      "abstract_short": "Rapid Application Development has been a major topic for the desktop development world. Yet, desktop development has proven to be at the end of its timeline and the latest major environment is now the web in its many forms. To target this, we need backend, business logic and front end to be working in unison. The solution we are proposing uses Django and Django Rest Framework as backend and business logic managers with libraries to integrate them into Angular2 front end.",
      "sub_title": "",
      "timerange": "2017-07-10 15:45:00, 2017-07-10 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ingmmo",
      "id": 1035,
      "speakers": "Marco Montanari",
      "title": "Django, Django Rest Framework and Angular2: RAD on SaaS platforms",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Django Track",
        "JavaScript Web Frameworks (AngularJS/ReactJS/...)",
        "Developing with Python",
        "Web Track"
      ],
      "abstract_long": [
        "Rapid Application Development has been a major topic for the desktop development world. Yet, desktop development has proven to be at the end of its timeline and the latest major environment is now the web in its many forms (from browser to Electron and similars). Django offers an amazing infrastructure and Django Rest Framework an amazing middleware to solve most of the problems. The RAD development on Angular2 is then enabled by a set of libraries developed at Modal Nodes for both front and backend that ease the development of the front end tools and front end interactions with both unauthenticated and authenticated systems via JWT and Djoser. Specifically, we will see the changes in the metadata that will enable better interactions and the usage of both the backend elements and the front-end ones in order to ease development."
      ],
      "user_votes": [
        {
          "3256": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3418": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "1379": 3.00
        },
        {
          "2813": 7.00
        },
        {
          "3350": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "2875": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "2985": 10.00
        },
        {
          "3339": 6.00
        },
        {
          "3407": 9.00
        },
        {
          "300": -1.00
        },
        {
          "3382": 9.00
        },
        {
          "3084": -1.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Web",
        ">>> Suggested Track",
        ">>> Suggested Track"
      ],
      "emails": "marco.montanari@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/django-django-rest-framework-and-angular2-rad-on-saas-platforms",
      "admin_type": "",
      "companies": "Modal Nodes"
    },
    "1147": {
      "abstract_short": "You have a legacy code and you want to improve it with best practices, then this talk is for you. \r\nYou don't want to break it but you don't want to change it because you can break it at all times, we will show you how to improve an existing code with some tools and best practices, and your code can be deploy on Friday evening with no risk.",
      "sub_title": "",
      "timerange": "2017-07-11 15:45:00, 2017-07-11 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@matrixise",
      "id": 1147,
      "speakers": "Stephane Wirtel",
      "title": "Django: From a nightmare to a dream with Best Practices.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Best Practice",
        "Django",
        "Test Driven Development (TDD)"
      ],
      "abstract_long": [
        "With the adventure in the source code of the site of EuroPython, we have detected that the code was difficult to maintain. With the members of the Web team, we have started to refactor the code with the best practices and good concept. Also, we will see some awesome libraries for the Django project.\r\n\r\nIn brief, you have a legacy code and you want to improve it with best practices, then this talk is for you. \r\n\r\nYou don't want to break it but you don't want to change it because you can break it at all times, we will show you how to improve an existing code with some tools and best practices, and your code can be deploy on Friday evening with no risk.\r\n\r\nFrom a nightmare to a dream.\r\n\r\nKeywords, TDD, Refactoring, Tests, BDD, Selenium, CI, and many more..."
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "2356": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "251": 3.00
        },
        {
          "1481": 7.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3668": 10.00
        },
        {
          "3592": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "3764": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "3722": 3.00
        },
        {
          "3554": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3574": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "3298": 3.00
        },
        {
          "2985": 10.00
        },
        {
          "85": -1.00
        },
        {
          "1897": 2.00
        },
        {
          "3703": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "468": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 2.00
        },
        {
          "242": 10.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Application Frameworks",
        "Testing"
      ],
      "emails": "stephane@wirtel.be",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/django-from-a-nightmare-to-a-dream-with-best-practices",
      "admin_type": "",
      "companies": "Mgx.IO"
    },
    "1080": {
      "abstract_short": "When working with pytest and custom plugins things can get eery when trying to mimic your Jenkins environment for debugging your tests locally, specially across your team and their workspaces.\r\nIn this talk will go through the challenges faced to containerize a wild pytest environment.",
      "sub_title": "",
      "timerange": "2017-07-13 14:35:00, 2017-07-13 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@https://twitter.com/grafuls08",
      "id": 1080,
      "speakers": "Gonzalo Rafuls",
      "title": "Dockerized pytests",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "python",
        "Test Libraries (pyTest/node/...)",
        "Docker",
        "Testing",
        "Jenkins"
      ],
      "abstract_long": [
        "When working with pytest and custom plugins things can get eery when trying to mimic your Jenkins environment for debugging your tests locally, specially across your team and their workspaces.\r\nIn this talk will go through the challenges faced to containerize a wild pytest environment.\r\n\r\nTopics:\r\n\r\n- Running Pytest on Jenkins jobs\r\n\r\n- Pytest custom plugins\r\n\r\n- Challenges for locally debugging/replicating a Jenkins job/pytest run\r\n\r\n- Dockerizing pytest and it's dependencies"
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "1878": 7.00
        },
        {
          "3364": 7.00
        },
        {
          "804": 7.00
        },
        {
          "2113": 10.00
        },
        {
          "74": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "3311": 10.00
        },
        {
          "251": 7.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "564": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "3328": 7.00
        },
        {
          "419": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "3456": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "316": 10.00
        },
        {
          "2479": 7.00
        },
        {
          "300": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "306": 7.00
        },
        {
          "1102": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 7.00
        },
        {
          "58": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "468": -1.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "93": 2.00
        },
        {
          "380": 2.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 6.00
        },
        {
          "105": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 9.00
        },
        {
          "2698": 2.00
        },
        {
          "3076": 9.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Testing",
        "DevOps",
        "Testing",
        "Testing"
      ],
      "emails": "grafuls@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/dockerized-pytests",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "975": {
      "abstract_short": "This talk overviews the logging module of the standard library and demonstrates some basic best practices and techniques to make the most out of our logging when we actually need it.\r\nWe will cover not only how to use the logging library but also how it is designed, how it works internally and how to extended it further than the basic usage.",
      "sub_title": "",
      "timerange": "2017-07-10 15:45:00, 2017-07-10 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@mariocj89",
      "id": 975,
      "speakers": "Mario Corchero",
      "title": "Effortless Logging - Let the loggers work for you",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Beginners",
        "Python general",
        "Developing with Python",
        "Best Practice",
        "Programming"
      ],
      "abstract_long": [
        "Logs are your best friends on those late nights when you try to troubleshoot that problem in production that was written by a friend of you who is on holidays at the moment. Logs are the main way to know what is happening at runtime with an running application but as we don\u2019t realize how important they are until we actually need them it is usually an under appreciated part of our development process.\r\n\r\nThis talks overviews the logging module of the standard library and demonstrates some basic best practices and techniques make the most out of our logging when we need it.\r\nAfter this talk you will be fully familiar not only on how to use the logging library but also how it is actually designed, how it works, how to extended further than the basic usage and some sample recipes and configurations for complex applications."
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "74": 3.00
        },
        {
          "468": 10.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "1022": 3.00
        },
        {
          "564": 3.00
        },
        {
          "1466": 7.00
        },
        {
          "2794": 10.00
        },
        {
          "419": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "306": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2127": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "310": 2.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 10.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "242": 7.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "Level: Beginner/Intermediate\r\nDuration: 30m preferred\r\n\r\n## Audience:\r\nThis talk is aimed to developers proficient in python but without a deep understanding on how the logging module works nor how can it be used for more advanced use cases. Developers will leave the talk knowing how to efficiently log within their applications or blend the logging module to fit their needs.\r\n\r\n## Outline:\r\n\r\nThis is the outline for a 30 minute slot. The time in minutes is between parenthesis for each of the sections.\r\n\r\n 0. Intro ( 1m )\r\n 1. Why logging is important (4m)\r\n 2. Overview of the standard library \u201clogging\u201d (10m)\r\n   1. The workflow\r\n   2. Record\r\n   3. Handlers\r\n   4. Loggers\r\n   5. Filters\r\n   6. The API (Getting loggers, logging info/warn/error/critical, exceptions)\r\n 3. Configuration (5m)\r\n   1. basicConfig and dictConfig\r\n   2. Sample recipes\r\n 4. Advanced use cases (10m)\r\n    1. Multiple rotated file handlers (for req/responses. For debug/info, etc)\r\n    2. Adding custom filters to enrich the context\r\n    3. Creating a custom handler that buffers the logs\r\n    4. Logging JSON\r\n    5. List and overview the existing handlers\r\n    6. Logging Adapters\r\n 5. FAQ (5m)\r\n\r\n## Speaker\r\n\r\nI am a speaker that attempts to put as few text and as much fun as possible in the slides. I think it\u2019s better to get some basic ideas out of the audience and provide pointers to advance material for the people that want more, that overwhelming everyone with cluttered slides.\r\n\r\nI have given talks in the PythonSpain, PyConUs, Fosdem and Lighting talks in previous EuroPython.\r\n",
      "tag_categories": [
        "Educational",
        "Python",
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        "Programming"
      ],
      "emails": "mariocj89@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/effortless-logging",
      "admin_type": "",
      "companies": "Bloomberg LP"
    },
    "884": {
      "abstract_short": "There are times when fast command execution times really matter. This talk will show effective ways of measuring execution times and how Python compares to other interpreted languages in terms of start up performance. We\u2019ll explore the possibility of using  MicroPython to achieve much faster start up times. Finally we\u2019ll see an example of bash completion for pip install that completes the names of available packages live from a remote pypi mirror implemented in  MicroPython.",
      "sub_title": "",
      "timerange": "2017-07-14 15:45:00, 2017-07-14 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 884,
      "speakers": "Marwan Al-Sabbagh",
      "title": "Executing scripts in a few milliseconds with MicroPython",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Unix",
        "MicroPython",
        "Command-Line"
      ],
      "abstract_long": [
        "Command execution time can become important in a number of applications. Commands executed in command-line completion need to execute in less then 100ms or users will perceive a delay. In Shell scripting one might want to execute commands repeatedly in a for loop and fast execution times makes this more feasible. \r\n\r\nPython is a very powerful language but has a much slower startup time compared to other interpreted languages like Perl, Lua and Bash. It can take up to 10 times longer to startup then some of these other languages.\r\n\r\nMicroPython was written as a lean implementation of Python 3 with a small subset of the standard library mainly intended to run on microcontrollers. But it happily runs on Unix systems with excellent startup performance, making it an ideal candidate for implementing certain time sensitive commands.\r\n\r\nThis talk will:\r\n\r\n1. Explain when achieving fast execution times matters and when it doesn\u2019t.\r\n\r\n2. Present two different approaches to measuring command execution time, one simple and the other more detailed and accurate.\r\n\r\n3. Compare execution times of a simple set of scripts that add two numbers in an number of different interpreted languages (micropython, python3, awk, perl, lua, bash). \r\n\r\n4. Present an example use case of MicroPython on Unix. Bash completion for pip install that completes the names of available packages live from a remote pypi mirror.\r\n\r\n5. Demonstrate the auto completion script with pip on a local pypi mirror.\r\n\r\n"
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "74": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "394": 3.00
        },
        {
          "2063": 7.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "1481": 3.00
        },
        {
          "3372": 10.00
        },
        {
          "1900": 10.00
        },
        {
          "1022": 3.00
        },
        {
          "2069": 7.00
        },
        {
          "2488": 10.00
        },
        {
          "789": 10.00
        },
        {
          "2865": 3.00
        },
        {
          "468": 3.00
        },
        {
          "1884": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "3084": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "3398": 7.00
        },
        {
          "3360": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 7.00
        },
        {
          "58": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "646": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "545": 6.00
        },
        {
          "310": 2.00
        },
        {
          "3498": 10.00
        },
        {
          "2660": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Operating Systems",
        "Python",
        "Programming"
      ],
      "emails": "marwan.alsabbagh@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/executing-scripts-in-under-a-millisecond-with-micropython",
      "admin_type": "",
      "companies": "KFH - Bahrain"
    },
    "1042": {
      "abstract_short": "ML estimators don't have to be black boxes. Interpretability has many benefits: it is easier to debug interpretable models, humans trust decisions of such models more.\r\n\r\nIn this talk I\u2019ll give an overview of ML models interpretation and debugging methods (linear models, decision trees, tree ensembles, arbitrary classifiers) and show how to use eli5 Python library to inspect and interpret estimators from popular ML libraries like scikit-learn and xgboost.",
      "sub_title": "",
      "timerange": "2017-07-13 14:35:00, 2017-07-13 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 1042,
      "speakers": "Mikhail Korobov",
      "title": "Explaining behavior of Machine Learning models with eli5 library",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Algorithms",
        "Predictions",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "ML estimators don't have to be black boxes. Interpretability has many benefits: it is easier to debug interpretable models, humans trust decisions of such models more.\r\n\r\nIn this talk I\u2019ll give an overview of ML models interpretation and debugging techniques. I\u2019ll cover\r\n\r\n - linear models,\r\n - decision trees, \r\n - tree ensembles, \r\n - arbitrary classifiers using LIME algorithm.\r\n\r\nThe talk focus is on explanation algorithms, because it is important to be aware of pitfalls and limitations of the explanation method to be able to interpret an explanation correctly. I\u2019ll also show how to use these techniques in practice, to debug and explain behavior of estimators from Python ML libraries like scikit-learn and xgboost using open-source [eli5][1] library.\r\n\r\nAttendees will get both practical and theoretical understanding of these explanation methods. Target audience is ML practitioners who want to \r\n\r\n1) get a better quality from their ML pipelines - understanding of why a wrong decision happens is often a first step to improve the quality of an ML solution;\r\n\r\n2) explain ML model behavior to clients or stakeholders - inspectable ML pipelines are easier to \u201csell\u201d to a client; humans trust such models more because they can check if an explanation is consistent with their domain knowledge or gut feeling, understand better shortcomings of the solution and make a more informed decision as a result.\r\n\r\n  [1]: https://github.com/TeamHG-Memex/eli5\r\n"
      ],
      "user_votes": [
        {
          "1878": 10.00
        },
        {
          "1973": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "3404": 10.00
        },
        {
          "3722": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "3314": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3007": 10.00
        },
        {
          "300": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3597": 3.00
        },
        {
          "3398": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 10.00
        },
        {
          "3628": 9.00
        },
        {
          "3143": 6.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "kmike84@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/explaining-behavior-of-machine-learning-models-with-eli5-library",
      "admin_type": "",
      "companies": "ScrapingHub Inc."
    },
    "1051": {
      "abstract_short": "Each European nation is required to provide on a yearly basis all the data regarding air quality measurements as sets of interlinked XML files. Despite the fact that public interest on issues related to air quality is growing, there is no easy way for a data scientist to  easily access this dataset. I will describe the Python tools that can be used to to access, query, and extract the air quality data and how interesting analysis can be made using Numpy, Pandas and data visualization libraries.",
      "sub_title": "",
      "timerange": "2017-07-12 15:45:00, 2017-07-12 16:15:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 1051,
      "speakers": "Luca Liberti",
      "title": "Exploring European Air Quality Data with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Visualization",
        "Data",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "RESTful"
      ],
      "abstract_long": [
        "Each European nation is required to provide on a yearly basis all the data regarding air quality measurements. Data is transmitted to the European Environmental Agency (EEA)  as sets of inter-linked XML files. \r\nThis dataset is extremely interesting to every data scientist  carrying out studies on health, environmental or economic issues that might be impacted by air quality. While EEA provides access to the original transmission files and to statistical aggregations calculated on the dataset, as of today, there is no way to easily query and extract the data through a modern web API. I will describe a series of techniques we developed in Python to give anyone interested access to this dataset and even create its own rest API to serve them. This work is meant to give an example of how the open source tools developed by the  Python community are making data access and analysis available to everyone . \r\nIn particular I will describe the tools we created to access, query, and extract the air quality data and how interesting analysis can be made using Numpy, Pandas and data visualization libraries. I will also provide an example of how a local replica of the dataset can be easily served through a RESTful API and shared within an organization. "
      ],
      "user_votes": [
        {
          "1878": 10.00
        },
        {
          "74": 7.00
        },
        {
          "2209": 3.00
        },
        {
          "251": 3.00
        },
        {
          "1924": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3328": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "3597": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "2365": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "300": 7.00
        },
        {
          "58": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "3506": 2.00
        },
        {
          "3628": -1.00
        },
        {
          "310": 9.00
        },
        {
          "380": 6.00
        },
        {
          "562": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 6.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science",
        "Web"
      ],
      "emails": "luca_liberti@yahoo.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/explorign-european-air-quality-data-with-python",
      "admin_type": "",
      "companies": "ISPRA"
    },
    "1075": {
      "abstract_short": "In the last years climate change has become one of the most important topic. Climate forecast and climate projections data are quite complex to analyse and represent. The Python science ecosystem proves extremely effective as a platform to retrieve, analyse, process and present this type of data. The backbone of the platform is the n-dimensional array library xarray that provides the perfect mix between pandas data structures and dask performance and parallelization.",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@fnazzaro89",
      "id": 1075,
      "speakers": "Francesco Nazzaro",
      "title": "Facing the challenge of climate change with xarray and Dask",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Visualization",
        "Jupyter/iPython Notebook",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science"
      ],
      "abstract_long": [
        "In the last years climate change has become one of the most important topic. For any period longer than a few days science is not able to provide comparable forecasts, but still a lot of useful information about future climate conditions can be gained on time scale of a few months to even several years.\r\n\r\nClimate forecast and climate projections data are quite complex to analyse and represent. The Python science ecosystem proves extremely effective as a platform to retrieve, analyse, process and present this type of data. The backbone of the platform is the n-dimensional array library xarray that provides the perfect mix between pandas data structures and dask performance and parallelization.\r\n\r\nReliable climate forecasts and climate projections are now available from the Copernicus Climate Change Service, operated by ECMWF, that will become the central hub for European effort in study and mitigate climate change impacts. The service also provides access to an open cloud platform, the CDS Toolbox, that is based on the Python 3 xarray/dask/pandas stack.\r\n\r\nIn this talk I will present how to retrieve, analyse, process and display climate data in a generic use case with xarray and with the Copernicus CDS Toolbox."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "3637": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3328": 7.00
        },
        {
          "480": 10.00
        },
        {
          "3392": 7.00
        },
        {
          "2865": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "2365": 10.00
        },
        {
          "3696": 10.00
        },
        {
          "750": 10.00
        },
        {
          "300": 3.00
        },
        {
          "3628": -1.00
        },
        {
          "787": 9.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "171": 9.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Python",
        "Data Science",
        "Data Science"
      ],
      "emails": "francesconazzaro89@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/facing-the-challenge-of-climate-change-with-xarray-and-dask-1",
      "admin_type": "",
      "companies": "B-Open Solutions"
    },
    "1041": {
      "abstract_short": "A year ago we decided to use Django and, specifically, DRF as the cornerstone of our upcoming fast-iterating web platform. In this talk I discuss why and how the architecture has evolved, key decisions made and the lessons we learned along the way.",
      "sub_title": "",
      "timerange": "2017-07-13 16:20:00, 2017-07-13 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@samufuentes",
      "id": 1041,
      "speakers": "Samuel Fuentes",
      "title": "Fast product development using Django Rest Framework. #lessonslearned",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Web General",
        "Use Case",
        "Django",
        "Architecture",
        "APIs"
      ],
      "abstract_long": [
        "A year ago we decided to use Django and, specifically, DRF as the cornerstone of our upcoming fast-iterating web platform. In this talk I discuss why and how the architecture has evolved, key decisions made and the lessons we learned along the way.\r\n\r\nI'll share the techniques we used for iterating quickly and how the technology supported (and shaped) them. In addition some quirks and DRF-specific tricks will be brought along the way.\r\n\r\nExpect a general talk about how Python (and specifically DRF) can be used as a based for quick product iterations, a discussion regarding how to build and evolve a platform to meet those needs and some DRF-specific tidbits. No previous knowledge is required but experience in web development will make the content more accessible."
      ],
      "user_votes": [
        {
          "3531": 3.00
        },
        {
          "3637": 3.00
        },
        {
          "2209": 3.00
        },
        {
          "251": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "3764": 7.00
        },
        {
          "419": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "1379": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "3574": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "1956": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "3298": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "85": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "489": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 9.00
        },
        {
          "468": 2.00
        },
        {
          "171": -1.00
        },
        {
          "2286": 6.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Web",
        "Best Practice and Use Cases",
        "Application Frameworks",
        "Programming",
        "Web"
      ],
      "emails": "sf@samuelfuentes.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/fast-product-development-using-django-rest-framework-lessonslearned-after-1y",
      "admin_type": "",
      "companies": "OnTruck"
    },
    "1031": {
      "abstract_short": "In a coding competition you want to solve problems \"fast\"... why would you choose a \"slow\" language like Python? Because the \"slow\" Python wins competitions more often that most people think.",
      "sub_title": "",
      "timerange": "2017-07-12 11:20:00, 2017-07-12 12:05:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@alexamici",
      "id": 1031,
      "speakers": "Alessandro Amici",
      "title": "Fast Python! Coding competitions with CPython and PyPy",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Algorithms",
        "Developing with Python",
        "PyPy",
        "Fun and Humor",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)"
      ],
      "abstract_long": [
        "In a coding competition you want to solve problems \"fast\"... why would you choose a \"slow\" interpreted language like Python? Because the \"slow\" Python wins competitions more often that most people think.\r\n\r\nWe will show how coding competitions work, what are the resources and constraints that competitors need to take into account, and we will find out that, like very often in real life, the actual processing time is only a small term in the complex equation that describe a competition.\r\n\r\nThe \"faster\" PyPy may help in gaining raw speed, but that is not the real advantage it gives you in a competition."
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "804": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "394": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "2063": 7.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "685": 7.00
        },
        {
          "564": 3.00
        },
        {
          "3292": 10.00
        },
        {
          "2069": 7.00
        },
        {
          "480": 10.00
        },
        {
          "2488": 10.00
        },
        {
          "722": 3.00
        },
        {
          "3573": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "1884": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "3402": 10.00
        },
        {
          "1132": 7.00
        },
        {
          "300": 10.00
        },
        {
          "3696": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "663": 3.00
        },
        {
          "750": 10.00
        },
        {
          "3469": 7.00
        },
        {
          "3777": 3.00
        },
        {
          "3695": 7.00
        },
        {
          "3318": 7.00
        },
        {
          "3278": 7.00
        },
        {
          "2582": 3.00
        },
        {
          "1355": 6.00
        },
        {
          "2698": 6.00
        },
        {
          "787": 9.00
        },
        {
          "545": 2.00
        },
        {
          "3339": 6.00
        },
        {
          "767": 6.00
        },
        {
          "1956": 9.00
        },
        {
          "2660": 6.00
        },
        {
          "3382": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "171": -1.00
        },
        {
          "2286": 2.00
        },
        {
          "3743": 10.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3477": 3.00
        },
        {
          "3076": 10.00
        },
        {
          "3629": 7.00
        },
        {
          "242": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        ">>> Suggested Track",
        "Python",
        "Everything Else",
        "Data Science"
      ],
      "emails": "a.amici@bopen.eu",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/coding-competitions-with-python-and-pypy",
      "admin_type": "",
      "companies": "B-Open Solutions srl"
    },
    "1128": {
      "abstract_short": "Airflow is a powerful system to schedule workflows and define them as a collection of interdependent scripts. It is the perfect companion to do extract/transform/load pipelines into data warehouses, such as Redshift.\r\n\r\nThis talk will introduce some of the basis of Airflow, then how you use it with Scrapy and other extractors, do some basic transformations, then taking advantage of MPP architecture of Redshift to do parallel loading.",
      "sub_title": "",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@flagZ",
      "id": 1128,
      "speakers": "Federico Marani",
      "title": "Feeding data to AWS Redshift with Airflow",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Big Data",
        "Databases",
        "Science Track",
        "Analytics"
      ],
      "abstract_long": [
        "Airflow is a powerful system to schedule workflows and define them as a collection of interdependent scripts. It is the perfect companion to do extract/transform/load pipelines into data warehouses, such as Redshift.\r\n\r\nThis talk will introduce some of the basis of Airflow and some of the concepts that are data pipeline specific, like backfills, retries, etc. Then there will be some examples on how to integrate this with Scrapy and other Python projects, along with some lessons learned there. \r\n\r\nAt the end, there will be a part dedicated to Redshift, how to structure data there, how to do some basic transformation pre-loading, how to manage the schema using Alembic.\r\n\r\nAn understanding how how Scrapy work will be beneficial, along with some database experience.  I assume the audience will have the basics around how unix processes and signals work. How to model in Redshift for performance won't be covered."
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "564": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "3573": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3554": 3.00
        },
        {
          "316": 10.00
        },
        {
          "3369": 7.00
        },
        {
          "3492": 10.00
        },
        {
          "300": 7.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "171": 6.00
        },
        {
          "2237": 6.00
        },
        {
          "3495": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Databases",
        ">>> Suggested Track",
        "Data Science"
      ],
      "emails": "flagzeta@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/feeding-data-to-aws-redshift-with-airflow",
      "admin_type": "",
      "companies": ""
    },
    "1053": {
      "abstract_short": "Our program crashes, so we run it again - and it crashes again. It\u2019s a madness that afflicts programmers. In fact, the activity of debugging has an inherent tendency to cognitive breakdown. How can we resist its merciless pull, and turn debugging into a methodical, safe, successful discipline?",
      "sub_title": "Tragedy and madness for programmers and pilots",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@EvilDMP",
      "id": 1053,
      "speakers": "Daniele Procida",
      "title": "Fighting the controls",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Debugging",
        "Programming"
      ],
      "abstract_long": [
        "Damn it, this can\u2019t be happening! As programmers, we find ourselves time and again spiralling down into tighter loops of desperate troubleshooting, fighting the controls of our machinery and descending into what feels like a kind of madness. Later, when it\u2019s all over, we realise that the clues we needed to recover the situation were staring us in the face all along, but we somehow couldn\u2019t even see them.\r\n\r\nThere\u2019s a reason for this: the nature of debugging for programmers means that it quickly tips us into these states, and then very effectively keeps us there.\r\n\r\nIn programming we have worked hard to improve some aspects of programmers\u2019 work, creating methodologies, development frameworks, paradigms, practices and thinking deeply about how to solve the problems of producing good code. We have done very little work to improve the way we debug our code,\r\n\r\nThe good news is that although programmers have not developed very adequate strategies or techniques for mitigating the risks that debugging draws us into, other industries, and in particular aviation, have. We can learn from their lessons without paying their price.\r\n\r\n"
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "251": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "685": 3.00
        },
        {
          "3592": 10.00
        },
        {
          "3428": 10.00
        },
        {
          "245": 3.00
        },
        {
          "3328": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "489": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3084": -1.00
        },
        {
          "2259": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "71": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "58": 10.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "930": 2.00
        },
        {
          "767": 9.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": 2.00
        },
        {
          "105": 7.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "**Note** I already have the honour of speaking at EuroPython 2017. I have submitted this talk just in case an opportunity arises for a second slot.  I gave a version of this talk at DjangoCon Europe 2017. I don\u2019t usually like to repeat a talk, but I was taken aback at the effect it had, and the response from attendees, and feel it is worth repeating.",
      "tag_categories": [
        "Testing",
        "Programming"
      ],
      "emails": "daniele.procida@divio.ch",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/fighting-the-controls",
      "admin_type": "",
      "companies": "Divio"
    },
    "1085": {
      "abstract_short": "Static analysis is a powerful technique for improving the quality of software.\r\nAt lgtm.com, we can find bugs in your Python code without the annoyance of many false positives.\r\n\r\nThis talk will cover:\r\n1. What is static analysis?\r\n2. How you can use the static analysis provided by lgtm.com to improve your code with little effort.\r\n3. The techniques we use to provide deep and accurate analysis with few false positives.\r\n",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 1085,
      "speakers": "Mark Shannon",
      "title": "Finding bugs for free: The magic of static analysis.",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Developing with Python",
        "Tooling",
        "Static Analysis",
        "Code Analysis"
      ],
      "abstract_long": [
        "Overview\r\n\r\n    Static analysis is a powerful technique for improving the quality of software. It allows you to find bugs in your Python code without any the need for any annotations. \r\n\r\n    At lgtm.com we provide state-of-the-art static analysis for a number of languages including Python. Our Python analysis can find bugs without the annoyance of many false positives. We have already found bugs in the standard library, requests, numpy and many others.\r\n\r\n    In this talk I will briefly describe what static analysis is, how it can be useful to you, and then give an overview of the techniques we use.\r\n\r\nIntended Audience\r\n\r\n    This talk is aimed at all Python developers, although I expect that those who have used pyflakes, pep8, pylint or mypy in the past will find it the most accessible.\r\n    I hope that this talk will inspire developers to start using static analysis tools (hopefully ours) and to produce better code as a result.\r\n    I will assume that the audience knows Python well, but knows little or nothing about static analysis.\r\n    \r\n(lgtm.com is a commercial project that is free to use for open-source software) "
      ],
      "user_votes": [
        {
          "804": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 7.00
        },
        {
          "3543": 7.00
        },
        {
          "251": 7.00
        },
        {
          "3310": 10.00
        },
        {
          "3420": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3370": 3.00
        },
        {
          "3278": 7.00
        },
        {
          "685": 3.00
        },
        {
          "1900": 10.00
        },
        {
          "564": 7.00
        },
        {
          "245": 10.00
        },
        {
          "3496": 3.00
        },
        {
          "484": 10.00
        },
        {
          "3463": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "2069": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "3392": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "300": 10.00
        },
        {
          "2259": 10.00
        },
        {
          "2057": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "71": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 3.00
        },
        {
          "3298": 3.00
        },
        {
          "468": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "3314": -1.00
        },
        {
          "767": 9.00
        },
        {
          "310": 6.00
        },
        {
          "3407": 6.00
        },
        {
          "2660": 6.00
        },
        {
          "3382": -1.00
        },
        {
          "380": -1.00
        },
        {
          "3703": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 6.00
        },
        {
          "171": 9.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3076": 7.00
        },
        {
          "3384": 7.00
        },
        {
          "242": 3.00
        },
        {
          "3084": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Programming",
        "Everything Else",
        "Programming"
      ],
      "emails": "mark@hotpy.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/finding-bugs-for-free-the-magic-of-static-analysis",
      "admin_type": "",
      "companies": "Semmle"
    },
    "985": {
      "abstract_short": "For distributed services, you want a set of end-to-end tests that capture critical workflows. These tests require fixture data in all of your downstream service datastores. \r\nI'm going to discuss ways we've explored at Yelp to generate that data. I'll explain what fixture factories are, how to implement them and how to integrate them with pytest. I'll show you how this leads to more maintainable and easier to adapt code as well as faster test execution.",
      "sub_title": "",
      "timerange": "2017-07-13 16:20:00, 2017-07-13 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@s_jaensch",
      "id": 985,
      "speakers": "Stephan Jaensch",
      "title": "Fixture factories for faster end-to-end tests",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Developing with Python",
        "Test Libraries (pyTest/node/...)",
        "Development",
        "Testing",
        "Microservices"
      ],
      "abstract_long": [
        "When developing and maintaining many different services, unit testing is not enough to make sure your code works in production. By now, many teams doing SOA (service-oriented architectures) have a set of end-to-end tests that cover critical workflows to make sure these work. For these tests, all of the utilized services need to have the proper test fixture data in their datastores. This often leads to developers having to deal with raw datastore data (like JSON or SQL) for these tests, making the authoring of those tests very slow, tedious, and error-prone.\r\n\r\nThis talk is going to discuss several approaches we tried at Yelp to generating these fixture data in a quicker, developer-friendly and more correct way. \r\n\r\nThe main part of the talk will be a deep-dive into what fixture factories are, how to implement them and how to integrate them with pytest, the leading Python testing framework. I'll show you several other benefits this approach has over writing raw fixture data and how this leads to more maintainable and easier to adapt code. We'll also explore how you can then run your tests in parallel, cutting down runtime drastically."
      ],
      "user_votes": [
        {
          "683": 10.00
        },
        {
          "3256": 10.00
        },
        {
          "74": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2865": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "2259": 10.00
        },
        {
          "3084": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "589": 10.00
        },
        {
          "1132": 10.00
        },
        {
          "3398": 7.00
        },
        {
          "85": 7.00
        },
        {
          "3360": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3296": 10.00
        },
        {
          "3293": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "3143": 7.00
        },
        {
          "3818": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "468": 2.00
        },
        {
          "171": -1.00
        },
        {
          "105": 3.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 6.00
        }
      ],
      "abstract_extra": "I've given talks at the last two EuroPythons in Bilbao that have been well received, and I'd love to do so again. I've also spoken at the Python Unconference in Germany (that I'm co-organizing) as well as at the IT Weekend in the Ukraine.\r\n\r\nI'm a tech lead at Yelp, working on the core infrastructure of the Commerce group. My main focus area is inter-service development. I'm one of the maintainers of the Python stack for Swagger / OpenAPI (bravado etc). I really enjoy meeting users of these libraries at EuroPython.",
      "tag_categories": [
        ">>> Suggested Track",
        "Testing",
        "Programming",
        "Testing",
        "Programming"
      ],
      "emails": "sjaensch@yelp.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/fixture-factories-for-faster-end-to-end-tests",
      "admin_type": "",
      "companies": "Yelp"
    },
    "933": {
      "abstract_short": "Our mission is to manage a huge amount of communication data in large scale industry projects. The increasing amount of communication creates the desire for a GPS helping us to navigate through the communication stream. Traveling the wild side of current CS topics in NLP, Data Science, we stumbled across amazing Python tools supporting us in our goal to navigate the project communication highway safely and therefor supporting our clients in Project & Risk Management avoiding wrong turns.",
      "sub_title": "",
      "timerange": "2017-07-14 14:35:00, 2017-07-14 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@MrHenHan, @",
      "id": 933,
      "speakers": "Henrik Hain, Stephan Gramlich",
      "title": "From an old-school data managing company to data analytics with Python",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Algorithms",
        "Use Case",
        "MongoDB",
        "RESTful",
        "Data Science"
      ],
      "abstract_long": [
        "Our mission is to manage a huge amount of communication and document data in large scale industry projects by providing web based project management systems. The increasing amount of communication creates the desire for a GPS helping us and our customers to navigate through the communication stream. Our R&D projects are focusing on topics like clustering, event detection, and network analysis (Who knows who, domain experts).\r\n\r\nTraveling the wild side of NLP, Data Science, and Analytics, we stumbled across amazing Python tools supporting us in our goal to navigate the project communication and therefor supporting our clients in Project & Risk Management avoiding wrong turns. We would like to share some of our approaches to answer our research topics and challenges:\r\n\r\nOne of the challenges, amongst others, is to utilize and adapt up to date clustering algorithms for social stream data and to expose them as reentrant services. Another one is to tailor them for the current application domain, improving clustering precision by parametrization and other means. Furthermore the integration of a Python based analytics system into an existing JAVA based application environment and eco system is required.\r\n\r\nIn addition, we would also like to share some of our \"traffic jams\" experienced during our travel starting as traditional Java/SQL focusing company that integrated Python into its development portfolio."
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "245": 10.00
        },
        {
          "3292": 10.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 10.00
        },
        {
          "3314": 3.00
        },
        {
          "316": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "3360": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3684": 3.00
        },
        {
          "2875": 10.00
        },
        {
          "2493": 3.00
        },
        {
          "468": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "3628": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "1041": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3345": 2.00
        },
        {
          "3495": 6.00
        },
        {
          "2286": 2.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "3629": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        "Databases",
        "Web",
        "Data Science"
      ],
      "emails": "h.hain@me.com, stephan.gramlich@sobis.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/from-an-old-school-data-managing-company-to-data-analytics-with-python",
      "admin_type": "",
      "companies": "SOBIS Software GmbH, Sobis Software GmbH"
    },
    "813": {
      "abstract_short": "coala is an Open Source project with >>300 contributors and more than 50 Google Summer of Code applications this year. What\u2019s behind it? How did it all start? What is the secret sauce to its growth and how do we make a living of it? This talk tells our story with the key takeaways and provides a top level story driven insight on those and more topics.",
      "sub_title": "",
      "timerange": "2017-07-10 16:20:00, 2017-07-10 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@LSchuirmann",
      "id": 813,
      "speakers": "Lasse Schuirmann",
      "title": "From Fun to Business - How Open Source Changed my Life",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "freelancing",
        "failures/mistakes",
        "Open-Source",
        "Business Track",
        "Community"
      ],
      "abstract_long": [
        "[coala][1] began as a fun project. We never believed there would be anything useful growing out of it - and yet it did. Contributors all over the world came to us and helped creating the community as it is.\r\n\r\nBut how did all of this happen? What does this mean for the main contributors? How can we make a living of an open source project?\r\n\r\nThis talk tells our story. What we did - good and bad things - so we can learn from it. From my personal open source contributions over founding an open source project to building a freelance agency and founding a startup.\r\n\r\nParticipants will learn how they can grow an open source project, automate newcomer processes and gain insights into how they can start making a living of it, possibly founding a company eventually. There is no single recipe for this but we can - and should - exchange the tips and tricks we\u2019ve gained with our ventures. This talk is for entrepreneurs, wanna-be-freelancers and future or past open source project founders.\r\n\r\nThis talk is completely new and has not been presented at any conference yet although it overlaps with previous talks of mine which have received much positive feedback at previous regional PyCons. It will be tested at a local meetup to ensure proper timing.\r\n\r\n  [1]: https://coala.io/\r\n"
      ],
      "user_votes": [
        {
          "2356": 3.00
        },
        {
          "95": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "3423": 10.00
        },
        {
          "2530": 10.00
        },
        {
          "3459": 10.00
        },
        {
          "3403": 10.00
        },
        {
          "3370": 3.00
        },
        {
          "3454": 10.00
        },
        {
          "2169": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "419": 3.00
        },
        {
          "3292": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "489": 10.00
        },
        {
          "782": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "3405": 10.00
        },
        {
          "3486": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "3507": 3.00
        },
        {
          "3360": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3684": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "646": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "545": 6.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 6.00
        },
        {
          "3376": 7.00
        },
        {
          "1878": 3.00
        },
        {
          "562": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Business",
        "Best Practice and Use Cases",
        "Open Source",
        ">>> Suggested Track",
        "Community"
      ],
      "emails": "lasse.schuirmann@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/from-fun-to-business-how-open-source-changed-my-life",
      "admin_type": "",
      "companies": "Viper Development"
    },
    "1015": {
      "abstract_short": "Tips and best practices for testing your web-app with browser automation tool Selenium, and screenshot comparison tool Needle. ",
      "sub_title": "",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@tymofiy",
      "id": 1015,
      "speakers": "Tim Babych",
      "title": "Front-end testing with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Web General",
        "Web Track",
        "Testing",
        "HTML5"
      ],
      "abstract_long": [
        "Web-developers use Python to develop web-applications, serving HTML or JSON content to user's browsers which render it. We test our applications to check that they serve content right and that they respond to HTTP requests in an expected way. However, this is not all that happens in a modern web application. There are lots of moving parts which are executed not on the server, but directly in user's browser, and they need to be tested too. The best way to check that our app works well in a browser is to test it in a browser, and Python gives you tools to do that conveniently.\r\n\r\nWith a Selenium tool and Python package, you can control the browsers, making them open web pages and interacting with them. I will show how to install Selenium and needed drivers, and tell about best practices for writing Selenium tests, such as\r\n\r\n- Page Object pattern\r\n- Put browser interactions in the page object, not the test\r\n- Put assertions in the test, not the page object\r\n- Never use time.sleep()\r\n- Always make pages wait for actions to complete\r\n- Wait for JavaScript to load\r\n\r\nTo test the visual look of your application there is a Needle tool, which lets you compare screenshots with baseline set, and highlight the differences. I will talk about how to incorporate that functionality into your tests.\r\n\r\nAs browser testing can get quite slow, I will also show how to set up running them concurrently."
      ],
      "user_votes": [
        {
          "804": 10.00
        },
        {
          "1973": 3.00
        },
        {
          "195": 10.00
        },
        {
          "3310": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "685": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "245": 3.00
        },
        {
          "3328": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "468": 3.00
        },
        {
          "2585": 10.00
        },
        {
          "1132": 10.00
        },
        {
          "3084": 3.00
        },
        {
          "3535": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2875": 7.00
        },
        {
          "3575": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "3299": 10.00
        },
        {
          "2127": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "3417": 10.00
        },
        {
          "1931": 7.00
        },
        {
          "2834": 2.00
        },
        {
          "2356": -1.00
        },
        {
          "3818": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 6.00
        },
        {
          "2286": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "2698": 9.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        ">>> Suggested Track",
        "Testing",
        "Web"
      ],
      "emails": "tim.babych@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/front-end-testing-with-python",
      "admin_type": "",
      "companies": "Sphere Software"
    },
    "856": {
      "abstract_short": "The practice in the development of advanced web applications is to break it into two main areas, the client and the server. \r\n\r\nIn this talk I'll show a framework and an application where  with the help of async processing the line between the two worlds is blurred and where it is possible to think of the application in terms of unity, where the two parts that of which the application is composed cooperate equally to maintain application state and  can communicate freely.",
      "sub_title": "...with the help of asyncio , websocket and a Python 3 to ES6 JS transpiler",
      "timerange": "2017-07-11 12:10:00, 2017-07-11 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 856,
      "speakers": "Alberto Berti",
      "title": "Get over the boundaries between client and server in web app development",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "PostgreSQL",
        "Architecture",
        "Web Track",
        "ASYNC / Concurreny",
        "JavaScript"
      ],
      "abstract_long": [
        "The practice in the development of advanced web applications is to break it into two main areas where the effort on the server, with the typical WSGI environments, focuses on data access configuration whereas the application logic is delegated mostly to the client through the use of JavaScript frameworks.\r\n\r\nThe reason for this separation into two roles lies in the need to use JavaScript on the browser and the fact that the communication channel (HTTP) and the way in which the application state is handled on the server side is still that thought to serve full web pages.\r\n\r\nIn this talk I'll show a framework and an application where the line between the two worlds is blurred and where it is possible to think of the application in terms of unity, with the two components that cooperate equally and communicate without thinking in terms of URLs or HTTP verbs .\r\n\r\nThis is made possible by the asynchronous/reactive management of the processing from the database driver to the user interaction, the use of websocket for communication and the use of Python (optional) for the development of the client part.\r\n\r\nSome technologies used are: PostgreSQL, the \"asyncpg\" driver, the \"aiohttp\" web server, Crossbar (http://crossbar.io) for the websocket comms, pkg \"metapensiero.sphinx.patchdb\" for schema upgrades, the package \"metapensiero.reactive\" and \"metapensiero.signal\" for the management of reactive event streams,the package \"Javascripthon\" for Py3 to ES6 JS transpiling."
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "804": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 3.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 7.00
        },
        {
          "1035": 10.00
        },
        {
          "3275": 3.00
        },
        {
          "480": 7.00
        },
        {
          "3605": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "1379": 7.00
        },
        {
          "2813": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "3350": 7.00
        },
        {
          "3574": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "3407": 10.00
        },
        {
          "663": 10.00
        },
        {
          "3575": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 10.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "2582": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "93": 2.00
        },
        {
          "3818": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3495": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "105": -1.00
        },
        {
          "3743": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "If this gets accepted please get it scheduled before the 15th of July because I'll be unavailable from that day on.\r\n\r\nThanks.",
      "tag_categories": [
        "Databases",
        "Programming",
        ">>> Suggested Track",
        "Programming",
        "Other Programming Languages"
      ],
      "emails": "alberto.berti@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/a-breath-of-fresh-air-in-the-development-of-web-applications-get-over-the-bound",
      "admin_type": "",
      "companies": "Arstecnica s.r.l."
    },
    "758": {
      "abstract_short": "PyMIP (Python based Machine Independent Platform) is a new Python module to integrate C, Fortran, CUDA and OpenCL codes with a simple user interface. The primary goal of PyMIP is to make it easier to use modern processors with high performance and low power such as NVIDIA GPU and Intel MIC. In this presentation, I will introduce PyMIP and show the computational performance result in NVIDIA GPU of the dynamical core of the global atmospheric model developed based on PyMIP.",
      "sub_title": "",
      "timerange": "2017-07-10 16:20:00, 2017-07-10 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 758,
      "speakers": "Ki-Hwan Kim",
      "title": "GPU Acceleration of a Global Atmospheric Model using Python based Multi-platform",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Science",
        "Science Track",
        "Best Practice",
        "C-Languages"
      ],
      "abstract_long": [
        "A global atmospheric model play an important role in short-term weather forecasting and long-term climate prediction. The model requires enormous computing resources because the all atmospheric states must be calculated every time step (usually a tens of seconds to several minutes). However, since the most atmospheric models run only on CPU machines, they are not able to use the modern microprocessors with high performance and low power such as NVIDIA GPU and Intel MIC.\r\n\r\nIt often costs a lot to convert codes from one machine to the other machine.  Although it can be accelerated on GPU and MIC using OpenMP and OpenACC directives, it is not easy to achieve peak performance. I developed a new Python module named PyMIP (Python based Machine Independent Platform) to integrate C, Fortran, CUDA and OpenCL codes with a simple user interface. The main code includes configuration, flow control, IO and MPI parallel is written by Python. Only hotspots include huge number crunching code are written by compile language as C, Fortran, CUDA and OpenCL. The hotspot codes are compiled and imported using PyMIP in runtime. PyMIP enables that a user can switch machines with simple flag.\r\n\r\nI am developing a new global atmospheric model based on PyMIP to make it easy to utilize various modern microprocessors.  In this presentation, I will introduce PyMIP and show the computational performance result in NVIDIA GPU of the dynamical core of the model developed based on PyMIP."
      ],
      "user_votes": [
        {
          "3364": 7.00
        },
        {
          "47": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "3500": 7.00
        },
        {
          "3506": -1.00
        },
        {
          "310": 9.00
        },
        {
          "1924": 6.00
        },
        {
          "2209": -1.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "468": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "3084": 3.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        "Other Programming Languages"
      ],
      "emails": "wbkifun@nate.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/gpu-acceleration-of-a-global-atmospheric-model-using-python-based-multi-platform",
      "admin_type": "",
      "companies": "Korea Institute of Atmospheric Prediction Systems"
    },
    "889": {
      "abstract_short": "Have you ever considered how many relationships you have in your virtual life? Every friend or page liked on Facebook, each connection in LinkedIn or Twitter account followed is a new relationship not only between two people, but also between their data. In Brazil only, we have 160 millions Facebook users. How can we represent and manipulate all these relationships? Graph Databases are storage systems that use graph structure (nodes and edges) to represent and store data in a semantic way.",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 889,
      "speakers": "Nicolle Cysneiros",
      "title": "Graph Databases: Talking about your Data Relationships with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Databases"
      ],
      "abstract_long": [
        "Have you ever considered how many relationships you have in your virtual life? Every friend or page liked on Facebook, each connection in LinkedIn or Twitter account followed is a new relationship not only between two people, but also between their data. In Brazil only, we have 160 millions Facebook users. How can we represent and manipulate all these relationships? Graph Databases are storage systems that use graph structure (nodes and edges) to represent and store data in a semantic way.\r\n\r\nThis talk will begin approaching the challenge in representing relationships in Relational Databases and introducing a more friendly solution using graph. The definition of Graph Database, its pros and cons and some available tools (Neo4J, OrientDB and TitanDB) will be shown during the presentation, as well as how these tools can be integrated with Python.\r\n\r\n**Outline:**\r\n\r\n - **Relationships**\r\n    - Relationships in Relational Databases\r\n    - Graph Definition\r\n    - Graph approach to represent relationships\r\n - **Graph Databases**\r\n    - Definition\r\n    - Advantages\r\n - **Neo4J**\r\n    - Usage Examples\r\n    - Integration with Python\r\n - **Comparison between Graph Databases**\r\n\r\n - **Comparison between Neo4J and Relational Database**\r\n\r\n - **Applications**\r\n\r\n"
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "1897": 6.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "3310": 10.00
        },
        {
          "2209": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "2794": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "1884": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3314": 7.00
        },
        {
          "2813": 7.00
        },
        {
          "2585": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "2259": 7.00
        },
        {
          "1102": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "2365": 3.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 7.00
        },
        {
          "3318": 7.00
        },
        {
          "93": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 6.00
        },
        {
          "3495": 2.00
        },
        {
          "171": 2.00
        },
        {
          "2286": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "468": 2.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Databases"
      ],
      "emails": "nicolle.cysneiros@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/graph-databases-talking-about-your-data-relationships-with-python",
      "admin_type": "",
      "companies": "Labcodes Software Studio"
    },
    "790": {
      "abstract_short": "This talk is about high performance and how Green Threads can help us. In 30 minutes we'll discuss about multiprocessing from basic threads to real world with green threads. We'll see patterns, tools as gevent and native API, benefits and drawbacks on green threads. Our agenda will be:\r\n\r\nUnderstanding threads\r\nThreads and multiprocess API\r\nUnderstanding Green threads\r\nGreen thread Patterns and tools\r\nParallelism x asynchronism\r\nWhy, when and how ",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ViniciusPach",
      "id": 790,
      "speakers": "Vinicius Pacheco",
      "title": "Green threads in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Python 3",
        "Multi-Processing",
        "Python 2",
        "CPython",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "This talk is for general public with problems to scale. The good background for this talk is people with minimal knowledge about threads. After this talk I expect that the audience can be enable to understand multiprocessing, when use and which tools and methods are appropriate for each case. \r\n\r\n1. Understanding threads\r\nIt's the first moment on the talk. Here I'll speak about the thread theory and what happen when we use threads on the OS\r\n\r\n2. Threads and multiprocess API\r\nI'll give simple examples about what python give us to use threads and multiprocessing perhaps with two APIs \r\n    https://docs.python.org/3/library/threading.html\r\n    https://docs.python.org/3.5/library/multiprocessing.html\r\n\r\n3. Understanding Green threads\r\nHere I'll speak about green threads theory and what happen when we use green threads on our OS\r\n\r\n4. Green thread Patterns and tools\r\nHere I'll show few examples with keep alive patterns, discuss about a few tools and show gevent and asyncio examples\r\n\r\n5. Parallelism x asynchronism\r\nI'll show the diference between parallelism and asynchronism discussing about the two theories\r\n\r\n6. Why, when and how\r\nIt's is the last talk moment and I'll explain the how complex is work with multiprocess showing cases like queues consume and APIs consume   "
      ],
      "user_votes": [
        {
          "1912": 10.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "3310": 3.00
        },
        {
          "251": 10.00
        },
        {
          "135": 10.00
        },
        {
          "2119": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "2449": 10.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "3592": 10.00
        },
        {
          "245": 7.00
        },
        {
          "564": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "419": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "3392": 3.00
        },
        {
          "3418": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "468": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "306": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "2259": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "2365": 3.00
        },
        {
          "1956": 7.00
        },
        {
          "651": 3.00
        },
        {
          "650": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "3628": 6.00
        },
        {
          "2834": 2.00
        },
        {
          "767": 6.00
        },
        {
          "2209": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 2.00
        },
        {
          "562": 2.00
        },
        {
          "2286": 6.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 2.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming",
        "Python",
        "Python",
        "Programming"
      ],
      "emails": "vfpweb@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/green-threads-in-python",
      "admin_type": "",
      "companies": "Eventbrite"
    },
    "930": {
      "abstract_short": "With more and more repositories moving to GitHub, chances are a README file is the first thing you see when hearing about a new project. Yet as developers, it seems, we sometimes do not care enough about one of the most important things in running a community: Documentation. Your project's README file is documentation and if done right, it can be the one key factor in getting people to use your project and even contribute to it.\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@hackebrot",
      "id": 930,
      "speakers": "Raphael Pierzina",
      "title": "Hi, my name is README! - A Look at Why Docs are So Important",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Best Practice",
        "Open-Source",
        "Documentation",
        "Community"
      ],
      "abstract_long": [
        "When starting a new project, as developers we usually get right into hacking things, like tinkering with libs that we would like to learn or solving a particular problem as quickly a possible. Occasionally we also decide to publish the resulting package to PyPI, so that others can use our nifty code, submit a pull request and maybe even form a community around the project.\r\n\r\nIf you're lucky someone might find it on the front-page of PyPI or the GitHub search or maybe even Hacker News or Reddit. What happens next is on you really.  But what does that mean?\r\n\r\nBefore jumping right to the command line and installing your package, those who are interested usually try to find out what problems the project is solving and how it can help them with their own. That's what your README file is for - it's most likely the first thing potential users read, that you control.\r\n\r\nA good README briefly and concisely explains what your software does, how it can be installed and what API it exposes. You also want to provide information on the requirements, the license it uses and how the project is managed. Who are you? How to get in touch to report problems and give feedback? Where can I find the Code of Conduct for this project?\r\n\r\nThis talk is for everyone who is interested in working on open source projects and wants to know how documentation can help newcomers and more experienced users use your code and to encourage them to engage in the community.\r\n"
      ],
      "user_votes": [
        {
          "3364": 7.00
        },
        {
          "683": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "251": 3.00
        },
        {
          "394": 3.00
        },
        {
          "3308": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 3.00
        },
        {
          "380": 10.00
        },
        {
          "3592": 7.00
        },
        {
          "2227": 3.00
        },
        {
          "484": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "782": 10.00
        },
        {
          "2493": 3.00
        },
        {
          "468": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "71": 10.00
        },
        {
          "2365": 3.00
        },
        {
          "69": 7.00
        },
        {
          "3469": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3566": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "509": 3.00
        },
        {
          "3084": -1.00
        },
        {
          "489": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Open Source",
        "Programming",
        "Community"
      ],
      "emails": "raphael.pierzina@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/hi-my-name-is-readme-a-look-at-why-docs-are-so-important",
      "admin_type": "",
      "companies": "moovel"
    },
    "917": {
      "abstract_short": "With so many machine learning frameworks and libraries available, writing a model isn\u2019t a bottleneck anymore while putting your models in production is still a challenge.\r\n\r\nIn this talk, you will learn how we deploy the python deep learning models in production at Booking.com. The talk will cover the automated training of the models and serving predictions in containerized environment using Kubernetes.",
      "sub_title": "Deploying models in containers and optimizing for latency and throughput at large scale",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@sahildua2305",
      "id": 917,
      "speakers": "Sahil Dua",
      "title": "How Booking.com serves Deep Learning model predictions",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Predictions",
        "Deep Learning",
        "Infrastructure",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "With so many machine learning frameworks and libraries available, writing a model isn\u2019t a bottleneck anymore while putting your models in production is still a challenge.\r\n\r\nIn this talk, you will learn how we deploy the python deep learning models in production at **Booking.com**.\r\n\r\nTopics will include:\r\n\r\n - Deep Learning model training in Docker containers\r\n - Automated retraining of models\r\n - Deployment of models using Kubernetes\r\n - Serving model predictions in containerized environment\r\n - Optimising serving predictions for latency and throughput\r\n\r\n"
      ],
      "user_votes": [
        {
          "3491": 10.00
        },
        {
          "1973": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "251": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "245": 3.00
        },
        {
          "3703": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "2069": 3.00
        },
        {
          "3392": 7.00
        },
        {
          "3605": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "2813": 7.00
        },
        {
          "2479": 10.00
        },
        {
          "3007": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "1132": 7.00
        },
        {
          "2057": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "3699": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3809": 7.00
        },
        {
          "1956": 7.00
        },
        {
          "316": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "3535": 3.00
        },
        {
          "3684": 7.00
        },
        {
          "58": 3.00
        },
        {
          "2493": 3.00
        },
        {
          "1877": 7.00
        },
        {
          "3278": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "3506": 6.00
        },
        {
          "3317": 10.00
        },
        {
          "509": 10.00
        },
        {
          "2834": -1.00
        },
        {
          "3143": 9.00
        },
        {
          "767": 6.00
        },
        {
          "489": -1.00
        },
        {
          "3799": 7.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 2.00
        },
        {
          "468": 9.00
        },
        {
          "2237": 6.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 6.00
        },
        {
          "3770": 2.00
        },
        {
          "3076": 6.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "DevOps",
        "Data Science",
        "Data Science"
      ],
      "emails": "sahildua2305@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/how-to-serve-deep-learning-models-at-large-scale",
      "admin_type": "",
      "companies": "Booking.com"
    },
    "775": {
      "abstract_short": "The talk explains how CPython core parses the Python source code, and then shows how the parser can be improved to reduce its memory consumption up to threefold. The talk assumes fluency in C and a basic acquaintance with CPython core internals, and presents an introduction into hacking the parser, guiding the way through to the very tangible end result of reducing Python overall memory consumption by 30%, measured at standard micro-benchmarks.",
      "sub_title": "",
      "timerange": "2017-07-12 11:20:00, 2017-07-12 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 775,
      "speakers": "A. Skrobov",
      "title": "How CPython parser works, and how to make it work better",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "legacy-code",
        "Data Structures",
        "C-Languages",
        "CPython",
        "failures/mistakes"
      ],
      "abstract_long": [
        "The part of CPython core that parses the Python source code is some very old and convoluted code: the time has proven its reliability, but few CPython hackers understand (or care) how it works, or even what exactly it does. There is, however, a good reason to care: for short-running scripts, the performance of CPython may easily be dominated by that of parsing the source code.\r\n\r\nThe talk will describe the two parsers that are involved, it will explain how these two parsers build two different kinds of syntax trees, and then show how the structure of one of the trees can be amended to reduce its memory footprint threefold, with only minor changes necessary in its consumers. It will also suggest other, more invasive improvements, which can yield even better savings.\r\n\r\nThe talk will assume fluency in C and a basic acquaintance with CPython core internals, and will give the attendees an introduction into hacking the parser, guiding their way through to the very tangible end result of reducing Python overall memory consumption by up to 30%, measured at standard micro-benchmarks."
      ],
      "user_votes": [
        {
          "74": 7.00
        },
        {
          "251": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "394": 3.00
        },
        {
          "468": 10.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "419": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "3392": 3.00
        },
        {
          "3430": 3.00
        },
        {
          "3573": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "3554": 10.00
        },
        {
          "3398": 3.00
        },
        {
          "3007": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "663": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "284": 3.00
        },
        {
          "651": 10.00
        },
        {
          "650": 10.00
        },
        {
          "3298": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "2582": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "1355": 2.00
        },
        {
          "69": 2.00
        },
        {
          "310": 6.00
        },
        {
          "2209": 2.00
        },
        {
          "3376": 7.00
        },
        {
          "3743": -1.00
        },
        {
          "3480": -1.00
        },
        {
          "562": -1.00
        },
        {
          "1490": 2.00
        },
        {
          "3495": 6.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Programming",
        "Other Programming Languages",
        "Python",
        "Best Practice and Use Cases"
      ],
      "emails": "tyomitch@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/how-cpython-parser-works-and-how-to-fix-it",
      "admin_type": "",
      "companies": "ARM"
    },
    "841": {
      "abstract_short": "With 4 datacenters on-line and more coming fast, building and operating datacenter buildings becomes a problem we need to solve at scale. At Facebook, Several teams of Production Engineers write the software that helps us do this efficiently, and we use Python... a lot. ",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@djipko_ns",
      "id": 841,
      "speakers": "Nikola \u0110ipanov",
      "title": "How Facebook uses Python to build (and operate) datacenters at scale",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Distributed Systems",
        "Use Case",
        "Open-Source",
        "DevOps general"
      ],
      "abstract_long": [
        "With 4 datacenters on-line and more coming fast, building and operating datacenter buildings becomes a problem we need to solve at scale. At Facebook, Several teams of Production Engineers write the software that helps us do this efficiently, and we use Python... a lot.\r\n\r\nIn this talk, I will go into some detail about only some of problems we try to solve to make sure our datacenters come online on time so that we can make sure you can connect with all your friends on Facebook, and\r\nkeep them humming, as efficiently as possible.\r\n\r\nWe'll go into some detail about the awesome Python infrastructure (some of it open source), that we use to build this software, and some of the engineering practices.\r\n\r\nThis is a talk for you if you were wondering how to track each and every strand of fiber cabling within a datacenter, or make sure we find out that the cooling system isn't really doing it's thing before actual servers catch fire from serving you live videos. "
      ],
      "user_votes": [
        {
          "683": 3.00
        },
        {
          "195": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3428": 3.00
        },
        {
          "1214": 10.00
        },
        {
          "484": 10.00
        },
        {
          "3764": 10.00
        },
        {
          "3392": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "2488": 10.00
        },
        {
          "3418": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "316": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3350": 7.00
        },
        {
          "1102": 10.00
        },
        {
          "306": 7.00
        },
        {
          "90": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "3492": 10.00
        },
        {
          "71": 10.00
        },
        {
          "3486": 7.00
        },
        {
          "3469": 3.00
        },
        {
          "2637": 7.00
        },
        {
          "2631": 10.00
        },
        {
          "2889": 3.00
        },
        {
          "3318": 3.00
        },
        {
          "58": 7.00
        },
        {
          "3296": 10.00
        },
        {
          "3299": 10.00
        },
        {
          "2127": 7.00
        },
        {
          "3628": 9.00
        },
        {
          "2698": 2.00
        },
        {
          "545": 2.00
        },
        {
          "509": 2.00
        },
        {
          "2834": 2.00
        },
        {
          "1897": 2.00
        },
        {
          "3143": 6.00
        },
        {
          "2169": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "468": 9.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 2.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "Best Practice and Use Cases",
        "Open Source",
        "DevOps"
      ],
      "emails": "nikola.djipanov@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/how-facebook-uses-python-to-build-and-operate-datacenters-at-scale",
      "admin_type": "",
      "companies": "Facebook"
    },
    "1138": {
      "abstract_short": "The recent announce of the Neuralink business adventure by Elon Musk has excited the expectations about brain computer interfaces (BCI) and their general advent in a short future. Suddenly, the question \u201cMay I manage my laundry with my brainwaves?\u201d is not so far into deep future science-fiction territory. This talk will address the convergence of two Python-lead lines of open source development that will be influential in bringing a positive response in the realm of daily life.",
      "sub_title": "",
      "timerange": "2017-07-12 15:45:00, 2017-07-12 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@, @",
      "id": 1138,
      "speakers": "Darya Chyzhyk, Manuel Grana",
      "title": "How far away is brain control of home appliances?",
      "have_tickets": [
        true,
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Science",
        "Architecture",
        "Internet of Things (IoT)"
      ],
      "abstract_long": [
        "The recent announce of the Neuralink business adventure by Elon Musk has excited the expectations about brain computer interfaces (BCI) and their general advent in a short future. Suddenly, the question \u201cMay I manage my laundry with my brainwaves?\u201d is not so far into deep future science-fiction territory. This talk will address the convergence of two Python-lead lines of open source development that will be influential in bringing a positive response in the realm of daily life. On one hand, the facilities for electro-encephalogram (EEG) data processing provided by packages, such as MNE, provide the neuroscience solid ground for BCI development. On the other hand, packages developed for Internet of Things (IoT) applications, such as Zerynth, will provide the interface to the home appliances, which will be increasingly more intelligent and autonomous. It is possible to envisage a direct dialog between brain and IoT interfaces allowing the management of daily chores with a little though.  The actual information bandwidth required from the BCI to  control of our daily environment will  be achievable  in a near future due to current IoT research in the development of personal clouds of connected and smart devices, leading to the future intelligent environments at the service of the human user (at least we believe so) where most of the needs and habits will be encoded into the cyber-steward data banks. \r\n"
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "47": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3738": 10.00
        },
        {
          "245": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "2488": 3.00
        },
        {
          "1966": 10.00
        },
        {
          "489": 10.00
        },
        {
          "1924": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "3486": 3.00
        },
        {
          "300": 10.00
        },
        {
          "58": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "3628": 9.00
        },
        {
          "85": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 6.00
        },
        {
          "3629": 7.00
        }
      ],
      "abstract_extra": ".",
      "tag_categories": [
        "Sciences",
        "Programming",
        "Hardware"
      ],
      "emails": "darya.chyzhyk@gmail.com, ccpgrrom.ehu@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/how-far-away-is-brain-control-of-home-appliances",
      "admin_type": "",
      "companies": "INRIA, Universidad del Pais vasco"
    },
    "921": {
      "abstract_short": "SAP operates one of the largest test infrastructure to test its in-memory database SAP HANA. The infrastructure provides different services like continues integration, code coverage and code linting for a huge C++ project with Python test coding. This talk provides insights and stories how we scaled and improved our test infrastructure.",
      "sub_title": "",
      "timerange": "2017-07-11 14:35:00, 2017-07-11 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@ChristophHeer",
      "id": 921,
      "speakers": "Christoph Heer",
      "title": "How SAP is using Python to test its database SAP HANA",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "System Architecture",
        "Distributed Systems",
        "Operations",
        "Case Study",
        "Testing"
      ],
      "abstract_long": [
        "SAP operates one of the largest test infrastructure to test its in-memory database SAP HANA. The infrastructure provides different services like continues integration, code coverage and code linting for a huge C++ project with Python test coding. These services are essential for the development teams and quality specialists. Without these services developing and shipping of new SAP HANA version wouldn\u2019t be possible.\r\nIn 2010, we started with a single Jenkins master with ten nodes. But to keep our testing time acceptable for the growing number of developers we had to scale up and that led to multiple different scaling challenges. The current test infrastructure is powered by more than thousand physical servers. Scaling of the infrastructure was only possible with custom optimizations like improved scheduling, expressive test configuration and robust tooling implemented in our favorite language Python. With the flexibility and power of Python it\u2019s possible for developers to implement complex test scenarios to verify features and mitigate regressions. On infrastructure side, it has been easier to extend, optimize and adapt the infrastructure for new requirements like different CPU architectures and newer Operating systems versions.\r\n\r\nThis talk provides insights and stories how we scaled and improved our test infrastructure and how new technologies like Linux Containers can improve automated testing and software quality assurance."
      ],
      "user_votes": [
        {
          "683": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 7.00
        },
        {
          "245": 10.00
        },
        {
          "3764": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "3486": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3695": 3.00
        },
        {
          "3407": -1.00
        },
        {
          "3703": 6.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3495": 9.00
        },
        {
          "171": -1.00
        },
        {
          "105": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "2698": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps",
        "Case Study",
        "Testing"
      ],
      "emails": "christoph.heer@sap.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/how-sap-is-using-python-to-test-its-database-sap-hana",
      "admin_type": "",
      "companies": "SAP SE"
    },
    "968": {
      "abstract_short": "I talk about the \"How to achieve the 3D object recognition accuracy 80%(40 category) for 3 month \"\r\n\r\nDeep Learning  is the good technique for image recognition and speech recognition.\r\nAnd it apply the other field.\r\nMany people try to apply the Deep Learning, but it is difficult to make a result.\r\n\r\nIn my situation, I have enough knowledge about the 3D object and label data.\r\n\r\nI hope to people who want to apply Deep Learning for the 3D model ",
      "sub_title": "",
      "timerange": "2017-07-13 14:00:00, 2017-07-13 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 968,
      "speakers": "Masaya Ohgushi",
      "title": "How to apply deep learning for 3D object",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Deep Learning",
        "Machine-Learning"
      ],
      "abstract_long": [
        "I talk about the \"How to achieve the 3D object recognition accuracy 80%(40 category) for 3month \"\r\n\r\nDeep Learning  is the good technique for image recognition and speech recognition.\r\nAnd it apply the other field.\r\nMany people try to apply the Deep Learning, but it is difficult to make a result.\r\n\r\nIn my situation, I have enough knowledge about the 3D object and label data.\r\nI'll talk about the how to achieve the  80 % (40 category)\r\n\r\nIn My approach\r\n\r\n- **1:  Getting the Information**\r\n - 1.1: How to choose the information\r\n - 1.2: How to choose framework\r\n- **2: Getting the Data**\r\n - 2.1: Public data\r\n - 2.2: How to make the own data\r\n- **3: Try  small**\r\n - 3.1: Trying the small data set\r\n - 3.2: Trying the train and predict\r\n- **4: Deciding the direction focus**\r\n - 4.1: Choose what you can control\r\n- **5: Prioritizing with high certainty**\r\n - 5.1: Pre-process\r\n - 5.2: Improve the train speed\r\n- **6: Increasing  the challenge times**\r\n - 6.1: Using the GPU\r\n - 6.2: CPU optimization\r\n - 6.3: multi process\r\n - 6.4: resource\r\n- **7: Parameter Tuning**\r\n - 7.1: Improve Model Versatility or Improve Data Versatility\r\n - 7.2: Model Tuning\r\n - 7.2.1: RandomDropOut\r\n - 7.2.2: LeakyRelu\r\n - 7.3: Data Argumantion\r\n- **8: Product**\r\n - 8.1: Minimum function\r\n - 8.2: Using Docker\r\n\r\nI hope to people who want to apply Deep Learning for the 3D model\r\n\r\n"
      ],
      "user_votes": [
        {
          "3310": 10.00
        },
        {
          "251": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3764": 3.00
        },
        {
          "3463": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "3409": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "3402": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "300": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "2493": 3.00
        },
        {
          "1877": 7.00
        },
        {
          "3412": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3777": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3629": 10.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science"
      ],
      "emails": "masaya.ohgushi@kabuku.co.jp",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/how-to-appy-deep-learning-for-3d-object",
      "admin_type": "",
      "companies": "Kabuku Inc."
    },
    "911": {
      "abstract_short": "During (Jona Azizaj and me) our talk we will share the story of how we, a small but dedicated group of people, jump started the community in a small country. Also nowadays we are witnessing that the number of girls involved in technical fields, especially development, is really low and we are going to present what as the influence on low participation of girls and the steps we should take to fix it.",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@, @jonatoni",
      "id": 911,
      "speakers": "Kristi Progri, Jona Azizaj",
      "title": "How to build up a Python community and empower women",
      "have_tickets": [
        true,
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Education",
        "Case Study",
        "Open-Source",
        "Diversity",
        "Community"
      ],
      "abstract_long": [
        "In 2012 not a lot of people were interested in Python in the relatively small city of Tirana, the capital of Albania. Even fewer girls were interested in Python. During (Jona Azizaj and me) our talk we will share the story of how we, a small but dedicated group of people, jump started the community in a small country like Albania and what other small cities and countries should avoid during their first steps in developing a Python community in similar conditions. Most important we will share tips and tricks on how to keep the Python spirit alive for a long time after the first enthusiastic steps, with the goal that our shared experience will help other communities to make the first steps or grow even further. Also nowadays we are witnessing that the number of girls involved in technical fields, especially development, is really low and we are going to present what as the influence on low participation of girls and the steps we should take to fix it."
      ],
      "user_votes": [
        {
          "3637": 10.00
        },
        {
          "3364": 7.00
        },
        {
          "468": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "3428": 3.00
        },
        {
          "2227": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "651": 7.00
        },
        {
          "300": 10.00
        },
        {
          "3566": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "93": 2.00
        },
        {
          "767": -1.00
        },
        {
          "489": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "3703": -1.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "3345": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Educational",
        "Case Study",
        "Open Source",
        "Community",
        "Community"
      ],
      "emails": "kristiprogri94@gmail.com, jonaazizaj@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/how-to-build-up-a-python-community-and-empower-women-1",
      "admin_type": "",
      "companies": "Open Labs, Open Labs Hackerspace"
    },
    "899": {
      "abstract_short": "In this talk we will discuss different models of making money, their pros and cons. We will concentrate on Python Open-Source projects mostly and try to answer the following questions: What to sell ? Where to sell ? How to distribute ? How to license ? After this talk you will have a clear understanding of how you can make money with your project. What your next steps should be and how you can get the actual profit while still continuing making your customers happy.",
      "sub_title": "",
      "timerange": "2017-07-12 16:20:00, 2017-07-12 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@maxtepkeev",
      "id": 899,
      "speakers": "Max Tepkeev",
      "title": "How to make money with your Python Open-Source Project",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "General",
        "Python general",
        "Business",
        "Open-Source",
        "Business Track"
      ],
      "abstract_long": [
        "Developers create new open-source projects every day. As the project becomes popular they have to invest more and more time into it's development and of course at some point a question arises: \"How can I make some money with my project ?\"\r\n\r\nIn this talk we will try to answer this question. We will talk about different models of making money, their pros and cons. We will concentrate on Python Open-Source projects mostly and try to answer the following questions:\r\n\r\n- What to sell ?\r\n- Where to sell ?\r\n- How to distribute ?\r\n- How to license ?\r\n\r\nAfter this talk you will have a clear understanding of how you can make money with your project. What your next steps should be and how you can get the actual profit while still continuing making your customers happy."
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "1900": 10.00
        },
        {
          "2227": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "3418": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "1966": 10.00
        },
        {
          "2813": 7.00
        },
        {
          "3409": 10.00
        },
        {
          "316": 3.00
        },
        {
          "300": 7.00
        },
        {
          "1132": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "2057": 3.00
        },
        {
          "3369": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "2365": 7.00
        },
        {
          "69": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "58": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "646": 7.00
        },
        {
          "3299": 10.00
        },
        {
          "3628": 2.00
        },
        {
          "2698": 2.00
        },
        {
          "545": 6.00
        },
        {
          "2834": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 2.00
        },
        {
          "3412": -1.00
        },
        {
          "3376": 10.00
        },
        {
          "1041": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "2286": 2.00
        },
        {
          "3777": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "z-deprecateded",
        "Python",
        "Business",
        "Open Source",
        ">>> Suggested Track"
      ],
      "emails": "tepkeev@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/how-to-make-money-with-your-python-open-source-project",
      "admin_type": "",
      "companies": "NewStore GmbH"
    },
    "1093": {
      "abstract_short": "The pandas library represents a very efficient and convenient tool for data manipulation, but sometimes hides unexpected pitfalls which can arise in various and sometimes unintelligible ways.\r\n\r\nBy briefly referring to some aspects of the internals, I will review specific situations in which a change of approach can, for instance, make a difference in terms of performance.",
      "sub_title": "pandas tries to behave as you would like it to... are sure you know how you would like it to behave?",
      "timerange": "2017-07-12 11:20:00, 2017-07-12 12:05:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@",
      "id": 1093,
      "speakers": "Pietro Battiston",
      "title": "How to use pandas the wrong way",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Science",
        "Science Track",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Data"
      ],
      "abstract_long": [
        "The pandas library represents a very efficient and convenient tool for data manipulation, but sometimes hides unexpected pitfalls which can arise in various and sometimes unintelligible ways.\r\n\r\nBy briefly referring to some aspects of the implementation, I will review specific situations in which a change of approach can make code based on pandas more robust, or more performant.\r\n\r\nSome examples:\r\n\r\n- inefficient indexing\r\n\r\n- multiple dtypes and efficiency\r\n\r\n- implicit type casting\r\n\r\n- HDF5 storage overhead\r\n\r\n- **GroupBy.apply()**... when you don't actually need it"
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "251": 10.00
        },
        {
          "3543": 7.00
        },
        {
          "47": 7.00
        },
        {
          "3420": 10.00
        },
        {
          "1924": 10.00
        },
        {
          "2119": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "245": 7.00
        },
        {
          "3496": 7.00
        },
        {
          "3454": 7.00
        },
        {
          "3764": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "3605": 10.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "2479": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "3801": 10.00
        },
        {
          "85": 7.00
        },
        {
          "651": 7.00
        },
        {
          "650": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3684": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3816": 7.00
        },
        {
          "646": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "3506": 9.00
        },
        {
          "1355": 2.00
        },
        {
          "3084": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "3799": 7.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": 6.00
        },
        {
          "468": -1.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 3.00
        },
        {
          "3711": 10.00
        }
      ],
      "abstract_extra": "I have been using pandas for research for several years - it was crucial for instance in [this study][1] I ran on citation behaviour. While I'm neither a python guru nor a general expert on data science, I think the types of data I handle and of analyses I run are diverse enough to have allowed me to build a quite comprehensive experience on data analysis in Python.\r\n\r\nNot that I'm too proud of if, but I'm probably one of the most prolific bug reporters for pandas. More recently, I have also started fixing some bugs, in particular in the field of indexing (as user [toobaz][2] ).\r\n\r\nMost of the talk I'm proposing, I already held it at Pycon Otto (Italian conference) in April, and I think I can say the feedback I received was pretty good (I will soon replicate with a talk on pandas after the request of a local Python users group).\r\n\r\n  [1]: https://ideas.repec.org/p/ssa/lemwps/2014-19.html\r\n  [2]: https://github.com/toobaz\r\n",
      "tag_categories": [
        "Sciences",
        ">>> Suggested Track",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "me@pietrobattiston.it",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/how-to-use-pandas-the-wrong-way",
      "admin_type": "",
      "companies": ""
    },
    "945": {
      "abstract_short": "The first weekend of October 2015 my company bought an advert during the first episode of \"Downton Abbey\" on Sunday evening. \r\nIt was so successful that the website went down for half an hour.\r\nWe wanted to look at the analytics and the data to estimate the impact.\r\nBut they were having a very hard weekend too: the replica of the production database we used was unreachable and the only person who knew how to fix it was on a plane.\r\nMonday really was a memorable day.",
      "sub_title": "",
      "timerange": "2017-07-14 15:45:00, 2017-07-14 16:15:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 945,
      "speakers": "Daniele Rapati",
      "title": "I don't like Mondays-what I learned about data engineering after 2 years on call",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Life",
        "Business Track",
        "Data",
        "failures/mistakes"
      ],
      "abstract_long": [
        "The first weekend of October 2015 my company bought an advert during the first episode of \"Downton Abbey\" on Sunday evening. \r\nIt was so successful that the website went down for half an hour.\r\nWe wanted to look at the analytics and the data to estimate the impact.\r\nBut they were having a very hard weekend too: the replica of the production database we used was unreachable and the only person who knew how to fix it was on a plane.\r\nMonday really was a memorable day.\r\n\r\nThis session is about sharing some life experience and best practices around Data Engineering.\r\nAttendants should have some previous understanding of data and tech in business.\r\nAttendants should leave with an understanding of on-call practices and with some quick win actions to take.\r\n\r\n__What does it mean to be on call?__\r\n\r\n__How do you make sure that the phone rings as little as possible?__\r\n\r\n - Fixing versus Root Cause Analysis.\r\n\r\n - Systems break at junctures.\r\n\r\n - Especially if the juncture is with a third party.\r\n\r\n__Why and when is it worth reacting to errors as soon as they happen?__\r\n\r\n - External Services.\r\n\r\n - Increasing Business Trust.\r\n\r\n - Allowing others to build on solid ground.\r\n\r\n__How do you make sure the phone rings when it should?__\r\n\r\n - Alerting tools: emails, chat, specialised applications like PagerDuty, OpsGenie and Twilio.\r\n\r\n - Monitoring systems.\r\n\r\n - Monitoring data (Data Quality) as a continuous early warning system."
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "683": 7.00
        },
        {
          "74": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "1924": 10.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "1897": 7.00
        },
        {
          "316": 10.00
        },
        {
          "3084": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2127": 10.00
        },
        {
          "509": 6.00
        },
        {
          "3314": 2.00
        },
        {
          "489": -1.00
        },
        {
          "3382": 6.00
        },
        {
          "380": 2.00
        },
        {
          "562": 6.00
        },
        {
          "171": 6.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Community",
        ">>> Suggested Track",
        "Data Science",
        "Best Practice and Use Cases"
      ],
      "emails": "daniele.rapati@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/i-dont-like-mondays-what-i-learned-about-data-engineering-after-2-years-on-call",
      "admin_type": "",
      "companies": "notonthehighstreet.com"
    },
    "1039": {
      "abstract_short": "FreeIPA is an Open Source, Python-based identity management system. Amongst other sites, it powers Fedora and GNOME infrastructure. In this talk you will learn to deploy FreeIPA and integrate it easily with Python applications to provide central user management, single sign-on and access control. Further more you will find out how to automatically issue and renew TLS certificates to secure network communication.",
      "sub_title": "",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@ChristianHeimes",
      "id": 1039,
      "speakers": "Christian Heimes",
      "title": "Identity management, single sign-on and certificates with FreeIPA",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Authentication",
        "Infrastructure",
        "Web Track"
      ],
      "abstract_long": [
        "Authentication, authorization and public key infrastructure are complicated and hard to get right, yet crucial for every infrastructure. Manifold user databases in each application as well as ad-hoc self-signed TLS/SSL certificates don't scale and are hard to administrate. Users don't want to remember a password for each service, admins prefer a centralized PKI, and developers struggle with correct handling of password.\r\n\r\nFreeIPA is an Open Source, Python-based identity management solution. It is much more than a simple user database. FreeIPA combines multiple mature products under an easy-to-use installer, command line and web interface: 389-DS LDAP server, MIT Kerberos, Dogtag PKI certificate system, BIND DNS with DNSSEC, SSSD, certmonger and more. It provides identities for users, services and machines with single sign-on (optionally 2FA) and role or host based ACL. Keycloak and Ipsilon IdP can be integrated to offer OpenIDC or SAML. Mutual trust with Active Directory is possible, too.\r\n\r\nInstallation of a FreeIPA server and integration with a WSGI application is much simpler than you might think.  At the end of my talk you will know how to deploy a FreeIPA server with just one command, how to add replicas for redundancy, how to authenticate users and access user data like name, email and group membership without adding a single line of Kerberos or LDAP code to your application, and how to issue TLS certificates with auto-renewal and OCSP."
      ],
      "user_votes": [
        {
          "804": 3.00
        },
        {
          "3370": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "1900": 10.00
        },
        {
          "564": 7.00
        },
        {
          "245": 3.00
        },
        {
          "3703": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "316": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3469": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 3.00
        },
        {
          "3684": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "93": 2.00
        },
        {
          "530": 10.00
        },
        {
          "1956": 9.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": 6.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Security",
        "DevOps",
        ">>> Suggested Track"
      ],
      "emails": "christian@python.org",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/identity-management-single-sign-on-and-certificates-with-freeipa",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "765": {
      "abstract_short": "For Python development, we mainly focus on IDE, browser and sometimes a command line. I want to focus on command line tools which seem to be a bit forgotten these days. Let me show a few tools I'm using on daily basis and how they helped me become more productive. I'll prove it's possible to start up a new environment from scratch that feels like $HOME. Finally, I want to convince you how important it is to constantly challenge yourself and your tools, how useful is a custom toolbox tailored to ",
      "sub_title": "",
      "timerange": "2017-07-11 16:20:00, 2017-07-11 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@pawel_lewtak",
      "id": 765,
      "speakers": "Pawe\u0142 Lewtak",
      "title": "Improve your developer's toolset",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Tooling",
        "Linux",
        "Development"
      ],
      "abstract_long": [
        "For Python development, we mainly focus on IDE, browser and sometimes a command line. I want to focus on command line tools which seem to be a bit forgotten these days. Let me show a few tools I'm using on daily basis and how they helped me become more productive. I'll prove it's possible to start up a new environment from scratch that feels like $HOME. Finally, I want to convince you how important it is to constantly challenge yourself and your tools, how useful is a custom toolbox tailored to you."
      ],
      "user_votes": [
        {
          "3531": 3.00
        },
        {
          "3637": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "251": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "3428": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "2227": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "1476": 3.00
        },
        {
          "2488": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "1884": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "3486": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3469": 7.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 3.00
        },
        {
          "300": 7.00
        },
        {
          "58": 3.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "3628": 2.00
        },
        {
          "3314": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "105": 2.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Operating Systems",
        "Programming"
      ],
      "emails": "lewtak+ep16@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/improve-your-developers-toolset",
      "admin_type": "",
      "companies": ""
    },
    "868": {
      "abstract_short": "This talk will give an overview on how to run and deploy  services on Azure Cloud with different tools like Azure Resource Manager Templates, the Azure SDK for Python and the Azure module for Ansible. I will present the best practices learned while moving a company into the Microsoft Azure Cloud.",
      "sub_title": "",
      "timerange": "2017-07-11 11:20:00, 2017-07-11 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@peterhoffmann",
      "id": 868,
      "speakers": "Peter Hoffmann",
      "title": "Infrastructure as Python Code: Run your Services on Microsoft Azure",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Public Cloud (AWS/Google/...)",
        "python",
        "Deployment/Continuous Integration and Delivery"
      ],
      "abstract_long": [
        "Using Infrastructure-as-Code principles with configuration through machine processable definition files in combination with the adoption of cloud computing provides faster feedback cycles in development/testing and less risk in deployment to production. The [Microsoft Azure Cloud](https://azure.microsoft.com/) allows different ways to provision, deploy and run your python  service:\r\n\r\n- The [Azure Resource Manger Templates](https://azure.microsoft.com/en-us/resources/templates/) allows you to provision your application using a declarative template. With parameters, variables and Azure template functions, the same template can be used to deploy your application in different stages (dev, test, production) and environments for different customers. We open sourced the [tropo](https://pypi.python.org/pypi/tropo/) library to create Azure Resource Templates from python.\r\n- [Azure SDK for Python](http://azure-sdk-for-python.readthedocs.io/) for a low level access to manage resources in the Azure Cloud.\r\n- An [Azure Ansible Module](https://docs.ansible.com/ansible/guide_azure.html) based on the Azure SDK to automate software provisioning, configuration management, and application deployment in a single environment.\r\n\r\nEach of the alternatives has different strengths and drawbacks. Presenting our learnings from migrating our infrastructure into the Azrue Cloud will help to avoid common pitfalls and show deployment patterns that will ease the live of devops.\r\n"
      ],
      "user_votes": [
        {
          "804": 7.00
        },
        {
          "683": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "135": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "1476": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "3314": 3.00
        },
        {
          "1132": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 3.00
        },
        {
          "316": 10.00
        },
        {
          "650": 7.00
        },
        {
          "3500": 3.00
        },
        {
          "468": 3.00
        },
        {
          "545": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "3818": 6.00
        },
        {
          "3703": 2.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 3.00
        },
        {
          "562": -1.00
        },
        {
          "3418": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "171": 6.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 2.00
        }
      ],
      "abstract_extra": "https://news.microsoft.com/de-de/blue-yonder-setzt-fuer-mehr-entscheidungssicherheit-im-handel-auf-microsoft-azure/\r\nhttp://peter-hoffmann.com\r\nhttps://github.com/hoffmann/tropo\r\nhttp://pyvideo.org/speaker/peter-hoffmann.html",
      "tag_categories": [
        "DevOps",
        "Python",
        "DevOps"
      ],
      "emails": "peter.hoffmann@blue-yonder.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/infrastructure-as-python-code-deploy-your-services-on-microsoft-azure",
      "admin_type": "",
      "companies": "Blue Yonder"
    },
    "814": {
      "abstract_short": "In today\u2019s world of fast-paced development, infrastructure can get left behind quickly, leading to technical debt.  By utilizing Python, Buildbot, and Linux Containers together, one can refashion such elements to solve infrastructure design patterns that arise in enterprise or production and deployment situations. Patterns such as license management, resource allocation, load balancing, and enterprise application deployment can be architected quickly with room for expansion as one's needs grow.",
      "sub_title": "",
      "timerange": "2017-07-12 16:20:00, 2017-07-12 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@triskadecaepyon",
      "id": 814,
      "speakers": "David Liu",
      "title": "Infrastructure design patterns with Python, Buildbot, and Linux Containers",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Developing with Python",
        "Infrastructure",
        "Distributed Systems",
        "Docker",
        "DevOps general"
      ],
      "abstract_long": [
        "In today\u2019s world of fast-paced development, infrastructure can get left behind quickly, leading to a potential increase in technical debt. Buildbot is normally known to be a continuous integration (CI) framework built in Python, but can be refashioned to solve infrastructure design patterns that arise in enterprise or production and deployment situations. Using Python and native Buildbot components paired with Linux Containers, patterns such as license management, resource allocation, load balancing, and enterprise application deployment can be architected quickly with room for expansion as one\u2019s needs grow.\r\n\r\nLearn how to move past the CI mindset and construct infrastructure needs with Buildbot and popular Linux Containers such as Docker and ClearContainers. Attendees will learn the best known methods of configuring Buildbot in non-CI implementations, and how to utilize the framework components for future needs. "
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "804": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3637": 3.00
        },
        {
          "1900": 7.00
        },
        {
          "564": 7.00
        },
        {
          "3703": 7.00
        },
        {
          "419": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3456": 7.00
        },
        {
          "3605": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "2585": 10.00
        },
        {
          "3007": 10.00
        },
        {
          "316": 10.00
        },
        {
          "2259": 7.00
        },
        {
          "306": 7.00
        },
        {
          "1956": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "310": 6.00
        },
        {
          "3407": 2.00
        },
        {
          "3818": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "2286": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "david.a.liu@intel.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/infrastructure-design-patterns-with-python-buildbot-and-linux-containers",
      "admin_type": "",
      "companies": "Intel Corporation"
    },
    "1129": {
      "abstract_short": "This talk is about creating visualizations for data that includes geographical locations. We will be using data from InsideAirbnb.com to represent the current status of Airbnb listings in Mallorca.\r\n\r\nWe will show practical examples of how to:\r\n- Use bokeh to overlay data on google maps.\r\n- Use datashader and geoviews to visualize big data.\r\n- Plot shapefiles with holoviews.\r\n- Plot dynamic maps for visualizing time series.",
      "sub_title": "",
      "timerange": "2017-07-13 11:20:00, 2017-07-13 12:05:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@miau_db",
      "id": 1129,
      "speakers": "Guillem Duran Ballester",
      "title": "Inside Airbnb: Visualizing data that includes geographic locations",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Visualization",
        "Big Data",
        "Case Study",
        "Jupyter/iPython",
        "Data Science"
      ],
      "abstract_long": [
        "\r\nThis talk is about creating visualizations for data that includes geographical locations. We will be using data from InsideAirbnb.com to represent the current status of Airbnb listings in Mallorca. \r\n\r\nWe will show practical examples of different visualizations of geographical data:\r\n\r\nFirst, we will start with how to use bokeh to overlay data on google maps. We will use examples to show how the GMapPlot interface works. We will briefly explain how to use it,  and what are its limitations. \r\n\r\nThen, we will talk about plotting shapefiles with holoviews. Shapefiles are files that describe the shape of maps. We will explain how to deal with shapefiles. For instance, we will describe how we use shapefiles to group geographical data by regions. We will also briefly explain how holoviews works and how it can be used to display geographical data.\r\n\r\nMoreover, we will talk about using datashader and geoviews to visualize big data. First, we will briefly introduce datashader, bin based plotting and the datashader Pipeline. After that, we will show how to create plots with geoviews: how is the Interface, a few use cases and some examples. Finally, we will move to plotting big data on interactive maps.\r\n\r\nEventually we will finish with dynamic maps for visualizing time series: we will explain how do we do it and show some examples of how to build an interactive dashboard for visualizing geographical data that varies over time.\r\n\r\n"
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "1897": 7.00
        },
        {
          "195": 10.00
        },
        {
          "3543": 10.00
        },
        {
          "3310": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "2834": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "245": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "2488": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "2813": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "3350": 10.00
        },
        {
          "3084": 7.00
        },
        {
          "2259": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "3407": 10.00
        },
        {
          "3369": 7.00
        },
        {
          "3492": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "3360": 3.00
        },
        {
          "2889": 3.00
        },
        {
          "3535": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3684": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "93": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "468": 10.00
        },
        {
          "3506": 6.00
        },
        {
          "545": 6.00
        },
        {
          "3143": 6.00
        },
        {
          "3799": 3.00
        },
        {
          "1041": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 6.00
        },
        {
          "2183": 6.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 6.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": 2.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "It is still work in progress, but if you are curious you can find an example of the visualizations I am talking about here: https://github.com/BielStela/InsideAirbnb/blob/master/notebooks/Interactive%20Map.ipynb",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Case Study",
        "Data Science",
        "Data Science"
      ],
      "emails": "guillem.db@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/inside-airbnb-visualizing-data-that-includes-geographic-locations",
      "admin_type": "",
      "companies": "Source{d}"
    },
    "1136": {
      "abstract_short": "Do you remember who inspired you to become who you are? \r\nI remember why I pursued a path in technology. However, my journey from France to the UK, from student to team lead, made me understand there is still a lot of work to be done about diversity. I will talk about my experiences and the project I\u2019m now working for, Code For Life. It is a volunteer based initiative started at Ocado that focuses on creating free, open source games to teach all children how to program and inspire them.",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@CelineBoudier",
      "id": 1136,
      "speakers": "C\u00e9line Boudier",
      "title": "Inspiring all children, a journey: diversity and computing education",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Education",
        "Diversity",
        "Educational Track",
        "Open-Source",
        "Game-Development"
      ],
      "abstract_long": [
        "Do you remember when you wrote your first line of code? Do you remember who inspired you  to become who you are when you were a child? But also, what the challenges might have been?  \r\nI remember when I was a little girl with a strong interest in a lot of things, including science, and what and who helped me pursue an education and a career in science and technology.\r\nHowever, my journey in the industry from France to the UK, from software engineer student to team lead, from language processing to robots to online coding games, made me understand there is still a lot of work to be done in terms of diversity.\r\nI will talk about my own experiences, what shaped my dreams and inspirations, the reality check, and the project I\u2019m now working on Code For Life.\r\nCode For Life is an initiative started at Ocado Technology in 2014, in response to the UK putting computing in the primary school curriculum. It comprises a small full time team and also a large group of dedicated volunteers who focus on creating free, open source games, mostly web games developed with Django, to teach all children how to program. We are all dedicated to inspire all children and give them the tools and opportunities they deserve. "
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "3637": 3.00
        },
        {
          "135": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3592": 7.00
        },
        {
          "245": 10.00
        },
        {
          "564": 3.00
        },
        {
          "3507": 10.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3566": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "3298": 7.00
        },
        {
          "767": 2.00
        },
        {
          "2209": -1.00
        },
        {
          "2660": 6.00
        },
        {
          "380": 9.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 2.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "This talk has a strong emphasis on diversity and some other projects I've worked on.\r\nI have submitted other talks, one about Code For Life, oriented [for curious minds and potential contributors][3]  and a [shorter one for educators][4].  \r\nI have talked at JDD Krak\u00f3w, London Python Meetup, PyData London...  You can find some [presentations on Youtube][1] and some [slides on slideshare][2]\r\n\r\n  [1]: https://www.youtube.com/playlist?list=PLuwBkcAg4KCEuv-76CA9FvXrGc9SiBiuF\r\n  [2]: https://www.slideshare.net/CelineBoudier\r\n  [3]: https://ep2017.europython.eu/conference/talks/code-for-life-helping-everyone-shape-technologys-future\r\n  [4]: https://ep2017.europython.eu/conference/talks/code-for-life-helping-everyone-shape-technologys-future-1",
      "tag_categories": [
        "Educational",
        "Community",
        ">>> Suggested Track",
        "Open Source",
        "Everything Else"
      ],
      "emails": "boudier.celine@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/inspiring-all-children-a-journey-diversity-and-computing-education",
      "admin_type": "",
      "companies": "Ocado Technology - Code For Life"
    },
    "1140": {
      "abstract_short": "When we use *supervised machine learning* techniques we need to specify the number of parameters that our model will need to represent the data (number of clusters, number of Gaussians, etc.).\r\n\r\nSomewhat,  we are making our model inflexible.  In this talk we will study the nonparametric models, in specific, Bayesian Nonparametric Models (BNP) whose main purpose is getting more flexible models since that in BNP the parameters can be automatically inferred by the model.",
      "sub_title": "",
      "timerange": "2017-07-13 12:10:00, 2017-07-13 12:55:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@trinogz",
      "id": 1140,
      "speakers": "Omar Guti\u00e9rrez",
      "title": "Introduction to Nonparametric Bayesian Models",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "When we use *supervised machine learning* techniques we need to specify the number of parameters that our model will need to represent the data (number of clusters, number of Gaussians, etc.).\r\n\r\nSomewhat,  we are making our model inflexible.  In this talk we will study the nonparametric models, in specific, Bayesian Nonparametric Models (BNP) whose main purpose is getting more flexible models since that in BNP the parameters can be automatically inferred by the model.\r\n\r\nThe outline is the next:\r\n\r\n- Parametric vs Nonparametric models\r\n- A review on probability distributions\r\n- Non-parametric Bayesian Methods\r\n- Dirichlet Process\r\n- Python (and R maybe) libraries for NPB\r\n- Conclusions"
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "3543": 10.00
        },
        {
          "251": 10.00
        },
        {
          "3310": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "1022": 3.00
        },
        {
          "245": 7.00
        },
        {
          "3764": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "3407": 10.00
        },
        {
          "3492": 3.00
        },
        {
          "3398": 10.00
        },
        {
          "2365": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "2266": 10.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3278": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "509": 7.00
        },
        {
          "2209": -1.00
        },
        {
          "380": -1.00
        },
        {
          "1041": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 6.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 6.00
        },
        {
          "468": 2.00
        },
        {
          "3384": 7.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "Although this talk has an strong theoretical background, the idea is show some practical cases, and the Python (and R) software that we can use.",
      "tag_categories": [
        "Data Science",
        "Data Science"
      ],
      "emails": "omar.vpa@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/introduction-to-non-parametric-models",
      "admin_type": "",
      "companies": "University of Bonn"
    },
    "1044": {
      "abstract_short": "Deep learning is at its peak, with scholars and startups releasing new amazing applications every other week, and TensorFlow is the main tool to work with it.  In this talk, we will cover the explanation of core concepts of deep learning and TensorFlow totally from scratch, using simple examples and friendly visualizations.",
      "sub_title": "",
      "timerange": "2017-07-14 14:00:00, 2017-07-14 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@asolanopf",
      "id": 1044,
      "speakers": "Alejandro Solano",
      "title": "Introduction to TensorFlow",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Deep Learning",
        "Jupyter/iPython",
        "Data Science",
        "Machine-Learning"
      ],
      "abstract_long": [
        "Deep learning is at its peak, with scholars and startups releasing new amazing applications every other week, and TensorFlow is the main tool to work with it. However, Tensorflow it's not an easy-access library for beginners in the field. In this talk, we will cover the explanation of core concepts of deep learning and TensorFlow totally from scratch, using simple examples and friendly visualizations.\r\n\r\n\r\nThe talk will go through the next topics:\r\n\r\n\u2022 Why deep learning and what is it?\r\n\r\n\u2022 The main tool for deep learning: TensorFlow\r\n\r\n\u2022 Installation of TensorFlow\r\n\r\n\u2022 Core concepts of TensorFlow: Graph and Session\r\n\r\n\u2022 Hello world!\r\n\r\n\u2022 Step by step example: learning how to sum\r\n\r\n\u2022 Core concepts of Deep Learning: Neural network\r\n\r\n\u2022 Core concepts of Deep Learning: Loss function and Gradient descent\r\n\r\n\u2022 Fast example: recognizing hand-written digits\r\n\r\n\r\nBy the end of this talk, the hope is that you will have gained the basic concepts involving deep learning and that you could build and run your own neural networks using TensorFlow."
      ],
      "user_votes": [
        {
          "3629": 10.00
        },
        {
          "3637": 10.00
        },
        {
          "1878": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "804": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "251": 10.00
        },
        {
          "2209": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "3459": 7.00
        },
        {
          "3420": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 10.00
        },
        {
          "3278": 10.00
        },
        {
          "3592": 10.00
        },
        {
          "1214": 7.00
        },
        {
          "3703": 3.00
        },
        {
          "3292": 10.00
        },
        {
          "1035": 10.00
        },
        {
          "2069": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "3418": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "1884": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "1102": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3809": 3.00
        },
        {
          "3348": 7.00
        },
        {
          "663": 10.00
        },
        {
          "3486": 10.00
        },
        {
          "316": 10.00
        },
        {
          "3360": 7.00
        },
        {
          "3777": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "3535": 10.00
        },
        {
          "3799": 7.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "3394": 7.00
        },
        {
          "2875": 3.00
        },
        {
          "3695": 7.00
        },
        {
          "3296": 10.00
        },
        {
          "3299": 10.00
        },
        {
          "2582": 3.00
        },
        {
          "2127": 7.00
        },
        {
          "3506": 6.00
        },
        {
          "545": 2.00
        },
        {
          "310": 6.00
        },
        {
          "1924": -1.00
        },
        {
          "562": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3495": 9.00
        },
        {
          "3743": 7.00
        },
        {
          "3327": -1.00
        },
        {
          "3477": 3.00
        },
        {
          "468": 2.00
        },
        {
          "3076": 9.00
        },
        {
          "3384": 7.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "none",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "asolanopf@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/introduction-to-tensorflow",
      "admin_type": "",
      "companies": "Universidad de M\u00e1laga"
    },
    "1109": {
      "abstract_short": "The Jupyter Notebook has been used as a teaching and learning tool in a wide range of different scenarios. The aim of this talk is to dive into where and how notebooks can be used most effectively for education.\r\n\r\nThe first part of the talk will describe a variety of specific examples of using notebooks in education, highlighting the strengths and weaknesses of the tool. The second part will cover extra software tools which can support using notebooks for education.",
      "sub_title": "",
      "timerange": "2017-07-10 12:10:00, 2017-07-10 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@takluyver",
      "id": 1109,
      "speakers": "Thomas Kluyver",
      "title": "Jupyter notebooks for teaching and learning",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Education",
        "Science",
        "Educational Track",
        "Jupyter/iPython Notebook",
        "All Other Programming Languages"
      ],
      "abstract_long": [
        "The Jupyter Notebook (formerly IPython Notebook) has been used to support learning in different scenarios, including taught courses, self-directed learning and reference material such as software documentation. People have used it to learn how to program, and to learn about diverse subjects where computer code is important to human understanding. The aim of this talk is to dive into where and how notebooks can be used most effectively for education.\r\n\r\nI will first describe notebook-based learning material created by a variety of people for different purposes, deliberately taking a broad definition of \u2018education\u2019, along with my own experiences using notebooks to teach Software Carpentry sessions and conference tutorials. I\u2019ll pull out both strengths and limitations of notebooks as an educational tool to explore how they can be used most effectively.\r\n\r\nIn the second part of the talk, I\u2019ll talk about several extra software tools which can make the notebook more valuable in educational settings, including Jupyterhub, with which a teacher can provide notebook servers for a group of students, nbgrader, which allows notebooks to be used as assignments, and cite2c, which can insert academic citations into notebooks. I\u2019ll also touch on commercial offerings integrating the notebook, such as SageMathCloud."
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "2356": 10.00
        },
        {
          "3256": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "1924": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "3372": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3592": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3573": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "269": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "2365": 3.00
        },
        {
          "3486": 10.00
        },
        {
          "3469": 3.00
        },
        {
          "3360": 10.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3566": 10.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "3628": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "3382": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3076": 6.00
        },
        {
          "3368": 7.00
        },
        {
          "3711": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Sciences",
        ">>> Suggested Track",
        "Python",
        "Other Programming Languages"
      ],
      "emails": "thomas@kluyver.me.uk",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/jupyter-notebooks-for-teaching-and-learning",
      "admin_type": "",
      "companies": "University of Southampton"
    },
    "935": {
      "abstract_short": "Matching data collections with the aim to augment and integrate the information for any available data point that lies in two or more of these collections, is a problem that nowadays arises often. This presentation will describe the solution process and the use of python and Spark in the large-scale unzipping and extraction of files from archives, and how metadata was then extracted from the files to perform the matches on. ",
      "sub_title": "",
      "timerange": "2017-07-14 14:35:00, 2017-07-14 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 935,
      "speakers": "Deep Kayal",
      "title": "Large-scale data extraction, structuring and matching using Python and Spark",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Big Data",
        "Analytics"
      ],
      "abstract_long": [
        "**Motivation -** Matching data collections with the aim to augment and integrate the information for any available data point that lies in two or more of these collections, is a problem that nowadays arises often. Notable examples of such data points are scientific publications for which metadata and data are kept in various repositories, and users\u2019 profiles, whose metadata and data exist in several social networks or platforms.\r\n\r\nIn our case, collections were as follows: (1) A large dump of compressed data files on s3 containing archives in the form of zips, tars, bzips and gzips, which were expected to contain published papers in the form of xmls and pdfs, amongst other files, and (2) A large store of xmls in the form of xmls, some of which are to be matched to Collection 1.\r\n\r\n**Problem Statement -** The problems, then, are: (1) How to best unzip the compressed archives and extract the relevant files? (2) How to extract meta-information from the xml or pdf files? (3) How to match the meta-information from the two different collections? And all of these must be done in a big-data environment.\r\n\r\n**Presentation \u2013**\r\n![][1]\r\n\r\nThe presentation will describe the solution process and the use of python and Spark in the large-scale unzipping and extraction of files from archives, and how metadata was then extracted from the files to perform the matches on.\r\n\r\n  [1]: https://drive.google.com/open?id=1hA9J80446Qh7nd8PMYZibtIR1WjMkdLXfDgwUlts7JM\r\n"
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "1878": 10.00
        },
        {
          "3543": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "3310": 10.00
        },
        {
          "2209": 10.00
        },
        {
          "3308": 7.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3278": 10.00
        },
        {
          "3372": 3.00
        },
        {
          "3738": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "3496": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "3573": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "1966": 10.00
        },
        {
          "2585": 3.00
        },
        {
          "3007": 3.00
        },
        {
          "3369": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "3420": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "1355": 2.00
        },
        {
          "509": 3.00
        },
        {
          "93": 2.00
        },
        {
          "380": 2.00
        },
        {
          "562": 9.00
        },
        {
          "3495": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "242": 3.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science"
      ],
      "emails": "d.kayal@elsevier.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/large-scale-data-extraction-structuring-and-matching-using-python-and-spark",
      "admin_type": "",
      "companies": "Elsevier B.V."
    },
    "827": {
      "abstract_short": "In this talk I will share some hard-learned knowledge gained in several\r\nyears of parallel programming. Covered topics will include\r\nperformance, ways to measure the performance, memory occupation, data\r\ntransfer and ways to reduce the data transfer, how to debug parallel\r\nprograms and useful libraries. I will give some practical examples,\r\nboth in enterprise programming (importing CSV files in a database) and\r\nin scientific programming (numerical simulations).\r\n",
      "sub_title": "",
      "timerange": "2017-07-14 12:10:00, 2017-07-14 12:55:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@",
      "id": 827,
      "speakers": "Michele Simionato",
      "title": "Lessons learned in X years of parallel programming",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Algorithms",
        "Best Practice",
        "failures/mistakes"
      ],
      "abstract_long": [
        "There is a lot more to parallel programming in Python than\r\n`multiprocessing.Pool().map`. In this talk I will share some\r\nhard-learned knowledge gained in several years of parallel\r\nprogramming. Covered topics will include performance, ways to measure\r\nthe performance, memory occupation, data transfer and ways to reduce\r\nthe data transfer, how to debug parallel programs and useful\r\nlibraries. I will give some practical examples, both in enterprise\r\nprogramming (importing CSV files in a database) and in scientific\r\nprogramming (numerical simulations). The initial part of the talk\r\nwill be pedagogical, advocating the convenience of parallel programming\r\nin the small (i.e. in single machine environment); the second part will\r\nbe more advanced and will touch a few things to know when writing\r\nparallel programs for medium-sized clusters.\r\nI will also briefly discuss the compatibility layer that we have developed at GEM\r\nto be independent from the underlying parallelization technology (multiprocessing,\r\nconcurrent.futures, celery, ipyparallel, grid engine...)."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "804": 7.00
        },
        {
          "74": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "468": 7.00
        },
        {
          "251": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "1924": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "564": 7.00
        },
        {
          "3496": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "419": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3554": 7.00
        },
        {
          "3369": 10.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3360": 10.00
        },
        {
          "2889": 3.00
        },
        {
          "3535": 3.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2698": 6.00
        },
        {
          "509": 7.00
        },
        {
          "1041": 6.00
        },
        {
          "3407": 9.00
        },
        {
          "562": 2.00
        },
        {
          "2237": 9.00
        },
        {
          "171": 9.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 6.00
        },
        {
          "3368": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        "Best Practice and Use Cases"
      ],
      "emails": "michele.simionato@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/lessons-learned-in-x-years-of-parallel-programming",
      "admin_type": "",
      "companies": "GEM"
    },
    "800": {
      "abstract_short": "At babylon health we are trying to build an accessible and affordable health service. \r\n\r\nThis talk is our story.  Its a story that starts with an idea to build a medical chatbot and meanders through the dark and dangerous land of things like Graph databases, machine learning and async programming in python. The story is far from over, but we have come to a point where we would like to reflect and share with the community all that we have learnt.",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@wilhelmvdwalt",
      "id": 800,
      "speakers": "Wilhelm Van Der Walt",
      "title": "Lessons learnt building a medical chatbot in Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "failures/mistakes",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "Graph Databases",
        "RESTful",
        "Machine-Learning"
      ],
      "abstract_long": [
        "\"To put an accessible and affordable health service in the hands of every person on earth.\"\r\n\r\nThats our mission at babylon. Leveraging the powers of AI, python and micro services we took a step towards that vision by building a medical chatbot that we shipped in November last year. In this talk I would like to share with you all the things we learnt in the process.\r\n\r\nThis talk is our story. Its a story that starts with an idea and meanders through the dark and dangerous land of things like Graph databases, machine learning and async programming in python. The story is far from over, but we have come to a point where we would like to reflect and share with the community all that we have learnt.\r\n\r\nMore specifically I will cover:\r\n- Architecture decisions we made and why we made them\r\n- lessons learnt doing async in python at scale\r\n- testing chatbots\r\n- clinical governance and safety (literally 2 sentences, I promise)\r\n- The drawbacks of REST\r\n- Why I am glad we did most of it in Python\r\n\r\nAnd then of course some time for questions at the end :)"
      ],
      "user_votes": [
        {
          "2113": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "2209": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "251": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "245": 10.00
        },
        {
          "3764": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "468": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "69": 10.00
        },
        {
          "2259": 7.00
        },
        {
          "3574": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "3356": 10.00
        },
        {
          "3809": 10.00
        },
        {
          "3807": 10.00
        },
        {
          "3699": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "663": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3299": 10.00
        },
        {
          "2127": 7.00
        },
        {
          "3506": 6.00
        },
        {
          "2834": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "1041": 6.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3477": 3.00
        },
        {
          "3770": 2.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Web",
        "Databases",
        "Web",
        "Data Science"
      ],
      "emails": "wilhelm.vanderwalt@babylonhealth.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/lessons-learnt-building-a-medical-chatbot-in-python",
      "admin_type": "",
      "companies": "Babylon Health"
    },
    "778": {
      "abstract_short": "Think there's nothing left to explore in how we design Web API frameworks? Think again.\r\n\r\nThe author of Django REST framework walks through how we might approach designing a new Python-based API framework from scratch, and looks at how we can start building smarter, more productive API tooling as a result.\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@_tomchristie",
      "id": 778,
      "speakers": "tom christie",
      "title": "Level up! Rethinking the Web API framework.",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "HTTP",
        "APIs",
        "RESTful"
      ],
      "abstract_long": [
        "Think there's nothing left to explore in how we design Web API frameworks? Think again.\r\n\r\nThe author of Django REST framework walks through how we might approach designing a new Python-based API framework from scratch, and looks at how we can start building smarter, more productive API tooling as a result.\r\n\r\nYou should come away from this talk with a better appreciation of:\r\n\r\nHow best to provide API client libraries and API documentation to your users.\r\nHow to build APIs that support both realtime and request/response interfaces.\r\nHow to build APIs that are web-browsable.\r\nWhy you might want to consider taking a schema-first approach to your API design."
      ],
      "user_votes": [
        {
          "1897": 7.00
        },
        {
          "3307": 10.00
        },
        {
          "195": 3.00
        },
        {
          "74": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "1481": 3.00
        },
        {
          "251": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "1908": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "3370": 3.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "419": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "306": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "3809": 10.00
        },
        {
          "71": 10.00
        },
        {
          "3398": 3.00
        },
        {
          "663": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 3.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3471": 7.00
        },
        {
          "2582": 7.00
        },
        {
          "2209": 2.00
        },
        {
          "380": 9.00
        },
        {
          "3412": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 9.00
        },
        {
          "562": 2.00
        },
        {
          "468": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "I've given this talk at DjangoCon Europe, and had it accepted at PyCon, so it should be pretty polished by EuroPython (tho I think there will still be *plenty* of folks who won't have seen the content, esp. if they're not primarily Django-oriented.\r\n\r\nI've spoken at numerous events before, although this is the *only* talk I'm giving throughout the whole of this conference season, as it's about work where my effort is fully invested right now.\r\n\r\nThanks so much for your time & consideration!\r\n\r\n  t :)",
      "tag_categories": [
        "Web",
        "Web",
        "Web"
      ],
      "emails": "tom@tomchristie.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/level-up-rethinking-the-web-api-framework",
      "admin_type": "",
      "companies": "Encode OSS Ltd"
    },
    "855": {
      "abstract_short": "While **consistent hashing** is largely known and adopted in the NoSQL database clusters to solve data distribution and data access reliability, it is less known and used by the typical developers.\r\n\r\nThis talk will introduce you to consistent hashing and the problems it solves while giving a practical use case in a python application.",
      "sub_title": "",
      "timerange": "2017-07-11 15:45:00, 2017-07-11 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@ultrabug",
      "id": 855,
      "speakers": "Alexys Jacob",
      "title": "Leveraging consistent hashing in your python applications",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Software Design",
        "Use Case",
        "Distributed Systems",
        "Scaling"
      ],
      "abstract_long": [
        "While **consistent hashing** is largely known and adopted in the NoSQL database clusters to solve data distribution and data access reliability, it is less known and used by the typical developers.\r\n\r\nThis talk will introduce you to consistent hashing and the problems it solves while going through a **practical use case in a python application**.\r\n\r\nWe will start from its standalone design and scale it out to an optimized clustered version thanks to consistent hashing.\r\n\r\n"
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 7.00
        },
        {
          "251": 10.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3328": 10.00
        },
        {
          "564": 3.00
        },
        {
          "1466": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "2794": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3595": 10.00
        },
        {
          "3418": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3084": 7.00
        },
        {
          "2259": 7.00
        },
        {
          "3407": 7.00
        },
        {
          "3809": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "3360": 7.00
        },
        {
          "2889": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "300": 10.00
        },
        {
          "3498": 10.00
        },
        {
          "3314": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3743": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "DevOps",
        "DevOps"
      ],
      "emails": "ultrabug@ultrabug.net",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/leveraging-consistent-hashing-in-your-python-applications",
      "admin_type": "",
      "companies": "Numberly"
    },
    "862": {
      "abstract_short": "Linespots is an algorithm that predicts bugs in your code. The bug-probability values reported by it can be used to improve reviewing and auditing processes.\r\nThe talk will introduce the algorithm and results from the research that was done with it as well as experience from real world case studies.\r\nThe goal is to introduce the audience to the idea of bug prediction and how it can help with reviewing processes.",
      "sub_title": "",
      "timerange": "2017-07-14 14:00:00, 2017-07-14 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 862,
      "speakers": "Maximilian Scholz",
      "title": "Linespots: Predicting Bugs in your Code",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Science",
        "Algorithms",
        "Clean Code",
        "Static Analysis",
        "Code Analysis"
      ],
      "abstract_long": [
        "In times of increased awareness of technical debts, reviewing and auditing code becomes more important. The main problem with code review is the amount of time that is being spent searching the needle in the haystack. You just don\u2019t know what you are looking for and where to find it. One possible solution to the problem to the idea of bug prediction. If we could somehow know where bugs are in our code, focusing reviewing efforts on that area should, in theory, increase the effectiveness of our review. More bugs should be uncovered while less time is spent reviewing.\r\nThis is what Linespots tries to offer. It is an algorithm developed during my thesis that analyses a project\u2019s history and calculates a probability value for each line of code in the project, representing the likeliness of a bug existing in that line.\r\nUsing the probabilities, reviewers can focus on the areas that are at a higher risk of containing bugs and spend less time on robust code.\r\nThe research done so far showed, that by analyzing 0.5% lines of code with the highest risk values in a project, an average of 50% of the bugs fixed in the next 150 commits were correctly predicted by Linespots. This is an improvement by factor 10 compared to Bugspots, an algorithm developed at Google, which Linespots is based upon.\r\n\r\n**Outline:**\r\n\r\n - Basics and functionality of Linespots\r\n - Research results\r\n - Pros and cons of Linespots\r\n - Results of a case study"
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "2688": 10.00
        },
        {
          "1973": 3.00
        },
        {
          "2530": 10.00
        },
        {
          "47": 7.00
        },
        {
          "251": 7.00
        },
        {
          "394": 3.00
        },
        {
          "1924": 10.00
        },
        {
          "2169": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "3423": 10.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3403": 10.00
        },
        {
          "3454": 10.00
        },
        {
          "3370": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3459": 10.00
        },
        {
          "3547": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "3405": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "3350": 3.00
        },
        {
          "3407": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "489": 10.00
        },
        {
          "930": 2.00
        },
        {
          "2660": 6.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "1041": 6.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "2183": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "468": 9.00
        },
        {
          "3076": 7.00
        },
        {
          "3368": 7.00
        },
        {
          "3084": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        "Data Science",
        "Educational",
        "Everything Else",
        "Programming"
      ],
      "emails": "m0hawk@gmx.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/linespots-predicting-bugs-in-your-code-1",
      "admin_type": "",
      "companies": ""
    },
    "1096": {
      "abstract_short": "This talk looks into some libraries we use (and love!) and the magic that powers them.\r\n\r\nWe will look at how things like namedtuple and the Flask request object are implemented. We will look at how each of these libraries encapsulates complexity. At the end of the talk (hopefully) we will understand more about the internals of these libraries and have new tools to gauge if magic should be considered harmful for yourself.\r\n",
      "sub_title": "",
      "timerange": "2017-07-11 11:20:00, 2017-07-11 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@northisup",
      "id": 1096,
      "speakers": "Adam Hitchcock",
      "title": "Magic Considered Harmful?",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Python general",
        "Developing with Python"
      ],
      "abstract_long": [
        "We talk about magic tongue-in-cheek and often with a negative connotation. This talk looks to clearly define magic and answer the question of \"when is magic harmful?\"\r\n\r\nThis will is done by looking at good and bad examples in popular libraries and the standard lib, primarily using namedtuple (did you know it uses exec to get the job done?!) and how the Flask global request object works.\r\n\r\nAt the end of the talk you should have a better understanding of some python internals and understand why strong encapsulation is important.\r\n\r\nThere are no explicit pre-requisites for the talk, but it is targeted at intermediate and advanced Pythonistas."
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "3543": 3.00
        },
        {
          "74": 3.00
        },
        {
          "468": 3.00
        },
        {
          "394": 3.00
        },
        {
          "1924": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "1900": 10.00
        },
        {
          "3496": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "3764": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "1476": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3597": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "2259": 3.00
        },
        {
          "71": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "3084": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "58": 3.00
        },
        {
          "3394": 7.00
        },
        {
          "3695": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "2582": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "1355": 2.00
        },
        {
          "2834": -1.00
        },
        {
          "1897": 2.00
        },
        {
          "3143": 6.00
        },
        {
          "69": 6.00
        },
        {
          "3407": 6.00
        },
        {
          "489": -1.00
        },
        {
          "2209": 2.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "2286": 2.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "242": 10.00
        },
        {
          "3384": 10.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        ">>> Suggested Track"
      ],
      "emails": "adam@disqus.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/magic-considered-harmful",
      "admin_type": "",
      "companies": "Disqus"
    },
    "937": {
      "abstract_short": "Python\u2019s `lambda` is handy for writing tiny anonymous functions, but behind this little lambda lies an immensely powerful & elegant abstraction. The lambda calculus lets us represent our programs - all their logic and data - as pure, anonymous functions. Our `lambda` can build booleans, conditionals, numbers, operators, data structures\u2026 anything! Join me as we explore its astounding computational power, and walk away with a deeper respect and admiration for the almighty little `lambda`.\r\n\r\n",
      "sub_title": "Exploring the immense power of the lambda calculus",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@AnjanaVakil",
      "id": 937,
      "speakers": "Anjana Vakil",
      "title": "Mary had a little lambda",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "The Answer to Life the Universe and Everything Else",
        "Functional Programming"
      ],
      "abstract_long": [
        "_Mary had a little lambda,\r\na function pure as snow.\r\nAnd for every program that Mary wrote,\r\nthe lambda was all she needed to know._\r\n\r\nPython\u2019s `lambda`, a tiny anonymous function, can be useful in a pinch when you\u2019re feeling too lazy to type that extra `d`-`e`-`f`. But did you know that behind this little lambda is actually one of the most powerful & elegant abstractions in the history of computer science? \r\n\r\nThe lambda calculus, dating back to the work of lambda shepherd Alonzo Church in the 1930's, lets us represent our programs - all their logic and data - as pure, anonymous functions, using nothing but (a whole lot of) `lambda`. Let\u2019s take it for a spin and see what we can create: booleans and conditionals, integers, arithmetical operators, data structures\u2026 you name it. With some determination, and a little squinting, we might even see lambda do the impossible: reconcile object-oriented and functional programming. You heard it right: lambda can do it all!\r\n\r\nJoin me as we explore its astounding computational power, and walk away with a deeper respect and admiration for the almighty little `lambda`.\r\n"
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 7.00
        },
        {
          "3543": 10.00
        },
        {
          "468": 10.00
        },
        {
          "251": 7.00
        },
        {
          "2209": 3.00
        },
        {
          "3311": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "2834": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "1908": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3428": 10.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "3292": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3605": 3.00
        },
        {
          "3573": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2813": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "269": 10.00
        },
        {
          "2479": 7.00
        },
        {
          "2585": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "1102": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3348": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "3801": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 10.00
        },
        {
          "3684": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "93": 10.00
        },
        {
          "3296": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "509": 2.00
        },
        {
          "2169": 3.00
        },
        {
          "3818": 2.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 9.00
        },
        {
          "1490": 2.00
        },
        {
          "171": 9.00
        },
        {
          "3743": 9.00
        },
        {
          "3264": 9.00
        },
        {
          "3477": 7.00
        },
        {
          "3327": 2.00
        },
        {
          "242": 10.00
        },
        {
          "3384": 7.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "http://vakila.github.io/talks/",
      "tag_categories": [
        "Everything Else",
        "Programming"
      ],
      "emails": "anjanavakil@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/mary-had-a-little-lambda",
      "admin_type": "",
      "companies": "\u00dcberResearch"
    },
    "785": {
      "abstract_short": "Meson is a build system implemented in Python 3 that aims to make the process of building code both fast and easy. This talk goes over the design of Meson, how to use it for new and existing projects and the benefits this brings, including faster compiles, less times wasted debugging the build system environment and easy access to modern software development tools and practices.",
      "sub_title": "",
      "timerange": "2017-07-10 10:30:00, 2017-07-10 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@jpakkane",
      "id": 785,
      "speakers": "Jussi Pakkanen",
      "title": "Meson: compiling the world with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "All Other Programming Languages",
        "Tooling",
        "Open-Source",
        "Development",
        "Cross-Platform-Development"
      ],
      "abstract_long": [
        "Compiling source code into libraries and executables has always been problematic, especially for cross platform projects. Typical problems in existing build systems include slow build times, undecipherable syntax, lack of support for cross compilation and so on. Some people choose to not use a build system at all but instead just write a one-off Makefile, which will usually work fine on their machine and nowhere else. All this makes software development slower than it needs to be.\r\n\r\nThe [Meson build system][1] is a new build system designed from the ground up to provide a solution for these (and other) problems. It is implemented in Python 3 and provides a simple, non-Turing complete DSL for describing the build. The project provides built-in support for common tasks such as documentation generation, building Qt apps and Python extension modules. Meson is currently seeing a lot of uptake in the Free software world with big projects such as GStreamer, parts of GNOME, Wayland and even the X server either transitioning, or very strongly considering the transition to Meson. \r\n\r\nIn this talk we go over the design of Meson, how to use it for new and existing projects and the benefits this brings, including faster compiles, less time wasted debugging the build system environment and easy access to modern software development tools and practices.\r\n\r\n  [1]: http://mesonbuild.com\r\n"
      ],
      "user_votes": [
        {
          "1973": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3554": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "468": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "509": 3.00
        },
        {
          "545": 2.00
        },
        {
          "310": 6.00
        },
        {
          "380": 2.00
        },
        {
          "562": 9.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Other Programming Languages",
        "Programming",
        "Open Source",
        "Programming",
        "Python"
      ],
      "emails": "jpakkane@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/meson-compiling-the-world-with-python",
      "admin_type": "",
      "companies": "Rakettitiede oy"
    },
    "874": {
      "abstract_short": "The main goal of this presentation is to make beginner audience familiar with mocks and patches but there is a chance that more experienced ones will also find something new for themselves. Presentation shows the common use cases when developing unit tests. I will say what are the best practices when working with mocks and patches and what kind of mistakes, done by many developers, may be avoided so the dragons will not come. During this presentation I will prepare mock-it-o drink as a prize.",
      "sub_title": "",
      "timerange": "2017-07-10 16:20:00, 2017-07-10 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 874,
      "speakers": "Maciej Pola\u0144czyk",
      "title": "Mock it right! A beginner\u2019s guide to world of tests and mocks.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Developing with Python",
        "Best Practice",
        "Testing"
      ],
      "abstract_long": [
        "The main goal of this presentation is to make beginner audience familiar with mocks and patches but there is a chance that more experienced ones will also find something new for themselves. Presentation shows the common use cases when developing unit tests. I will say what are the best practices when working with mocks and patches and what kind of mistakes, done by many developers, may be avoided so the dragons will not come. During this presentation I will prepare mock-it-o drink as a prize.\r\n\r\nFirst, I will briefly introduce an audience with the topic of unit testing. Then I will show a simple code which will be tested during the presentation. It covers all common use cases of writing unit tests which are usage of mocks, patches and their side effects. In the end I will show a template of unit test which will be extended according to our needs.\r\n\r\nNext, I will say what is a mock, and what are the benefits of using it. Why it is better than any Dummy class implemented for purpose of unit tests and, what is the most important and sometimes forgotten by experienced developers, how to create the best mock, which involves using spec_set and spec to protect us from dragons when interface of mocked class changes.\r\n\r\nLast but not least part of my presentation will be dedicated to patches. I will explain when and how patches should be used (how to use side_effect, patch properties and environment variables). Finally, I will say how to avoid common mistakes when working with patches."
      ],
      "user_votes": [
        {
          "3364": 7.00
        },
        {
          "3256": 7.00
        },
        {
          "683": 7.00
        },
        {
          "251": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "2169": 3.00
        },
        {
          "2834": 10.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "3637": 3.00
        },
        {
          "3592": 7.00
        },
        {
          "1214": 7.00
        },
        {
          "1900": 7.00
        },
        {
          "3292": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "316": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "1132": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "2057": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "2365": 3.00
        },
        {
          "3801": 10.00
        },
        {
          "3486": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2875": 7.00
        },
        {
          "646": 7.00
        },
        {
          "93": 7.00
        },
        {
          "2127": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "3628": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 6.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "171": 6.00
        },
        {
          "105": 3.00
        },
        {
          "3777": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3481": 10.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        "Testing"
      ],
      "emails": "maciej.polanczyk@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/mock-it-right-a-beginners-guide-to-world-of-tests-and-mocks",
      "admin_type": "",
      "companies": "STX Next"
    },
    "1125": {
      "abstract_short": "Modelling pollution from transportation from smartphone data, by combining traffic models, GIS, databases and Python.The talk presents results from my PhD project on models for transportation related pollution.",
      "sub_title": "",
      "timerange": "2017-07-14 15:45:00, 2017-07-14 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1125,
      "speakers": "Anders Lehmann",
      "title": "Modelling pollution from traffic, using Smartphone data and Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Science",
        "PostgreSQL",
        "MongoDB",
        "Case Study"
      ],
      "abstract_long": [
        "The talk presents results from my PhD project on models for transportation related pollution.\r\n\r\nPollution from personal transport in Cities is a big and growing problem. By monitoring the flow, and congestion in the transport system two goals can be achieved. First, the adherence to agreed limit values (or breaking said limits) can be followed and used to decrease health effects of local pollution hotspots. Secondly, monitoring of the total emission of climate forcing gases from transportation, is important for designing climate mitigation actions. \r\n\r\nPython is used in combination with other tools to convert sensor data from smartphones, into pollution concentrations in urban settings. To mitigate the lack of complete data coverage, the missing data is simulated by a traffic model, to locate congestion and model the traffic related pollution concentration.\r\n\r\n"
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "3310": 7.00
        },
        {
          "47": 7.00
        },
        {
          "1481": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 10.00
        },
        {
          "3764": 7.00
        },
        {
          "3328": 3.00
        },
        {
          "419": 7.00
        },
        {
          "3456": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "269": 10.00
        },
        {
          "2479": 7.00
        },
        {
          "3507": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "3699": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "3777": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3684": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "545": 2.00
        },
        {
          "3407": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3743": 2.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        "Databases",
        "Databases",
        "Case Study"
      ],
      "emails": "redorlik@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/modelling-pollution-from-traffic-and-python",
      "admin_type": "",
      "companies": "University of Aarhus"
    },
    "1009": {
      "abstract_short": "[Scientific aircraft research flights have to be planned beforehand][1]. For that it is necessary to have model forecasts of relevant quantities such as meteorological parameters, chemical composition or particle information to guide the aircraft to the location of interest. We develop the [MSS Project][2] to make decissions easier where to investigate.\r\n\r\n  [1]: http://www.geosci-model-dev.net/5/55/2012/\r\n  [2]: http://mss.rtfd.io/\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 14:35:00, 2017-07-12 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 1009,
      "speakers": "Reimar Bauer",
      "title": "MSS - Software for planning research aircraft missions",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Visualization",
        "PyQt",
        "Open-Source",
        "Data Science",
        "Community"
      ],
      "abstract_long": [
        "[Scientific aircraft research flights have to be planned beforehand.][1] For that it is necessary to have model forecasts of relevant quantities such as meteorological parameters, chemical composition or particle information to guide the aircraft to the location of interest. Typically, many scientific instruments on board those aircrafts used to investigate e.g. the chemical composition of the air in order to get new insights often with the involvement of different science groups.\r\n\r\nFor discussion of the possibilites of the research flights, the [Mission Support System][2] (MSS) was developed. This software helps to review a big amount of metereological and model data by viewing the forecasted parameters of interest along possible regions of a proposed flight path. Data and possible flight paths can be displayed on a hoizontal view (map projection) or on a vertical view (along the proposed flight path). Flight paths can be constructed and modified on these views. Exchange through a waypoint table is also possible.\r\n\r\nThe talk gives a brief insight into the MSS software development current state.\r\n\r\nWe are using the OWS interface standard. https://geopython.github.io/OWSLib/ MSS is a client/server application. The QT client interacts with a paste wsgi server. The software is available for all platforms on conda-forge.\r\n\r\n  [1]: http://www.geosci-model-dev.net/5/55/2012/\r\n  [2]: http://mss.rtfd.io/\r\n"
      ],
      "user_votes": [
        {
          "1973": 7.00
        },
        {
          "468": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3496": 7.00
        },
        {
          "489": 10.00
        },
        {
          "434": 7.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "1877": 7.00
        },
        {
          "3628": -1.00
        },
        {
          "2834": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Programming",
        "Open Source",
        "Data Science",
        "Community"
      ],
      "emails": "rb.proj@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/mss-software-for-planning-research-aircraft-missions",
      "admin_type": "",
      "companies": "Forschungszentrum J\u00fclich GmbH"
    },
    "950": {
      "abstract_short": "Pandas powerful indexing make advanced analytics a piece of cake. Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilising Pandas powerful indexing.",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@hendorf",
      "id": 950,
      "speakers": "Alexander Hendorf",
      "title": "Neat Analytics with Pandas Indexes",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilising Pandas powerful indexing and make advanced analytics a piece of cake.\r\n\r\nWe will cover:\r\n\r\n* Pandas indexing recap\r\n* Index Types\r\n* Time-Series Index and resampling\r\n* Pandas Multi-Indexing\r\n"
      ],
      "user_votes": [
        {
          "3637": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "3543": 7.00
        },
        {
          "135": 7.00
        },
        {
          "3420": 10.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 10.00
        },
        {
          "3278": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "1022": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "2069": 7.00
        },
        {
          "480": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "1924": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "269": 10.00
        },
        {
          "3407": 7.00
        },
        {
          "3777": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3318": 10.00
        },
        {
          "3816": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "1355": 2.00
        },
        {
          "93": 2.00
        },
        {
          "1897": 2.00
        },
        {
          "767": 6.00
        },
        {
          "310": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 9.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "1490": 2.00
        },
        {
          "3495": 6.00
        },
        {
          "2286": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": -1.00
        },
        {
          "3629": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "hendorf@opotoc.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/neat-analytics-with-pandas-indexes",
      "admin_type": "",
      "companies": "K\u00f6nigsweg GmbH"
    },
    "887": {
      "abstract_short": "This talk will walk you through the creation of [NetDim][1], a network modeling and automation GIS software that use libraries such as tkinter (Python interface to Tcl/Tk), shapely, and exscript.\r\nNetDim is designed for ISP networks, which infrastructure can scale up to hundreds of thousands of devices.\r\n\r\n  [1]: http://netdim.fr\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 12:10:00, 2017-07-13 12:55:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@",
      "id": 887,
      "speakers": "Antoine Fourmy",
      "title": "Network visualization and automation",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Visualization",
        "Configuration Management (Ansible/Fabric/Chef/...)",
        "Infrastructure",
        "Open-Source",
        "GEO and GIS"
      ],
      "abstract_long": [
        "Network automation and orchestration is the latest phase in the evolution of IP and optical networks.\r\nOver the last few years, network engineers have created a variety of libraries and softwares to help them with the management, configuration and automation of huge networks made of hundreds of thousands of network devices (e.g. routers, switches, antenna...).\r\n\r\nIn this talk, I will introduce NetDim, a vendor-neutral software for network modeling and automation based on the standard Python library for GUI programming: tkinter.\r\n\r\nI will start the presentation with an introduction to network visualization, and show how tkinter can be used to implement graph drawing algorithms, as well as a full-on Geographic Information System (GIS), allowing one to place network devices on a world map at their GPS coordinates.\r\n\r\nI will then discuss the whys and wherefores of network automation, and show how to automatically generate and push scripts to a network device via SSH or Telnet.\r\n\r\nMore details about NetDim on github ([https://github.com/mintoo/NetDim][1]) and on this website ([http://netdim.fr][2])\r\n\r\n  [1]: https://github.com/mintoo/NetDim\r\n  [2]: http://netdim.fr\r\n"
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "468": 7.00
        },
        {
          "251": 3.00
        },
        {
          "3310": 3.00
        },
        {
          "3459": 3.00
        },
        {
          "1481": 3.00
        },
        {
          "685": 3.00
        },
        {
          "3463": 3.00
        },
        {
          "3605": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "2813": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "3369": 7.00
        },
        {
          "663": 10.00
        },
        {
          "3597": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "3695": 3.00
        },
        {
          "300": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "1355": 2.00
        },
        {
          "93": 2.00
        },
        {
          "2834": 2.00
        },
        {
          "310": 9.00
        },
        {
          "562": 2.00
        },
        {
          "3418": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "DevOps",
        "DevOps",
        "Open Source",
        "Everything Else"
      ],
      "emails": "antoinefourmy@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/network-visualization-and-automation-with-python",
      "admin_type": "",
      "companies": ""
    },
    "973": {
      "abstract_short": "OpenAPI (Swagger) is one of the promising and popular frameworks for API development. OpenAPI also has so many tools for development like editor, code-generator and so on. In this talk, I will talk about OpenAPI itself and ecosystem including these useful tools tools related to Python. I will talk also an actual case study of my company's project and explain how we make use of them.",
      "sub_title": "",
      "timerange": "2017-07-11 12:10:00, 2017-07-11 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@taxpon",
      "id": 973,
      "speakers": "Takuro Wada",
      "title": "OpenAPI development with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Use Case",
        "Web Track",
        "Documentation",
        "APIs",
        "RESTful"
      ],
      "abstract_long": [
        "# Goal\r\nAfter this session, audiences will get\r\n- Basic knowledge of OpenAPI (Swagger)\r\n- Ecosystem of OpenAPI(Swagger) and tools related to Python and knowledge to make use of them in their own projects \r\n\r\n# Audience\r\n(1) This talk is for:\r\n- Developers who are creating or using API services such as web applications, mobile applications and all other kinds of applications\r\n\r\n(2) Audience will be expected to have (prerequisite):\r\n- Basic knowledge of development with API (REST and others) \r\n- Basic knowledge of Python\r\n\r\n# Outline\r\n## Introduction (3min)\r\n- Agenda of this talk\r\n- Myself introduction\r\n\r\n## OpenAPI(Swagger) introduction and basics (9min)\r\n- What is OpenAPI and what is the relation with Swagger? (3min)\r\n- Comparison with other frameworks for APIs (3min)\r\n    - api blueprint, json schema and ..\r\n- OpenAPI pros and cons (3min)\r\n\r\n## OpenAPI ecosystem and tools (8min)\r\n- OpenAPI(Swagger) core tools (4min)\r\n    - Swagger editor, Swagger codegen and Swagger UI\r\n- OpenAPI tools related to Python (4min)\r\n    - Some tools for python api development with OpenAPI\r\n\r\n## Actual case study with OpenAPI and Python (8min)\r\n- Introduce our projects with OpenAPI, Python and other program (like Angular, Typescript and so on) and explain how swagger is well working in our company\r\n\r\n## Recap and Conclusion (2min) \r\n"
      ],
      "user_votes": [
        {
          "195": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "251": 7.00
        },
        {
          "3310": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 3.00
        },
        {
          "3701": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "3554": 7.00
        },
        {
          "3084": 7.00
        },
        {
          "306": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "3398": 10.00
        },
        {
          "663": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 7.00
        },
        {
          "2875": 3.00
        },
        {
          "468": 10.00
        },
        {
          "1897": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 9.00
        },
        {
          "3384": 10.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Programming",
        "Web",
        "Web"
      ],
      "emails": "taxpon@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/openapi-development-with-python",
      "admin_type": "",
      "companies": "Kabuku Inc."
    },
    "863": {
      "abstract_short": "The talk focuses on three parts.\r\n1. Introduction to NetworkX.\r\n2. Basic Introduction to Network Flow.\r\n3. Optimization using Flow networks and NetworkX.",
      "sub_title": "",
      "timerange": "2017-07-13 14:35:00, 2017-07-13 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 863,
      "speakers": "Rishabh Daal , IMD, Maths & Computing, IIT (BHU), Varanasi (INDIA)",
      "title": "Optimization using Flow Networks in NetworkX.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Education",
        "Algorithms",
        "Programming",
        "Teaching",
        "Case Study"
      ],
      "abstract_long": [
        "**Prerequisite:** Basic Programming.\r\n\r\n\r\n**Goals:**\r\n\r\n\r\n - Introduction to NetworkX Library\r\n\r\n\r\n - Using NetworkX for optimization Techniques using Network Flow.\r\n\r\n\r\n\r\n\r\nThis talk can be divided into three major parts.\r\n\r\n1. Introduction to NetworkX.\r\n\r\n2. Basic Introduction to Network Flow.\r\n\r\n3. The solution of [Project selection problem][1] using Network Flow and NetworkX.\r\n\r\n\r\n**1. Introduction to NetworkX.**\r\n\r\n\r\n - What is NetwrokX?\r\n\r\n\r\n - Creating a graph in NetworkX.\r\n\r\n\r\n -  Some awesome methods.\r\n\r\n\r\n - Algorithms available.\r\n\r\n\r\n -  Using with other libraries like Pandas.\r\n\r\n\r\n**2. Basic Introduction to Network Flow.**\r\n\r\n - Origin of Problem: Mincut of soviet union railway network. \r\n\r\n\r\n - A quick explanation of Max-Flow and min-cut problem.\r\n\r\n\r\n - Max-flow = min-cut\r\n\r\n\r\n - How to reduce problems for Network Flow optimization?\r\n\r\n\r\n - Model the problem for using NetworkX\r\n\r\n\r\n\r\n**3. Solution of Project selection Problem using NetworkX.**\r\n\r\n - Problem statement.\r\n\r\n\r\n - How can we solve it using max flow / min-cut?\r\n\r\n\r\n - Modeling in form of graph.\r\n\r\n\r\n - Proof of correctness\r\n\r\n\r\n - Representing the graph in NetworkX\r\n\r\n\r\n - Finding answer in NetworkX\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Max-flow_min-cut_theorem#Project_selection_problem\r\n"
      ],
      "user_votes": [
        {
          "3520": 10.00
        },
        {
          "3302": 10.00
        },
        {
          "468": 10.00
        },
        {
          "251": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1884": 3.00
        },
        {
          "2365": 10.00
        },
        {
          "85": 7.00
        },
        {
          "300": 3.00
        },
        {
          "2834": -1.00
        },
        {
          "1897": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": 2.00
        },
        {
          "3495": 9.00
        },
        {
          "2286": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Data Science",
        "Programming",
        "Everything Else",
        "Case Study"
      ],
      "emails": "rishabh.daal.apm13@itbhu.ac.in",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/optimization-using-flow-in-networkx",
      "admin_type": "",
      "companies": "Indian Institute Of Technology Varanasi."
    },
    "877": {
      "abstract_short": "As Hotjar\u2019s data in PostgreSQL grows, we discuss the challenges encountered at the lower end of big data: the good decisions which helped keep our application running and other lessons we had to learn the hard way.\r\n\r\n - Considerations for Database Design\r\n - Speak to the database from your Web Application.\r\n - Bringing data closer to your Web Application\r\n - Handling Operational Troubles\r\n - Reducing Impact of Background Maintenance Jobs\r\n\r\n",
      "sub_title": "",
      "timerange": "2017-07-13 15:45:00, 2017-07-13 16:15:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 877,
      "speakers": "Stephanie Mifsud",
      "title": "Optimizing queries for not so big data in PostgreSQL",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "PostgreSQL",
        "Performance",
        "python",
        "SQL Alchemy",
        "Data"
      ],
      "abstract_long": [
        "Hotjar\u2019s user recordings count above 400 million, with supporting tables containing 4.5 billion records. This 5TB data fits nicely into Postgres and doesn\u2019t quite merit the full big data suite of tools. However, at the rate of 1000 recordings per minute, and overall request rate of 750K per minute, the penalty of inefficient queries and updates can quickly cause nasty performance spikes if not thought out well.\r\nThis talk is about the challenges we faced at the lower end of big data: the good decisions which helped keep our application running and other lessons we had to learn the hard way.\r\n\r\n**Considerations for Database Design**\r\n\r\n - Design entities for the domain\r\n\r\n - Balance normalization with performance\r\n\r\n - Sharding later has big migration costs, consider designing for this early\r\n\r\n\r\n**Speak to the database from your Web Application**\r\n\r\n - Why use ORMs and at which level of abstraction?\r\n\r\n - Stored Procedures are fast, should we have more of those?\r\n\r\n\r\n**Bringing data closer to the application**\r\n\r\n - Materialize Views\r\n\r\n - Defer aggregations\r\n\r\n - Application Level Caching\r\n\r\n\r\n**Handling Operational Troubles**\r\n\r\n - Explain(analyze, buffers) is your friend\r\n\r\n - Detect and manage Index Bloat\r\n\r\n - Reduce Deadlocks\r\n\r\n\r\n**Reducing Impact of Background Maintenance Jobs**\r\n\r\n - Keep impact on database low with cursors and streaming\r\n\r\n - Plan data retention policies early, so cleaning can be an ongoing process\r\n\r\n"
      ],
      "user_votes": [
        {
          "1973": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "1924": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3668": 10.00
        },
        {
          "3547": 7.00
        },
        {
          "3428": 10.00
        },
        {
          "1900": 3.00
        },
        {
          "3496": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "1897": 7.00
        },
        {
          "782": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3574": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "85": 7.00
        },
        {
          "650": 3.00
        },
        {
          "3684": 7.00
        },
        {
          "2493": 3.00
        },
        {
          "3298": 7.00
        },
        {
          "2127": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "3143": 9.00
        },
        {
          "3495": 9.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "171": -1.00
        },
        {
          "468": -1.00
        },
        {
          "105": 7.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Databases",
        "Programming",
        "Python",
        "Databases",
        "Data Science"
      ],
      "emails": "stephanie@hotjar.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/optimizing-queries-for-not-so-big-data-in-postgresql",
      "admin_type": "",
      "companies": "Hotjar Ltd"
    },
    "1158": {
      "abstract_short": "Starting with a brief description of how built-in mechanisms in our brains lead to cognitive bias, the talk will address how a variety of cognitive biases manifest in the Python and tech communities, and how to overcome them.",
      "sub_title": "",
      "timerange": "2017-07-13 11:20:00, 2017-07-13 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@annaraven",
      "id": 1158,
      "speakers": "Anna Martelli Ravenscroft",
      "title": "Overcoming Cognitive Bias",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Communication",
        "Community"
      ],
      "abstract_long": [
        "Starting with a brief description of how built-in mechanisms in our brains lead to cognitive bias, the talk will address how a variety of cognitive biases manifest in the Python and tech communities, and how to overcome them."
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Community",
        "Community"
      ],
      "emails": "annaraven@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/overcoming-cognitive-bias",
      "admin_type": "",
      "companies": ""
    },
    "780": {
      "abstract_short": "Most of python developers don't use pandas (either because they never heard of it, felt that it's a too steep learning curve or never thought that it will be useful for them). I intend to talk about python performance limitations and show how pandas can be used to overcome some of these limitations. The talk will be accompanied by a live Jupiter Notebook session that will demonstrate a typical use of pandas.",
      "sub_title": "",
      "timerange": "2017-07-14 12:10:00, 2017-07-14 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 780,
      "speakers": "Uzi Halaby Senerman",
      "title": "Pandas - not just for data scientists",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Performance",
        "Jupyter/iPython",
        "Data Science"
      ],
      "abstract_long": [
        "This is not a tutorial. It's an attempt to expose non data scientists experienced pythonistas to the powerful pandas library. Most of python developers don't use pandas (either because they never heard of it, felt that it's a too steep learning curve or never thought that it will be useful for them). I intend to talk about python performance limitations and show how pandas can be used to overcome some of these limitations. The talk will be accompanied by a live Jupiter Notebook session that will demonstrate a typical use of pandas.\r\n"
      ],
      "user_votes": [
        {
          "1897": 7.00
        },
        {
          "3364": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "251": 3.00
        },
        {
          "1924": 7.00
        },
        {
          "468": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3764": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "2813": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "663": 3.00
        },
        {
          "3398": 7.00
        },
        {
          "3486": 10.00
        },
        {
          "3360": 10.00
        },
        {
          "651": 7.00
        },
        {
          "3535": 10.00
        },
        {
          "650": 3.00
        },
        {
          "3318": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "310": 6.00
        },
        {
          "3498": 10.00
        },
        {
          "489": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1041": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3711": 7.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Data Science",
        "Data Science"
      ],
      "emails": "uzi.halaby.senerman@bluevine.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pandas-not-just-for-data-scientists",
      "admin_type": "",
      "companies": "BlueVine"
    },
    "1126": {
      "abstract_short": "Introducing Python developers to the world of physical computing and IoT using Python on the Raspberry Pi.\r\n\r\nThere's great fun to be had using the Pi's GPIO pins to connect with the real world for home automation and IoT projects. Python libraries like GPIO Zero, Picamera and Sense HAT provide a simple interface to GPIO devices, HATs and more.\r\n\r\nI will demonstrate the possibilities and show the power of Python in this environment.",
      "sub_title": "",
      "timerange": "2017-07-14 10:30:00, 2017-07-14 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@ben_nuttall",
      "id": 1126,
      "speakers": "Ben Nuttall",
      "title": "Physical computing with Raspberry Pi and Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Education",
        "Hardware/IoT Track",
        "Raspberry PI",
        "Internet of Things (IoT)",
        "Community"
      ],
      "abstract_long": [
        "The Raspberry Pi Foundation is working to put the power of digital making in the hands of people all over the world, and is well known for its series of small, cheap single board computers.\r\n\r\nThe Raspberry Pi runs a well supported Linux distro based on Debian, which ships with a variety of programming tools and educational software. Python is the main supported language on the platform, used in many educational resources, and many Python libraries exist for making the most of the Pi platform with other devices.\r\n\r\nI will cover:\r\n\r\n- Raspberry Pi Foundation mission\r\n- Raspberry Pi hardware specs\r\n- Raspbian desktop\r\n- GPIO pins\r\n- GPIO Zero (Python library)\r\n- Picamera\r\n- Astro Pi (ESA space mission) & Sense HAT\r\n- More HATs\r\n- Pi projects\r\n- Raspberry Pi community"
      ],
      "user_votes": [
        {
          "3531": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "47": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 10.00
        },
        {
          "685": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "269": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "2294": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "71": 10.00
        },
        {
          "3398": 7.00
        },
        {
          "663": 3.00
        },
        {
          "3597": 7.00
        },
        {
          "3777": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "646": 3.00
        },
        {
          "85": -1.00
        },
        {
          "1924": 2.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 9.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "171": 6.00
        },
        {
          "3345": 9.00
        },
        {
          "1490": 7.00
        },
        {
          "3495": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3743": 2.00
        },
        {
          "3327": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 7.00
        },
        {
          "3629": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        ">>> Suggested Track",
        "Hardware",
        "Hardware",
        "Community"
      ],
      "emails": "ben.nuttall.27@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/physical-computing-with-raspberry-pi-and-python",
      "admin_type": "",
      "companies": "Raspberry Pi Foundation"
    },
    "895": {
      "abstract_short": "**Plone** has been around for many years as one of the most successful Python CMS for many years and still will be.\r\nOne of its key features is **security**, something you want to consider seriously given the times we are living in.\r\nDuring the talk I will show why **Plone** security is so rock solid, I will review some of its many built in superpowers and I will report on the current foreseen development.",
      "sub_title": "",
      "timerange": "2017-07-14 11:20:00, 2017-07-14 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@ale_pisa",
      "id": 895,
      "speakers": "Alessandro Pisa",
      "title": "Plone: where is it today and where is it going",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Plone",
        "Web Track"
      ],
      "abstract_long": [
        "**Plone** CMS, first released in 2001, is now close to its 5.1 version.\r\n\r\nDid you know that the **2016 Olympics web site** was built with **Plone**?\r\nDid you know that many **huge organizations** that care about data protection use **Plone**?\r\n\r\nThere are good reason why **Plone** is such a successful Python project, but probably the most important is that **Plone** does take into account the security of your data very seriously.\r\n\r\nNowadays, information and data play a crucial role, sometimes they are the more important asset of a company.\r\nThey have to be in a digital form and accessible from every device, it is no surprise that they are exposed to a growing threat.\r\n\r\nDuring the talk I will review **Plone** built in security protection systems.\r\nIn addition I will review some of its features, like the ability to create, without writing a line of code, custom content types, to change documents workflows, to organize your documents in a snap.\r\n\r\nI will also talk about the foreseen new features that will be soon in **Plone** and I will present **Castle CMS** and **Quaive**, some important projects built on top of **Plone** that are currently under the spotlight.\r\n\r\n"
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "195": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "1924": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "3428": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "434": 3.00
        },
        {
          "2585": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "663": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "3469": 3.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "93": 10.00
        },
        {
          "3299": 10.00
        },
        {
          "2985": 3.00
        },
        {
          "530": 2.00
        },
        {
          "69": 2.00
        },
        {
          "300": -1.00
        },
        {
          "380": -1.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "706": 9.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Application Frameworks",
        ">>> Suggested Track"
      ],
      "emails": "alessandro.pisa@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/plone-where-is-it-today-and-where-is-it-going",
      "admin_type": "",
      "companies": "Syslab.com"
    },
    "1074": {
      "abstract_short": "Utility of selected features of PostgreSQL 10.0 and 9.6 explained. How PostgreSQL enables Python developers to store the Data yielded by Industry 4.0 and IoT. Technical and use case explanation of those features.",
      "sub_title": "",
      "timerange": "2017-07-12 11:20:00, 2017-07-12 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@mcltm",
      "id": 1074,
      "speakers": "Harald Armin Massa",
      "title": "PostgreSQL - The Database for Industry 4.0 and IOT",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Big Data",
        "Business",
        "Best Practice",
        "Data",
        "Analytics"
      ],
      "abstract_long": [
        "Industry 4.0 - the current trend to make more use of data technology\r\nand analysis in manufactring. \r\n\r\nIOT - The Internet of Things, where many \"things\" currently just loosing their information will transfer and store them within central systems.\r\nThere are aspects of those trends most do agree on: \r\nThere will be orders of magnitude more data to store and analyze. \r\nMore agents will need to connect and interact with databases.\r\nThis talk will explore what makes PostgreSQL an excellent candidate to be the database for \r\nmanaging all that data. Strengths in development,  culture and community, extensibility and robustnest will be presented.\r\nSelected features of current Version 9.6 and the soon-to-be-released PostgreSQL Version 10 will be discussed for their value in those trends. There will be an explanation of their technical realisation, and special pointers how to use those features from PostgreSQL.\r\n"
      ],
      "user_votes": [
        {
          "1973": 10.00
        },
        {
          "468": 3.00
        },
        {
          "2209": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "135": 3.00
        },
        {
          "3370": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "1908": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "3428": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "3328": 7.00
        },
        {
          "1035": 10.00
        },
        {
          "2069": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "1897": 7.00
        },
        {
          "1966": 10.00
        },
        {
          "2585": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "306": 7.00
        },
        {
          "3486": 3.00
        },
        {
          "3360": 7.00
        },
        {
          "650": 3.00
        },
        {
          "3298": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "509": 10.00
        },
        {
          "3495": 9.00
        },
        {
          "1924": -1.00
        },
        {
          "300": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Business",
        "Best Practice and Use Cases",
        "Data Science",
        "Data Science"
      ],
      "emails": "chef@ghum.de",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/postgresql-the-database-for-industry-40-and-iot",
      "admin_type": "",
      "companies": "2ndQuadrant Deutschland GmbH"
    },
    "1115": {
      "abstract_short": "This talk is about a love story. \r\nThe perfect love between PostgreSQL and Python.\r\nPostgreSQL is the default database choice for many Python developers, because it is robust, stable and open source.\r\nIn 2ndQuadrant, we breathe PostgreSQL and we love python too, using it as much as possible for internal and external open source projects. We want to share our love for python and PostgreSQL and how they work together. So let us tell you a real love story!",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@asdmaster",
      "id": 1115,
      "speakers": "Giulio Calacoci",
      "title": "PostgreSQL and Python, a match made in heaven",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "PostgreSQL",
        "Open-Source"
      ],
      "abstract_long": [
        "This talk is about a love story. \r\nThe perfect love between PostgreSQL and Python.\r\nPostgreSQL is the default database choice for many Python developers, because it is robust, stable and open source.\r\nIn 2ndQuadrant, we breathe PostgreSQL and we love python too, using it as much as possible for internal and external open source projects. We want to share our love for python and PostgreSQL and how they work together. So let us tell you a real love story!"
      ],
      "user_votes": [
        {
          "251": 3.00
        },
        {
          "1481": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "3310": 3.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "3404": 10.00
        },
        {
          "564": 3.00
        },
        {
          "3328": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3573": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "3314": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "3398": 3.00
        },
        {
          "2585": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3574": 3.00
        },
        {
          "3369": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "3360": 10.00
        },
        {
          "650": 7.00
        },
        {
          "3684": 10.00
        },
        {
          "3278": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2127": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "93": 2.00
        },
        {
          "2834": 6.00
        },
        {
          "1897": 6.00
        },
        {
          "530": 2.00
        },
        {
          "3495": 9.00
        },
        {
          "310": 6.00
        },
        {
          "300": -1.00
        },
        {
          "380": 6.00
        },
        {
          "3376": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "171": 2.00
        },
        {
          "105": 3.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3274": 9.00
        },
        {
          "468": -1.00
        },
        {
          "3711": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Databases",
        "Open Source"
      ],
      "emails": "giulio.calacoci@2ndquadrant.it",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/postgresql-and-python-a-match-made-in-heaven",
      "admin_type": "",
      "companies": "2ndQuadrant "
    },
    "787": {
      "abstract_short": "When we write code, oftentimes things are not working as expected. We followed the tutorial and yet we got an error. We introduce a new feature but something else broke. \r\n\r\nHaving to deal with bugs is inevitable. Trying to \"debug\" what happened or what caused the problem can be really frustrating and time-wasting.\r\n\r\n**The aim of this talk is go give ways to think & steps to take when we are faced with the process of debugging.**\r\n\r\nThe language for the examples is going to be Python.",
      "sub_title": "",
      "timerange": "2017-07-14 11:20:00, 2017-07-14 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@Rado_g",
      "id": 787,
      "speakers": "Radoslav Georgiev",
      "title": "Practical Debugging - Tips, Tricks and Ways to think",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Debugging",
        "Use Case",
        "Best Practice",
        "Testing",
        "failures/mistakes"
      ],
      "abstract_long": [
        "When we write code, oftentimes things are not working as expected. We followed the tutorial and yet we got an error. We introduce a new feature but something else broke. \r\n\r\nHaving to deal with bugs is inevitable. Trying to \"debug\" what happened or what caused the problem can be really frustrating and timewasting.\r\n\r\n**The aim of this talk is go give ways to think & steps to take when we are faced with the process of debugging.**\r\n\r\nThe language for the examples is going to be Python & the tools used - from the python ecosystem.\r\n\r\nThe talk will be practical, with a lot of real-world examples.\r\n\r\nThe goal is to cover the following scenarios by showing different ways to approch the problem:\r\n\r\n- You followed a tutorial but it's not working. What to do?\r\n- You introduce new feature but things broke somewhere else in the project. What to do?\r\n- You are using a popular 3rd party library but something breaks. What to do?\r\n- A bug occurs and you have no idea what or who caused it. What to do?\r\n- You can't fix or find the bug. What now?\r\n- You want to generalize your debugging skills. How to do that?\r\n\r\nWe will be talking about critical changes, binary search, problem isolation, interactive debuggers, printing, testing, greping and other interesting things."
      ],
      "user_votes": [
        {
          "3637": 10.00
        },
        {
          "804": 7.00
        },
        {
          "3312": 10.00
        },
        {
          "3256": 10.00
        },
        {
          "1973": 10.00
        },
        {
          "3310": 10.00
        },
        {
          "251": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "3031": 7.00
        },
        {
          "2183": 3.00
        },
        {
          "685": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "3496": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "3328": 10.00
        },
        {
          "419": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "2069": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "3392": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "1132": 10.00
        },
        {
          "3402": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3492": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "85": 3.00
        },
        {
          "3469": 3.00
        },
        {
          "3360": 10.00
        },
        {
          "651": 7.00
        },
        {
          "650": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3448": 10.00
        },
        {
          "3823": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "3827": 9.00
        },
        {
          "3832": 9.00
        },
        {
          "3826": 9.00
        },
        {
          "2834": 2.00
        },
        {
          "1897": 2.00
        },
        {
          "3825": 10.00
        },
        {
          "930": 6.00
        },
        {
          "767": 6.00
        },
        {
          "2209": 2.00
        },
        {
          "3382": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "3376": 9.00
        },
        {
          "1041": 6.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "105": 2.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 6.00
        },
        {
          "2698": 6.00
        },
        {
          "468": 6.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Testing",
        "Best Practice and Use Cases",
        "Best Practice and Use Cases",
        "Testing",
        "Best Practice and Use Cases"
      ],
      "emails": "radorado@hacksoft.io",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/practical-debugging-tips-tricks-and-ways-to-think",
      "admin_type": "",
      "companies": "HackSoft"
    },
    "1013": {
      "abstract_short": "Threads are typically not the way to take advantage of multiple CPUs for CPU-bound problems. The Global Interpreter Lock (GIL) allows the use of only one CPU at the time when using threads. However, the GIL is released for IO task.\r\n\r\nDepending on the use case, threading can help to speedup a program and even take advantage of multiple CPUs. This talk presents such a use case. The approach can be translated to problems from other domains if the sub-tasks can be turned into IO tasks.\r\n",
      "sub_title": "",
      "timerange": "2017-07-14 12:10:00, 2017-07-14 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@pyacademy",
      "id": 1013,
      "speakers": "Mike M\u00fcller",
      "title": "Programming in Parallel with Threads",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Developing with Python",
        "Performance",
        "Multi-Threading",
        "Multi-Processing",
        "Use Case"
      ],
      "abstract_long": [
        "Threads are typically not the way to take advantage of multiple CPUs for CPU-bound problems. The Global Interpreter Lock (GIL) allows the use of only one CPU at the time when using threads. However, the GIL is released for IO task.\r\n\r\nThe use case is a scientific simulation model that has to run 18,000 different simulations. The input data for these simulations need to be extracted from a common database, re-assembled and translated into several input files per simulation. After each simulation that is run with an external, standalone executable, the output data needs to be gathered and rearranged in a output database.\r\n\r\nThe implementation scaled up to 50 threads. On a eight-core machine more than 90 % usage of all CPUs could be achieved, bringing the total run time down to about two hours from about 15 hours.\r\n\r\nDepending on the use case, threading can help to speedup a program and even take advantage of multiple CPUs. This talk presents such a use case. The approach can be translated to problems from other domains if the sub-tasks can be turned into IO tasks.\r\n\r\nAsynchronous programming could have been used here. However using a thread per task and using class that represents a task, is likely conceptually simpler for programmers not used to asynchronous programming. Because th"
      ],
      "user_votes": [
        {
          "1973": 7.00
        },
        {
          "468": 10.00
        },
        {
          "74": 3.00
        },
        {
          "3310": 7.00
        },
        {
          "251": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "3311": 10.00
        },
        {
          "135": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "3278": 3.00
        },
        {
          "3701": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "564": 7.00
        },
        {
          "3496": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "434": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "789": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "2813": 7.00
        },
        {
          "306": 3.00
        },
        {
          "3350": 10.00
        },
        {
          "3492": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 10.00
        },
        {
          "3535": 3.00
        },
        {
          "300": 3.00
        },
        {
          "3597": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "3506": 2.00
        },
        {
          "3628": 6.00
        },
        {
          "1897": 2.00
        },
        {
          "3339": 6.00
        },
        {
          "767": 2.00
        },
        {
          "3603": 2.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3418": 2.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 6.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Programming",
        "Programming",
        "Programming",
        "Best Practice and Use Cases"
      ],
      "emails": "mmueller@python-academy.de",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/programming-in-parallel-with-threads",
      "admin_type": "",
      "companies": "Python Academy GmbH & Co. KG"
    },
    "829": {
      "abstract_short": "Python is an interpreted development language with powerful introspection features, up to allow accesso to the byte code itself to see what the virtual machine is going to do. Reaching down to byte code or low level inspection is usually a very uncommon need and it's usually only involved in debugging or understanding the interpreter internals, but it can be a powerful tool to check that third parties code that (or future code we will write ourselves) sticks to some protocols or best practices.",
      "sub_title": "",
      "timerange": "2017-07-10 10:30:00, 2017-07-10 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@__amol__",
      "id": 829,
      "speakers": "Alessandro Molina",
      "title": "Protocols and Practices enforcing in Python through bytecode and inspection",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Type-Hinting",
        "Software Design",
        "Tooling",
        "Documentation",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "Python is an interpreted development language with powerful introspection features, up to allow accesso to the byte code itself to see what the virtual machine is going to do. Reaching down to byte code or low level inspection is usually a very uncommon need and it's usually only involved in debugging or understanding the interpreter internals, but it can be a powerful tool to check that third parties code that (or the code we will write ourselves in the future) sticks to some protocols or best practices that are supposed to be in place.\r\n\r\nMost of the needs for this checks are usually performed at execution time or through techniques like metaclasses and monkeypatching of third parties code, but in some cases it would be possible to inadvertently skip those checks or work them around, while verifying the resulting byte code allows us to check what's really going to be executed and enforce the required constraints."
      ],
      "user_votes": [
        {
          "804": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 7.00
        },
        {
          "195": 10.00
        },
        {
          "47": 7.00
        },
        {
          "251": 7.00
        },
        {
          "394": 3.00
        },
        {
          "2063": 7.00
        },
        {
          "468": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "564": 7.00
        },
        {
          "1466": 7.00
        },
        {
          "3463": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "3430": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "300": 3.00
        },
        {
          "306": 7.00
        },
        {
          "2057": 7.00
        },
        {
          "3407": 10.00
        },
        {
          "3369": 7.00
        },
        {
          "663": 3.00
        },
        {
          "651": 7.00
        },
        {
          "3695": 3.00
        },
        {
          "650": 10.00
        },
        {
          "3500": 10.00
        },
        {
          "3394": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "1897": 2.00
        },
        {
          "310": 6.00
        },
        {
          "3498": 7.00
        },
        {
          "767": 9.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 7.00
        },
        {
          "3412": -1.00
        },
        {
          "562": -1.00
        },
        {
          "2183": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Programming",
        "Programming",
        "Programming",
        "Python"
      ],
      "emails": "alessandro.molina@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/protocols-and-practices-enforcing-in-python-through-bytecode-and-inspection",
      "admin_type": "",
      "companies": ""
    },
    "1159": {
      "abstract_short": "pybind11 is a lightweight header-only C++11 library that exposes C++ types to Python and vice versa and allows creating Python extension modules with minimum boilerplate by leveraging compile-time introspection and type inference.\r\n\r\n In this talk, we will look at how to write Python extension modules in C++ from scratch with pybind11, starting from simple bindings and building up to more complex examples that deal with iterators, STL data structures, NumPy types and Python callbacks.",
      "sub_title": "",
      "timerange": "2017-07-14 11:20:00, 2017-07-14 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 1159,
      "speakers": "Ivan Smirnov",
      "title": "pybind11 - seamless operability between C++11 and Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Python general",
        "Developing with Python",
        "C-Languages",
        "CPython",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "[pybind11][1] is a lightweight header-only C++11 library that exposes C++ types to Python and vice versa and allows creating Python extension modules with minimum boilerplate by leveraging compile-time introspection and type inference. While this library's goals and some of the  syntax may be considered similar to Boost.Python, it has a much smaller footprint, is entirely self-contained, and offers additional features like direct support for NumPy arrays.\r\n\r\n In this talk, we will look at how to write Python extension modules in C++ from scratch with pybind11, starting from simple bindings and building up to more complex examples that deal with iterators, STL data structures, NumPy types and Python callbacks. We will also touch upon some of the internal machinery of the library like the virtual call mechanism and reference counting.\r\n\r\n  [1]: https://github.com/pybind/pybind11"
      ],
      "user_votes": [],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        ">>> Suggested Track",
        "Other Programming Languages",
        "Python",
        "Python"
      ],
      "emails": "i.s.smirnov@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/pybind11-seamless-operability-between-c11-and-python",
      "admin_type": "",
      "companies": " Susquehanna International Group (Dublin, Ireland)"
    },
    "1056": {
      "abstract_short": "PyCharm, a Python IDE with its free and open-source community edition, in last several years has become a tool of choice for more and more Python developers. But not everybody uses its full power. Moreover, most only use a fraction of the functionality it provides.\r\n\r\nIn this talk, we will go through the most powerful features the IDE offers and whether you do web development or work with data using Python, you will benefit knowing how the IDE can leverage your programming skills.",
      "sub_title": "",
      "timerange": "2017-07-12 14:00:00, 2017-07-12 15:00:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@https://twitter.com/DmitryTrofimov",
      "id": 1056,
      "speakers": "Dmitry Trofimov",
      "title": "PyCharm tips and tricks",
      "have_tickets": [
        false
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Tooling",
        "Best Practice",
        "Clean Code",
        "python"
      ],
      "abstract_long": [
        "PyCharm, a Python IDE with its free and open-source community edition, in last several years has become a tool of choice for more and more Python developers. But not everybody uses its full power. Moreover, most only use a fraction of the functionality it provides.\r\n\r\nThe reality is that an IDE is not just about a set of integrated tools, but an environment that understands the semantics of your project, of what you\u2019re doing. It can leverage this to provide you with functionality that can make repetitive mundane tasks become frictionless, as well as give insight into potential problems.\r\n\r\nIn this session, we will go through the most powerful features the IDE offers and whether you do web development or work with data using Python, you will benefit knowing how the IDE can leverage your programming skills."
      ],
      "user_votes": [
        {
          "3531": 10.00
        },
        {
          "3637": 3.00
        },
        {
          "2032": 10.00
        },
        {
          "468": 3.00
        },
        {
          "3310": 7.00
        },
        {
          "394": 3.00
        },
        {
          "3370": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "3031": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "1022": 7.00
        },
        {
          "2794": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "2069": 7.00
        },
        {
          "530": 3.00
        },
        {
          "489": 3.00
        },
        {
          "3573": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "2259": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "2365": 3.00
        },
        {
          "3779": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "3360": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 3.00
        },
        {
          "58": 7.00
        },
        {
          "3684": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "545": -1.00
        },
        {
          "93": -1.00
        },
        {
          "3339": 2.00
        },
        {
          "300": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "3382": 6.00
        },
        {
          "380": -1.00
        },
        {
          "562": 2.00
        },
        {
          "2183": 9.00
        },
        {
          "171": 9.00
        },
        {
          "2286": -1.00
        },
        {
          "3777": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "Educational",
        "Python"
      ],
      "emails": "dmitry.trofimov@jetbrains.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pycharm-tips-and-tricks",
      "admin_type": "",
      "companies": "JetBrains"
    },
    "934": {
      "abstract_short": "PyPy is an alternative Python implementation whose JIT often gives seriously better performance than CPython.  Now PyPy supports, in beta version, two major new application domains: Python 3.x, and Numpy and the rest of the scientific stack.  These are each an important milestone for a subset of the Python community.\r\n\r\nThis talk is about what's new in PyPy in the last couple of years, including these two topics.",
      "sub_title": "",
      "timerange": "2017-07-14 14:00:00, 2017-07-14 14:30:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 934,
      "speakers": "Armin Rigo",
      "title": "PyPy meets Python 3 and Numpy",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Python 3",
        "PyPy",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)"
      ],
      "abstract_long": [
        "PyPy is an alternative Python implementation whose JIT often gives seriously better performance than CPython.  Now PyPy supports, in beta version, two major new application domains: Python 3.x, and Numpy and the rest of the scientific stack.  These are each an important milestone for a subset of the Python community.\r\n\r\n- Thanks to a grant by Mozilla, \"PyPy3\" now largely supports Python 3.5 with one or two extensions from Python 3.6.  Full support should be  very close.  (Note that PyPy2 will not disappear, if only because PyPy itself  is written in Python 2.7.)\r\n\r\n- Numpy and the major packages of the scientific stack are now starting to work well with PyPy (PyPy2 mostly, but also PyPy3).  This is thanks to progress in \"cpyext\" emulating the CPython C API, as well as fixes to the packages in collaboration with the upstream developers.\r\n\r\n- We will also mention some more \"what's new in PyPy\" topics from the last couple of years."
      ],
      "user_votes": [
        {
          "2356": 10.00
        },
        {
          "683": 7.00
        },
        {
          "804": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "251": 7.00
        },
        {
          "394": 10.00
        },
        {
          "2063": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "2183": 10.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 10.00
        },
        {
          "3592": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "1022": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 10.00
        },
        {
          "3496": 7.00
        },
        {
          "484": 10.00
        },
        {
          "3463": 10.00
        },
        {
          "3764": 10.00
        },
        {
          "1476": 7.00
        },
        {
          "480": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "71": 10.00
        },
        {
          "2365": 10.00
        },
        {
          "3398": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "650": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3296": 10.00
        },
        {
          "468": 10.00
        },
        {
          "1355": 6.00
        },
        {
          "509": 6.00
        },
        {
          "530": 6.00
        },
        {
          "930": 6.00
        },
        {
          "767": 9.00
        },
        {
          "2209": -1.00
        },
        {
          "3084": 2.00
        },
        {
          "380": 9.00
        },
        {
          "562": 6.00
        },
        {
          "171": 6.00
        },
        {
          "3495": 9.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Python",
        "Data Science"
      ],
      "emails": "armin.rigo@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pypy-meets-python-3-and-numpy",
      "admin_type": "",
      "companies": ""
    },
    "872": {
      "abstract_short": "We present a conceptual work where we used Ionic to build the GUI part of an app and connected that to a Python back end. In our point of view our proposal is very general and will give Python a boost towards modern UX-development and makes HTML/CSS/JavaScript a real option especially in combination with Angular. The main part of our solution is the interoperation between JavaScript and Python such that asynchronous calls in both direction are possible. \r\n",
      "sub_title": "",
      "timerange": "2017-07-14 14:00:00, 2017-07-14 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 872,
      "speakers": "Oliver Braun",
      "title": "Python and Angular, a perfect match?",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Mobile",
        "JavaScript Web Frameworks (AngularJS/ReactJS/...)",
        "Cross-Platform-Development",
        "Web Track",
        "HTML5"
      ],
      "abstract_long": [
        "Python on mobile devices is still negligible mostly because of the GUI problems which arise. But Python on android devices is considered to be a solved problem since the module Python for Android is available. We have nowadays at least the possibility to develop for mobile devices with the GUI engine Kivy which is maybe the first choice for rapid prototyping on that platform. But as it comes to design work and mobile device look alike Kivy is still far behind the web development tools HTML/CSS.\r\n\r\nIn our talk we present a conceptual work where we used Ionic - this is an mobile development framework based on Angular - to build the GUI part of an app and connected that to a Python back end. In our point of view our proposal is very general and will give Python a boost towards modern UX development and makes HTML/CSS/JavaScript a real option especially in combination with Angular.\r\nThe main part of our solution that we show is the interoperation between JavaScript and Python such that asynchronous calls in both direction are possible. \r\nThe advantage is to develop UX and back end code only once and use it literally on every platform where a Python interpreter and a browser runs.\r\n"
      ],
      "user_votes": [
        {
          "251": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "2223": 10.00
        },
        {
          "1481": 3.00
        },
        {
          "3370": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "3392": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "1132": 10.00
        },
        {
          "306": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "3507": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "650": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 10.00
        },
        {
          "2875": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "1877": 3.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "3382": 9.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Web",
        "Python",
        ">>> Suggested Track",
        "Web"
      ],
      "emails": "braunoli@web.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/python-and-angular-a-perfect-match",
      "admin_type": "",
      "companies": "Nucos"
    },
    "1078": {
      "abstract_short": "Microservices are receiving the buzzword treatment these days, and as such, they surrounded with hype, which makes it hard to separate substance from fluff. In this talk, Miguel Grinberg discusses his experience building Python microservices, how that compares to the traditional monolithic approach, and what are the changes microservices will bring to the dynamics of your team. ",
      "sub_title": "An introduction to building highly distributed systems with Python",
      "timerange": "2017-07-10 10:30:00, 2017-07-10 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@miguelgrinberg",
      "id": 1078,
      "speakers": "Miguel Grinberg",
      "title": "Python Microservices",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Public Cloud (AWS/Google/...)",
        "Web Track",
        "APIs",
        "Microservices"
      ],
      "abstract_long": [
        "This talk is for Python web developers interested in learning what are the core ideas behind microservices, what problems they try to solve, and what are the viable options to implement them in Python, both from technical and teamwork point of views. Some of the topics that will be discussed include the role of APIs, the improvements microservices bring to application scalability, upgrades, and maintenance, and the challenges in breaking up a monolithic application.\r\n\r\nAttendees will leave the talk with a good idea of what microservices are, and how they help build better applications. As usual with my presentations, there will be actual code examples presented during the talk that I will also host on GitHub, for those interested in investigating further on their own. \r\n"
      ],
      "user_votes": [
        {
          "1897": 6.00
        },
        {
          "683": 7.00
        },
        {
          "3256": 7.00
        },
        {
          "804": 7.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "3311": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "2834": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 10.00
        },
        {
          "685": 7.00
        },
        {
          "3547": 10.00
        },
        {
          "3701": 10.00
        },
        {
          "564": 7.00
        },
        {
          "3496": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "419": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "300": 3.00
        },
        {
          "2294": 7.00
        },
        {
          "306": 7.00
        },
        {
          "3492": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "3407": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3369": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "85": 3.00
        },
        {
          "3360": 10.00
        },
        {
          "69": 10.00
        },
        {
          "650": 10.00
        },
        {
          "3298": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "767": 6.00
        },
        {
          "3338": 9.00
        },
        {
          "3084": -1.00
        },
        {
          "310": 6.00
        },
        {
          "2209": 2.00
        },
        {
          "2660": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 6.00
        },
        {
          "2237": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3264": 2.00
        },
        {
          "3799": 10.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 9.00
        },
        {
          "468": 2.00
        },
        {
          "242": 7.00
        }
      ],
      "abstract_extra": "I have given REST API talks at PyCon US 2014 and 2015, and both generated great feedback. Links:\r\n\r\n- PyCon US 2014: https://www.youtube.com/watch?v=px_vg9Far1Y\r\n- PyCon US 2015: https://www.youtube.com/watch?v=pZYRC8IbCwk\r\n\r\nI have also given Flask tutorials at PyCon US 2014, 2015 and 2016, all very well received, both on site, and then later on youtube. Links:\r\n\r\n- PyCon US 2014: https://www.youtube.com/watch?v=FGrIyBDQLPg\r\n- PyCon US 2015: https://www.youtube.com/watch?v=DIcpEg77gdE\r\n- PyCon US 2016: https://www.youtube.com/watch?v=tdIIJuPh3SI\r\n\r\nI will also be giving a 3 hour tutorial at this year's PyCon US conference specifically on writing microservices with Python and Flask. This talk is a higher level introduction to the topic, without the extensive hands-on parts I plan to include in the longer tutorial format.\r\n\r\nThis talk I'm proposing can be seen as a follow up to my REST API talks. While in those talks I discussed how to design and implement robust web services, this talk goes higher up the stack and covers why and how to combine small independent services into a larger distributed application.\r\n\r\nI have been working with microservice architectures for about 3 years, first at Rackspace as an OpenStack developer (we can argue if OpenStack follows the microservice architecture or not, I believe it does, with a \"larger\" definition of microservice). Then I joined a little startup called SDVI where I worked on a Python based microservice SaaS for the video broadcast industry. I'm currently working again for Rackspace on the infrastructure to host managed applications for our AWS customers, using serverless microservices hosted on AWS Lambda and API Gateway. ",
      "tag_categories": [
        "DevOps",
        ">>> Suggested Track",
        "Web",
        "Programming"
      ],
      "emails": "miguel.grinberg@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/python-and-microservices-a-match-made-in-the-cloud",
      "admin_type": "",
      "companies": "Rackspace"
    },
    "801": {
      "abstract_short": "In this talk I will demo how you can use Visual Studio to boost your Python development on Windows.",
      "sub_title": "",
      "timerange": "2017-07-10 11:20:00, 2017-07-10 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@nicolaiarocci",
      "id": 801,
      "speakers": "Nicola Iarocci",
      "title": "Python on Windows, Like a Boss",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Windows",
        "Python general",
        "python"
      ],
      "abstract_long": [
        "Historically, Python coding on Windows has been kind of troublesome, but not anymore. Since a couple of years ago it is possible write awesome quality Python code with Visual Studio. This is good news for Python developers of all levels, because Visual Studio offers and incredible set of tools to enhance all the stages of product development: from managing virtual environments and handling package management, to writing and refactoring code, up to testing & debugging - all of that for free. In this talk I will demo how you can use Visual Studio to boost your Python development on Windows."
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "489": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3801": 7.00
        },
        {
          "3469": 3.00
        },
        {
          "651": 10.00
        },
        {
          "2889": 10.00
        },
        {
          "650": 7.00
        },
        {
          "3500": 3.00
        },
        {
          "646": 10.00
        },
        {
          "3471": 7.00
        },
        {
          "468": 7.00
        },
        {
          "93": -1.00
        },
        {
          "85": -1.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "2183": 2.00
        },
        {
          "171": -1.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Operating Systems",
        "Python",
        "Python"
      ],
      "emails": "nicola@nicolaiarocci.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/python-on-windows-like-a-boss",
      "admin_type": "",
      "companies": "CIR 2000"
    },
    "831": {
      "abstract_short": "Historically, Python packaging has been a source of significant pain for even the most devoted Python enthusiasts. The good news, though, is that things are getting better! In this talk, I'll provide a quick overview of the current state of Python packaging tools. Then I'll share examples of how you can use the features of the Setuptools library to make developing, testing, and distributing your Python packages easier.",
      "sub_title": "",
      "timerange": "2017-07-10 11:20:00, 2017-07-10 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@webGandi",
      "id": 831,
      "speakers": "Jakub Wasielak",
      "title": "Python Packaging - current state and overview",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "PyPi",
        "Open-Source",
        "Development",
        "Packaging",
        "python"
      ],
      "abstract_long": [
        "Historically, Python packaging has been a source of significant pain for even the most devoted Python enthusiasts. I've found myself in the situation, where I did know the basic concepts behind the tools, but despite that only thing I could do was following tutorials. That was the time to change it and that's the reason this presentation was written.\r\n\r\nIn this talk, I'll provide a quick overview of the current state of Python packaging tools. I'll mostly focus on setuptools, pip and wheels, putting an emphasis on their superiority over their precursors. I'll also list down the honorable mentions of tools worth knowing. Then I'll share examples of how you can use the features of the Setuptools library - those well known and those we use when pip-installing packages, but most of us can't name them.\r\n\r\nThe point of this presentation is to explain how to use tools which are all there, just waiting to make developing, testing, and distributing our Python packages easier. Doesn't matter if you're a Python expert or a beginner - the knowledge covered by this presentation will be useful despite your level."
      ],
      "user_votes": [
        {
          "3531": 10.00
        },
        {
          "1897": 6.00
        },
        {
          "3637": 7.00
        },
        {
          "2209": 7.00
        },
        {
          "3310": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "2834": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "3370": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "3592": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "1900": 7.00
        },
        {
          "152": 7.00
        },
        {
          "3496": 10.00
        },
        {
          "2794": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "3573": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "316": 10.00
        },
        {
          "1132": 7.00
        },
        {
          "306": 3.00
        },
        {
          "1102": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3574": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "651": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 7.00
        },
        {
          "300": 10.00
        },
        {
          "58": 3.00
        },
        {
          "2875": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3296": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "310": 6.00
        },
        {
          "930": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "3703": 2.00
        },
        {
          "380": 2.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 6.00
        },
        {
          "171": 2.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 6.00
        },
        {
          "3770": 6.00
        },
        {
          "468": 6.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Open Source",
        "Programming",
        "Python",
        "Python"
      ],
      "emails": "kuba.wasielak@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/python-packaging-current-state-and-overview",
      "admin_type": "",
      "companies": "YouGov"
    },
    "1027": {
      "abstract_short": "Number of libraries for building RESTful web applications is growing up. Selecting best framework becomes hard decision for web developers. \r\n\r\nDuring the presentation I will go through best libraries I can recommend for building RESTful web applications.\r\n",
      "sub_title": "",
      "timerange": "2017-07-10 14:35:00, 2017-07-10 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1027,
      "speakers": "Rafa\u0142 Nowicki",
      "title": "Python REST frameworks review",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Web Track",
        "HTTP",
        "APIs",
        "RESTful"
      ],
      "abstract_long": [
        "Number of libraries for building RESTful web applications is growing up. Selecting best framework becomes hard decision for web developers. \r\n\r\nDuring the presentation I will go through best libraries I can recommend for building RESTful web applications.\r\n\r\nSelection of libraries will be subjective, based on my experience with building microservices in Python. I will share code examples, weaknesses and strengths for each library. I hope everyone will find something that best suits his needs."
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "3311": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "1481": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "685": 7.00
        },
        {
          "3637": 3.00
        },
        {
          "1900": 3.00
        },
        {
          "1022": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "2488": 10.00
        },
        {
          "722": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "2479": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "3350": 3.00
        },
        {
          "306": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "3469": 7.00
        },
        {
          "300": 3.00
        },
        {
          "1113": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3471": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3296": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "1897": 2.00
        },
        {
          "3498": 3.00
        },
        {
          "3339": 6.00
        },
        {
          "3407": 9.00
        },
        {
          "2169": 6.00
        },
        {
          "3084": -1.00
        },
        {
          "3818": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3826": 6.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Web",
        "Web",
        "Web"
      ],
      "emails": "novirael@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/python-rest-frameworks-review",
      "admin_type": "",
      "companies": "STX Next"
    },
    "1122": {
      "abstract_short": "**If you develop Web applications, you need to know JavaScript.** Modern JS frameworks and build tools can make front-end Web developing painless, but the landscape is vast and documentation is bad or nonexistent. In this talk we\u2019ll go trough an opinionated workflow and best practises on how to write clean and Pythonic JavaScript using [Vue.js][1] framework and end-to-end browser testing library with Django. (Spoiler: the talk is 100% semicolon-free!)\r\n\r\n[1]: https://vuejs.org",
      "sub_title": "",
      "timerange": "2017-07-12 10:30:00, 2017-07-12 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@uninen",
      "id": 1122,
      "speakers": "Ville S\u00e4\u00e4vuori",
      "title": "Pythonic JavaScript for Web Developers",
      "have_tickets": [
        false
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "JavaScript Web Frameworks (AngularJS/ReactJS/...)",
        "Django",
        "Best Practice",
        "Web Track",
        "HTML5"
      ],
      "abstract_long": [
        "**Having a basic knowledge of JavaScript is obligatory for every Web developer in todays world.** Most of us are familiar with the pain of having to write some simple hide/show logic and ajax queries with jQuery on a page that is mostly rendered server-side. Nowadays, however, there are lots of great JavaScript frameworks and build tools that not only make these things very easy to do The Right Way, but also make the whole process quite painless.\r\n\r\nI spent past year in a small startup writing only front-end code and evaluating different tools and best practises. Bringing these tools to old Django projects has been eye-opening. There are practically no documentation or code examples on how to integrate these things to Python backend projects, so it\u2019s very hard to get started from scratch. In this talk we\u2019ll go trough some of the tools, examples on how to get started, and also some coding guidelines on how to make JavaScript look and feel more sane and Pythonic.\r\n\r\nThe current state of JavaScript frameworks is notoriously bad; there are more of them than blog engines written with Django. We\u2019ll focus on [Vue.js][1] which is a lightweight, very easy to get started and yet powerful tool.\r\n\r\nWe\u2019ll also take a look at new end-to-end browser test tools and modern build tools that enable us to take full advantage of the huge NPM package universe (Cheeseshop for JS)  and write modern ES2015/ES2016 JavaScript that has more powerful and cleaner syntax.\r\n\r\n[1]: https://vuejs.org/\r\n"
      ],
      "user_votes": [
        {
          "2356": 7.00
        },
        {
          "1973": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3454": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "685": 3.00
        },
        {
          "245": 3.00
        },
        {
          "3449": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "2069": 3.00
        },
        {
          "3456": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "269": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "2813": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "1956": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3684": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 10.00
        },
        {
          "2985": 7.00
        },
        {
          "545": -1.00
        },
        {
          "85": -1.00
        },
        {
          "3084": -1.00
        },
        {
          "3382": 9.00
        },
        {
          "562": 2.00
        },
        {
          "468": -1.00
        },
        {
          "171": -1.00
        },
        {
          "105": 3.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "This talk is better suited in 60 min format as there are lots of ground to cover, but 45 mins is enough for a slightly stripped down version. I know there are only few 60 min slots, so I opted here for the 45 min :)\r\n\r\nI've talked before in EuroPython lightning talks 2007-2010, a proper talk in EuroPython 2009, lightning talks in DjangoCon.eu and a keynote in the first ever PyCon Finland (which I organized).\r\n\r\nOne of the most memorable Python-related experience was an impromptu acappella song dedicated to Jacob Kaplan-Moss in DjancoCon EU 2010 :D",
      "tag_categories": [
        "Web",
        "Application Frameworks",
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Web"
      ],
      "emails": "ville@unessa.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pythonic-javascript-for-web-developers",
      "admin_type": "",
      "companies": ""
    },
    "1008": {
      "abstract_short": "So you've released a library. Now you need to *maintain* it! You're going to add features, restructure code, fix bugs, and improve usability. Your users want their code to keep on working. *That's okay!*\r\n\r\nLearn pythonic techniques for safely changing your library's implementation, while protecting your users from unexpected change. I'll cover approaches to ensure you know when your library will break compatibility, and I'll discuss techniques for hiding changes using simple Pythonic magic. ",
      "sub_title": "",
      "timerange": "2017-07-14 12:10:00, 2017-07-14 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@judy2k",
      "id": 1008,
      "speakers": "Mark Smith",
      "title": "Pythonic Refactoring: Protecting Your Users From Change",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Software Design",
        "Programming",
        "Best Practice",
        "python",
        "legacy-code"
      ],
      "abstract_long": [
        "So you've released a library! Now you need to *maintain* it. You want to add features, restructure the code, fix bugs, and maybe improve the library's usability. Your users just want their code to carry on working. *That's okay!*\r\n\r\nThis talk will cover techniques in both code and project management to allow you to keep your code moving forwards without breaking your users' code. It is aimed at developers with a little experience of writing libraries in Python, and will cover some intermediate subjects like function decorators and magic methods.\r\n\r\nRefactoring in Python is a mixed bag - on the one hand you have *powerful tools* like the `@property` decorator, `__dunder__` methods, and even *metaclasses*. On the other hand, because Python code has no concept of private or protected like some other languages, it can be difficult to know what your public interface even *is*.\r\n\r\nI'll talk about how to identify your public interface, *and* make that clear to your users (*cough* documentation *cough*). I'll cover how to structure your tests so you know when you've broken your public interface. I'll discuss how to use some of Python's language features to trick your users into thinking your code hasn't changed at all (except for those brilliant new features you've just added!). And finally, I'll cover how you know it's time to break backwards compatibility and how to break it to your users."
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "74": 7.00
        },
        {
          "251": 10.00
        },
        {
          "1481": 7.00
        },
        {
          "394": 10.00
        },
        {
          "3308": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "685": 3.00
        },
        {
          "380": 10.00
        },
        {
          "1900": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "1884": 10.00
        },
        {
          "3554": 7.00
        },
        {
          "3507": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "71": 10.00
        },
        {
          "2365": 10.00
        },
        {
          "3779": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "3296": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "468": 2.00
        },
        {
          "3084": 6.00
        },
        {
          "3376": 10.00
        },
        {
          "562": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "242": 10.00
        }
      ],
      "abstract_extra": "I'm a reasonably accomplished speaker. I've given two talks and a workshop at EuroPython and multiple talks at Python Edinburgh and other locations.\r\n\r\nOne of my previous talks, [Build Awesome Command-Line Applications In Python](https://www.youtube.com/watch?v=gR73nLbbgqY), has been surprisingly popular on YouTube.\r\n\r\n[My lightning talk](https://www.youtube.com/watch?v=LQSWi3QJV8s&feature=youtu.be&t=55m10s) at EuroPython was one of two highlighted on the conference blog.\r\n\r\nThis proposed talk is not as silly as the lightning talk.",
      "tag_categories": [
        "Programming",
        "Programming",
        "Best Practice and Use Cases",
        "Python",
        "Programming"
      ],
      "emails": "pornbypost@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/pythonic-refactoring-protecting-your-users-from-change",
      "admin_type": "",
      "companies": "Nexmo"
    },
    "806": {
      "abstract_short": "Modern web backends are designed around light weight microservices. In this talk, I'll explain how we can create such services in python and also try to cover process of how these services are managed, packaged and deployed independently.\r\n\r\nApart from that, I'll also share my take on microservices architecture, containerization and will share pros-and-cons of having such architecture in production environment.",
      "sub_title": "",
      "timerange": "2017-07-14 14:35:00, 2017-07-14 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@abyshek_sharma",
      "id": 806,
      "speakers": "Abhishek Sharma",
      "title": "Pythonist view on Microservices & Containerization",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Web",
        "Distributed Systems",
        "python"
      ],
      "abstract_long": [
        "Microservices architecture and containerization are words thrown around when we talk about designing systems that are loosely coupled, although it may sound like buzz words but these key concepts play a very important part in system as a whole.\r\n\r\nIn this talk, we will cover how microservices can be implemented in python using available open source frameworks and how it can be deployed independently to scale and perform in production environment. I'll also share several use-cases where it is worth planning and developing system architecture considering microservices/containerization and will also discuss some trade-off of having such architecture.\r\n\r\n**Outline:**\r\n\r\n- Overview of microservices\r\n- Implementing microservices using Python\r\n- Advantages of microservices over Monolithic / SoA architecture\r\n- Overview of containerization\r\n- How to containerize Python based services (Docker)\r\n- Advantages of microservices/containerization over traditional deployment\r\n- CI/CD Approach in microservices and containerization\r\n- Usecases where to use microservices\r\n- Trade-off of using microservices\r\n\r\n"
      ],
      "user_votes": [
        {
          "730": 10.00
        },
        {
          "3628": 10.00
        },
        {
          "2218": 10.00
        },
        {
          "774": 10.00
        },
        {
          "1912": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "3308": 10.00
        },
        {
          "2834": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "1900": 3.00
        },
        {
          "245": 7.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "1476": 10.00
        },
        {
          "3392": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "316": 10.00
        },
        {
          "3007": 10.00
        },
        {
          "306": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3779": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "85": 7.00
        },
        {
          "284": 10.00
        },
        {
          "3777": 7.00
        },
        {
          "650": 7.00
        },
        {
          "69": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3394": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2582": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "3506": 2.00
        },
        {
          "1956": 2.00
        },
        {
          "3084": -1.00
        },
        {
          "2209": 2.00
        },
        {
          "2660": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3480": 6.00
        },
        {
          "562": -1.00
        },
        {
          "171": 2.00
        },
        {
          "2286": 2.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "DevOps",
        "Python"
      ],
      "emails": "abhish88.bca@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/pythonist-view-on-microservices-containerization",
      "admin_type": "",
      "companies": "einfochips"
    },
    "909": {
      "abstract_short": "React is an amazing library for client-side user interface, and it has added benefit of being able to be rendered on server which something that's supported by Node.JS out of the box. In this talk, I'll talk about importance of server side rendering and how we can integrate React Server side rendering with Python.\r\n\r\nThis talk will cover mechanism for rendering react web apps on server side and how can we optimize that using Python.",
      "sub_title": "",
      "timerange": "2017-07-13 15:45:00, 2017-07-13 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@sonimihir",
      "id": 909,
      "speakers": "Mihir Soni",
      "title": "React server side rendering with Python",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "JavaScript Web Frameworks (AngularJS/ReactJS/...)",
        "NodeJS"
      ],
      "abstract_long": [
        "React is widely used as client side library for building UI along with reducing complexity involved in maintaining state. Another important aspect is how to render React components on server side. I'll explain the impact of server side rendering on application performance and how it can help improve SEO better by ensuring that web crawlers see your pages same as you intend it to. Apart from this, I'll also talk about how can achieve it with the small demo.\r\n\r\nOutline of talk\r\n\r\n- Introduction to React.\r\n- Rendering React on server side.\r\n- Benefits of rendering on server side.\r\n- Using Python to render react components on server.\r\n- Demo with sample application"
      ],
      "user_votes": [
        {
          "730": 7.00
        },
        {
          "3628": 10.00
        },
        {
          "2218": 10.00
        },
        {
          "3622": 10.00
        },
        {
          "774": 10.00
        },
        {
          "195": 7.00
        },
        {
          "804": 7.00
        },
        {
          "74": 7.00
        },
        {
          "2209": 7.00
        },
        {
          "2032": 10.00
        },
        {
          "251": 3.00
        },
        {
          "2063": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 10.00
        },
        {
          "3701": 7.00
        },
        {
          "3764": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "3084": 3.00
        },
        {
          "2057": 3.00
        },
        {
          "3407": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "3809": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "651": 7.00
        },
        {
          "3535": 10.00
        },
        {
          "300": 3.00
        },
        {
          "93": 3.00
        },
        {
          "3299": 10.00
        },
        {
          "2985": 3.00
        },
        {
          "545": 6.00
        },
        {
          "2834": 2.00
        },
        {
          "1897": 6.00
        },
        {
          "310": 2.00
        },
        {
          "3818": 2.00
        },
        {
          "380": 6.00
        },
        {
          "562": 9.00
        },
        {
          "171": -1.00
        },
        {
          "105": 7.00
        },
        {
          "3418": 2.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": -1.00
        },
        {
          "242": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Web"
      ],
      "emails": "mihirsoni.123@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/react-server-side-rendering-with-python",
      "admin_type": "",
      "companies": "Amazon"
    },
    "861": {
      "abstract_short": "Realtime distributed computing is tough, especially at scale: managing a large data pipeline is tough, and it\u2019s even tougher to keep latency low and availability high when processing tens of thousands of items per second. Many people turn in despair to Java or Scala when it comes time to scale up, but we can do it in Python: Apache Storm is a distributed realtime computation system that can let you scale up- and no need to reach for a new language!",
      "sub_title": "",
      "timerange": "2017-07-12 15:45:00, 2017-07-12 16:15:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 861,
      "speakers": "Alexander Lourenco",
      "title": "Realtime Distributed Computing At Scale (in pure Python!): Storm And Streamparse",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Big Data",
        "Use Case",
        "Distributed Systems",
        "Open-Source",
        "Analytics"
      ],
      "abstract_long": [
        "Realtime distributed computing is tough, especially at scale: managing a large data pipeline is tough, and it\u2019s even tougher to keep latency low and availability high when processing tens of thousands of items per second. Many people turn in despair to Java or Scala when it comes time to scale up, but we can do it in Python: Apache Storm is a distributed realtime computation system that can let you scale up- and no need to reach for a new language!\r\n\r\nThis talk will walk the audience through the basics of Apache Storm and how it\u2019s an elegant, useful solution to realtime distributed computing,  as well as how streamparse can let you write your storm components in Python by writing some code and a basic storm topology in Python. We\u2019ll also look at how Parsely uses Storm in production to handle billions of realtime events a month. If we have time, we\u2019ll go a bit into how Storm has several advantages over other common Python computing data streaming solutions, like Spark\u2019s microbatching.\r\n\r\nGoals:\r\n\r\nAt the end of the talk, ideally you should be able to understand:\r\nWhat Apache Storm is, how it works generally, and what scenarios it\u2019s useful for\r\nHow streamparse can be used to write your Storm topologies\r\nHow Storm + streamparse is used in an actual high-availability, low-latency production environment\r\n"
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "2113": 7.00
        },
        {
          "251": 7.00
        },
        {
          "468": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "564": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "722": 3.00
        },
        {
          "3605": 3.00
        },
        {
          "316": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "300": 3.00
        },
        {
          "2259": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "663": 10.00
        },
        {
          "3695": 3.00
        },
        {
          "650": 10.00
        },
        {
          "3500": 10.00
        },
        {
          "2875": 10.00
        },
        {
          "3296": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "3498": 7.00
        },
        {
          "3407": 9.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 6.00
        },
        {
          "3495": 9.00
        },
        {
          "171": 9.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 2.00
        },
        {
          "3384": 3.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Best Practice and Use Cases",
        "DevOps",
        "Open Source",
        "Data Science"
      ],
      "emails": "alexander.lourenco@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/realtime-distributed-computing-at-scale-in-pure-python-storm-and-streamparse",
      "admin_type": "",
      "companies": "Parsely"
    },
    "772": {
      "abstract_short": "PyRT (pronounced \"pirate\") is a rather new open source project creating a ray tracer in pure Python and some optional CPU/GPU acceleration using bindings. Ray tracing is a technique for generating an image by tracing the path of light. \r\nPyRT was created to render large 3D City models. In this talk, the possibilities and experiences of ray tracing in Python using pyRT are shown. pyRT also runs in the Jupyter Notebook.\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 14:35:00, 2017-07-12 15:05:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@MartinChristen",
      "id": 772,
      "speakers": "Martin Christen",
      "title": "Rendering complex 3D-Geodata using pyRT",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Visualization",
        "GEO and GIS",
        "Jupyter/iPython Notebook",
        "Open-Source",
        "3D"
      ],
      "abstract_long": [
        "PyRT (pronounced \"pirate\") is a rather new open source project creating a ray tracer in pure Python and some optional CPU/GPU acceleration using bindings. Ray tracing is a technique for generating an image by tracing the path of light. \r\nPyRT was created to render large 3D City models. In this talk, the possibilities and experiences of ray tracing in Python using pyRT are shown. pyRT also runs in the Jupyter Notebook.\r\nRendering complex 3D-Geodata, such as 3D-City models with an extremely high polygon count and a vast amount of textures at interactive framerates is still a very challenging task, especially on mobile devices. This talk presents an approach for processing, caching and serving massive geospatial data in a cloud-based environment for large scale, out-of-core, highly scalable 3D scene rendering in a web-based solution. PyRT  is used for rendering large amounts of geospatial data. The approach for processing, rendering and caching 3D-City Models is shown.\r\n\r\nScreenshots:\r\n![][1]\r\n\r\n![][2]\r\n\r\n  [1]: https://github.com/martinchristen/pyRT/raw/master/jupyter/img/sponza.png\r\n  [2]: https://github.com/martinchristen/pyRT/blob/master/jupyter/img/Berlin_AO_small.PNG?raw=true\r\n"
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "419": 3.00
        },
        {
          "2069": 3.00
        },
        {
          "489": 10.00
        },
        {
          "434": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "2865": 3.00
        },
        {
          "306": 3.00
        },
        {
          "2365": 7.00
        },
        {
          "3486": 10.00
        },
        {
          "2889": 10.00
        },
        {
          "3506": -1.00
        },
        {
          "562": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 3.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Everything Else",
        "Python",
        "Open Source",
        "Everything Else"
      ],
      "emails": "martin.christen@fhnw.ch",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/rendering-complex-3d-geodata-using-pyrt",
      "admin_type": "",
      "companies": "FHNW - University of Applied Sciences and Arts"
    },
    "1057": {
      "abstract_short": "Passwords have formed the cornerstone of I.T. system authentication for decades, but recent high-profile breaches have underscored the risks of password-based authentication systems.\r\n\r\nThe good news is that we can replace passwords with other factors:\r\n\r\n* email-based authentication\r\n* one-time passwords (OTP)\r\n* hardware keys (Yubikeys/U2F, etc.)\r\n\r\nThese factors can be used independently or combined to provide vastly greater security than the traditional username-plus-password system.",
      "sub_title": "",
      "timerange": "2017-07-10 10:30:00, 2017-07-10 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@jmayer",
      "id": 1057,
      "speakers": "Justin Mayer",
      "title": "Replacing passwords with multiple factors: email, OTP, and hardware keys",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Authentication",
        "Security",
        "Django",
        "Best Practice",
        "Web"
      ],
      "abstract_long": [
        "Passwords have formed the cornerstone of I.T. system authentication for decades, but recent high-profile breaches have underscored the risks of password-based authentication systems.\r\n\r\nThe good news is that we can replace passwords with other factors:\r\n\r\n* email-based authentication\r\n* one-time passwords (OTP)\r\n* hardware keys (Yubikeys/U2F, etc.)\r\n\r\nThese factors can be used independently or in conjunction with one another to provide vastly greater security than the traditional username-plus-password combination.\r\n\r\nAttendees of this talk will walk away with a detailed understanding of:\r\n\r\n* why the traditional username-plus-password combination is failing us\r\n* why email-based authentication provides no less security\r\n* overview of one-time passwords and TOTP\r\n* how to store/retrieve OTP codes, including password manager support\r\n* state of hardware keys in general, and FIDO U2F standard in particular\r\n\r\nAttendees will learn how to implement these multi-factor authentication methods in their own Python-based web applications, with primary focus on methods for integrating email-based authentication, one-time passwords, and U2F hardware keys into Django-based projects."
      ],
      "user_votes": [
        {
          "3256": 3.00
        },
        {
          "2113": 7.00
        },
        {
          "47": 7.00
        },
        {
          "251": 7.00
        },
        {
          "394": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "3370": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 7.00
        },
        {
          "3701": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3328": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 10.00
        },
        {
          "484": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "530": 10.00
        },
        {
          "3392": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "3456": 3.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2813": 7.00
        },
        {
          "3554": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "1956": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3469": 3.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "468": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "2127": 10.00
        },
        {
          "85": -1.00
        },
        {
          "3143": 6.00
        },
        {
          "3603": 2.00
        },
        {
          "3659": 9.00
        },
        {
          "3084": -1.00
        },
        {
          "3818": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "2286": 9.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "242": 7.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Security",
        "Security",
        "Application Frameworks",
        "Best Practice and Use Cases",
        "Web"
      ],
      "emails": "entrop@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/replacing-passwords-with-multiple-factors-email-otp-and-hardware-keys",
      "admin_type": "",
      "companies": "Monitorial.com"
    },
    "903": {
      "abstract_short": "The Python universe is overflowing with web frameworks, from full featured batteries included frameworks like Django to micro frameworks like Bottle or Flask. They each have their own specific features but in the end they are all very similar in their core functionality of processing requests and generating responses.\r\n\r\nIn this talk I will discuss why I felt the need to create yet another framework, a pico framework, that specifically focuses on the task of building HTTP based APIs for the web.",
      "sub_title": "",
      "timerange": "2017-07-14 14:35:00, 2017-07-14 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@fergalwalsh",
      "id": 903,
      "speakers": "Fergal Walsh",
      "title": "Rethinking how we build HTTP APIs",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "HTTP",
        "APIs"
      ],
      "abstract_long": [
        "Rethinking how we build HTTP APIs\r\n\r\nThe Python universe is overflowing with web frameworks, from full featured batteries included frameworks like Django to micro frameworks like Bottle or Flask. They each have their own specific features but in the end they are all very similar in their core functionality of processing requests and generating responses.\r\n\r\nIn this talk I will discuss why I felt the need to create yet another framework, a pico framework, that specifically focuses on the task of building HTTP based APIs for the web.\r\n\r\nPico, as it is aptly called, doesn't do templating, ORM, custom routing, authentication, validation, caching, or a million other things. Instead it helps you write clean APIs using simple functions and modules with minimal boilerplate. Pico is both opinionated and flexible in equal measures so you can focus on what matters; your API logic. Pico helps you to write code that that is simple to get started, trivial to test, and easy to maintain as your project grows.\r\n\r\nAPIs built with Pico are self describing so client code can automatically/dynamically be created. Pico includes both a Python & Javascript client but it is also very simple to interact with your API with plain old cURL/Requests/jQuery/etc. It is just a HTTP API after all.\r\n\r\nHaving recently released Pico 2.0, this talk will outline the evolution of this framework over the past 7 years and discuss some lessons learnt along the way about building HTTP APIs and frameworks. "
      ],
      "user_votes": [
        {
          "41": 3.00
        },
        {
          "251": 10.00
        },
        {
          "3311": 10.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3278": 3.00
        },
        {
          "3592": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "3449": 10.00
        },
        {
          "3328": 7.00
        },
        {
          "3418": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "3007": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "589": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3535": 7.00
        },
        {
          "650": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 3.00
        },
        {
          "58": 3.00
        },
        {
          "646": 3.00
        },
        {
          "468": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "3628": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3629": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        "Web",
        "Web"
      ],
      "emails": "fergal@hipo.biz",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/rethinking-how-we-build-http-apis",
      "admin_type": "",
      "companies": "Hipo"
    },
    "940": {
      "abstract_short": "It's a common belief that GIL completely rules out executing Python code in parallel. However, even the standard library offers a wide range of tools for that. During the talk I will briefly discuss when using parallelism in Python is beneficial, when to avoid it and what possible traps might be encountered. I will also spice things up a bit with talking about the code execution which is both parallel and asynchronous.",
      "sub_title": "",
      "timerange": "2017-07-11 11:20:00, 2017-07-11 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 940,
      "speakers": "Michal Wysokinski",
      "title": "Running Python code in parallel and asynchronously",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Performance",
        "Multi-Processing",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "My outline will be:\r\n1) What does it mean to run code in parallel in Python? How does it differ from concurrency? Can they be applied at the some time?\r\n2) GIL and why it complicates parallelism in Python (CPython), but only to some extent.\r\n3)  Difference between a thread and a process from the OS point of view.\r\n4) When parallelism in Python is useful and when to avoid it.\r\n5) Description of how to achieve parallel execution in CPython and how to do it properly.\r\n6) Possible traps when using parallel programming in Python.\r\n7) What happens if the code runs both in parallel and asynchronously?\r\n8) Is it really beneficial?\r\n9) How such execution can be achieved?\r\n\r\nAs the outline shows I will focus on the parallel part as it is an important topic in our current time of multicore processors and multiprocessor systems.\r\n\r\nThe topic has been discussed a lot of times but mainly from the scientific point of view, where it's been used for speeding up calulcations time.  I will not go into these use cases (e.g. using MPI) but rather discuss it from web development point of view (e.g. multi worker applications)."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "2209": 3.00
        },
        {
          "3311": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "3420": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3278": 7.00
        },
        {
          "3547": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "3592": 10.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 7.00
        },
        {
          "245": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "419": 10.00
        },
        {
          "1476": 10.00
        },
        {
          "3392": 3.00
        },
        {
          "3605": 7.00
        },
        {
          "722": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 10.00
        },
        {
          "1379": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "2259": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "306": 7.00
        },
        {
          "3084": 7.00
        },
        {
          "3369": 10.00
        },
        {
          "3407": 10.00
        },
        {
          "3492": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 3.00
        },
        {
          "651": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 10.00
        },
        {
          "3500": 10.00
        },
        {
          "3684": 10.00
        },
        {
          "58": 10.00
        },
        {
          "2493": 10.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "530": 2.00
        },
        {
          "3498": 7.00
        },
        {
          "2660": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 9.00
        },
        {
          "2237": 6.00
        },
        {
          "171": 9.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 6.00
        },
        {
          "3770": 9.00
        },
        {
          "468": 6.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Programming",
        "Programming"
      ],
      "emails": "michal.a.wysokinski@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/running-python-code-in-parallel-and-asynchronously",
      "admin_type": "",
      "companies": "Akamai"
    },
    "915": {
      "abstract_short": "Cython is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very smart way to talk to native code and libraries. This talk/tutorial introduces Cython programming language and leads the participants all the way from their first Python extension to an efficient integration with native C.",
      "sub_title": "",
      "timerange": "2017-07-14 11:20:00, 2017-07-14 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@https://twitter.com/simmimourya",
      "id": 915,
      "speakers": "Simmi Mourya",
      "title": "Scientific computing using Cython: Best of both Worlds!",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Cython",
        "Best Practice",
        "Scientific Libraries (Numpy/Pandas/SciKit/...)",
        "CPython"
      ],
      "abstract_long": [
        "Cython is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very smart way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. You get the best of both worlds while working with Cython: Python like syntax with blazing fast C speed.\r\n\r\nThis talk/tutorial by a Python/Cython developer introduces Cython programming language and leads the participants all the way from their first Python extension to an efficient integration with native C. \r\nTopics covered will be:\r\n1. Using the Cython compiler to build a native extension module\r\n2. Cython development from Jupyter notebook\r\n3. Mixing Python with static C types in the Cython language\r\n4. Calling into native code from Cython code (Brief introduction)\r\n5. Wrap up: A brief case study\r\nCyvlfeat: A Cython/Python wrapper for Computer Vision library, VLFeat.\r\n\r\nParticipants are expected to have a good understanding of the Python language, some basic knowledge about C or C++.  No deep C programming knowledge is required, nor is any prior knowledge needed about writing extension modules for the CPython runtime.\r\n"
      ],
      "user_votes": [
        {
          "2119": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 7.00
        },
        {
          "3543": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "3317": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3556": 10.00
        },
        {
          "3278": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "3454": 10.00
        },
        {
          "3428": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "1924": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "3402": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "3491": 10.00
        },
        {
          "2365": 7.00
        },
        {
          "85": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "1355": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "3418": 2.00
        },
        {
          "2237": 6.00
        },
        {
          "468": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3629": 10.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Best Practice and Use Cases",
        "Data Science",
        "Python"
      ],
      "emails": "simmimourya310795@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/scientific-computing-using-cython-best-of-both-worlds",
      "admin_type": "",
      "companies": "Pitney Bowes"
    },
    "984": {
      "abstract_short": "Chopsticks is a library to let your Python code transparently run on remote hosts over SSH, or in a Docker container. Chopsticks is intended for configuration management or orchestration, but it has also been used for monitoring and simple distributed computation. \r\n\r\nDaniel will demonstrate Chopsticks in action, walk through the API, and explain the three clever tricks that Chopsticks is built on.",
      "sub_title": "",
      "timerange": "2017-07-13 12:10:00, 2017-07-13 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@lordmauve",
      "id": 984,
      "speakers": "Daniel Pope",
      "title": "Scripting across hosts with Chopsticks",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Configuration Management (Ansible/Fabric/Chef/...)",
        "Docker",
        "System Administration"
      ],
      "abstract_long": [
        "Chopsticks lets your import and run Python code on remote Unix hosts over SSH. It works with no code deployment and no preinstalled software other than Python and SSH. It has built-in support for running code on many hosts in parallel.\r\n\r\nUnlike Fabric or Ansible, Chopsticks not opinionated about the structure of the code you run, allowing it to be used for orchestration, auditing, diagnostics, monitoring probes, and more.\r\n\r\nAlso unlike these, Chopsticks is not wedded to SSH, so it can transparently work on Docker containers over pipes, local subprocesses - and in future, sudo?\r\n\r\nDaniel will demonstrate Chopsticks in action, walk through the API, and explain the three clever tricks that Chopsticks is built on."
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "251": 3.00
        },
        {
          "135": 7.00
        },
        {
          "2834": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "2866": 3.00
        },
        {
          "3574": 7.00
        },
        {
          "71": 10.00
        },
        {
          "3084": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "300": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "468": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "3498": 10.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "3418": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "lord.mauve@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/scripting-across-hosts-with-chopsticks",
      "admin_type": "",
      "companies": "Two Sigma"
    },
    "992": {
      "abstract_short": "Serverless computing: it is the practice of building and running services and applications without having to worry about provisioning and managing servers. This talk will focus on how to use [chalice][1], a python serverless microframework for AWS, to develop serverless applications.\r\n\r\n\r\n  [1]: https://github.com/awslabs/chalice\r\n  ",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 992,
      "speakers": "Kyle Knapp",
      "title": "Serverless Applications with Chalice",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Best Practice",
        "Use Case",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "Web Track"
      ],
      "abstract_long": [
        "Serverless computing: it is the practice of building and running services and applications without having to worry about provisioning and managing servers. Serverless computing has been a popular topic the past couple years, and with respect to Python, there have been various different frameworks and tools released for developing and managing your Python serverless applications. This talk will focus on developing and managing your serverless applications with [chalice][1], a python serverless microframework for AWS. Discussion points for this talk will include, but not be limited to:\r\n\r\n\u2022\tOverview of serverless applications\r\n\r\n\u2022\tBest practices in writing a serverless application\r\n\r\n\r\n\u2022    Basic usage and core features of chalice\r\n\r\n\u2022   Writing complete, production-level applications using chalice\r\n\r\n\u2022   Managing and maintaining serverless applications using chalice tooling\r\n\r\n\r\nBy the end of the talk, audience members should have a better understanding of serverless computing and how to use chalice to develop and maintain serverless applications.\r\n\r\n  [1]: https://github.com/awslabs/chalice\r\n"
      ],
      "user_votes": [
        {
          "664": 10.00
        },
        {
          "3637": 3.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 7.00
        },
        {
          "468": 2.00
        },
        {
          "251": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3701": 7.00
        },
        {
          "564": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "3554": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "306": 7.00
        },
        {
          "589": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "650": 3.00
        },
        {
          "300": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "2127": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3384": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Best Practice and Use Cases",
        "Web",
        ">>> Suggested Track"
      ],
      "emails": "kyknapp1@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/the-serverless-ecosystem-for-python",
      "admin_type": "",
      "companies": "Amazon Web Services"
    },
    "1006": {
      "abstract_short": "Simple is better than complex, right? That\u2019s true for data pipelines too.\r\n\r\nTransforming data is easy\u2026 but having a lot of data processing jobs that does the right thing, together, and keep the system maintainable over time  is not so simple.\r\n\r\n[Bonobo][1] is a python 3.5+ library used to code, run, monitor and maintain data pipelines. It\u2019s plain, simple, modern, and atomic python.\r\n\r\nSpoiler : there is no \u00abbig data\u00bb in this talk.\r\n\r\n[1]: https://www.bonobo-project.org/",
      "sub_title": "",
      "timerange": "2017-07-12 11:20:00, 2017-07-12 12:05:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@rdorgueil",
      "id": 1006,
      "speakers": "Romain Dorgueil",
      "title": "Simple ETL in python 3.5+ with Bonobo",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Python 3",
        "Databases",
        "Open-Source",
        "Data",
        "Data Science"
      ],
      "abstract_long": [
        "Simple is better than complex, right? That\u2019s true for data pipelines too.\r\n\r\nFor more than 5 years, I hacked together extract-transform-load (ETL) processes in various different positions (ETL is just a fancy term for \u00abbunch of things that take data somewhere and put it elsewhere, eventually transformed\u00bb).\r\n\r\nI did it as a founder, as a consultant, as a technical co-founder, for some side projects, and now in a big corp (to be continued\u2026).\r\n\r\nIn each case, I felt frustrated with the tools available, and in some serious cases, I had to hack things myself to get the job done. [Bonobo][1] is the repackaging of my past experiences for python 3.5+, and grasping the basics should not take more than the length of the presentation.\r\n\r\nTopics outline (subject to small changes) :\r\n\r\n\u2022 INTRO : State of the art / different tools for different needs.\r\n\r\n\u2022 Where does it come from.\r\n\r\n\u2022 Writing a data processor.\r\n\r\n\u2022 Running and monitoring data jobs.\r\n\r\n\u2022 OUTRO : The road ahead.\r\n\r\n\u2022 Q&A\r\n\r\n[Bonobo][1] is the glue you need to tie together regular functions in a transformation graph (think unix pipes). Execution strategies are abstracted so you can focus on the real operations. As a result, you can engineer simple and testable systems, using the same good computer development practices as you use in <insert your favorite field here>.\r\n\r\nSpoiler : there is no \u00abbig data\u00bb in this talk.\r\n\r\n[1]: https://www.bonobo-project.org/\r\n"
      ],
      "user_votes": [
        {
          "1897": 10.00
        },
        {
          "195": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "564": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "1966": 10.00
        },
        {
          "3314": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "316": 10.00
        },
        {
          "651": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2875": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "468": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3384": 7.00
        },
        {
          "3368": 3.00
        },
        {
          "3084": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Databases",
        "Open Source",
        "Data Science",
        "Data Science"
      ],
      "emails": "romain@dorgueil.net",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/simple-etl-in-python-35-with-bonobo",
      "admin_type": "",
      "companies": "L'Atelier BNP Paribas"
    },
    "795": {
      "abstract_short": "QUADS is a new Python-based systems and network scheduler used for rapid provisioning of large-scale sets of systems and networks based on dates/times in the present and future.  You can learn more at https://github.com/redhat-performance/quads",
      "sub_title": "QUADS automates scheduling and end-to-end provisioning of servers and networks.",
      "timerange": "2017-07-11 12:10:00, 2017-07-11 12:55:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@sadsfae",
      "id": 795,
      "speakers": "Will Foster",
      "title": "Skynet your Infrastructure with QUADS",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Operations",
        "Infrastructure",
        "OpenStack",
        "DevOps general",
        "System Administration"
      ],
      "abstract_long": [
        "The very small 2-person DevOps team within Red Hat Performance/Scale Engineering has developed a set of Open Source Python-based systems and network automation provisioning tools designed to end-to-end automate the provisioning of large-scale systems and network switches using tools like Foreman, Ansible, and other Open Source bits.\r\n\r\nQUADS \u2013 or \u201cquick and dirty scheduler\u201d allows a normally overburdened DevOps warrior to fully automate large swaths of systems and network devices based on a schedule, even set systems provisioning to fire off in the future so they can focus on important things like Netflix and popcorn or not reading your emails while your datacenter burns in an inferno of rapid, automated skynet provisioning. QUADS will also auto-generate up-to-date infrastructure documentation, track scheduling, systems assignments and more.\r\n\r\nIn this talk we\u2019ll show you how we\u2019re using QUADS (backed by Foreman) to empower rapid, meaningful performance and scale testing of Red Hat products and technologies. While QUADS is a new project and under constant development, the design approach to handling large-scale systems provisioning as well as the current codebase is consumable for others interested in improving the efficiency and level of automation within their infrastructure."
      ],
      "user_votes": [
        {
          "468": 9.00
        },
        {
          "1214": 10.00
        },
        {
          "564": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "722": 7.00
        },
        {
          "316": 10.00
        },
        {
          "2032": 3.00
        },
        {
          "90": 10.00
        },
        {
          "1102": 10.00
        },
        {
          "71": 10.00
        },
        {
          "530": 10.00
        },
        {
          "2889": 3.00
        },
        {
          "300": 3.00
        },
        {
          "2356": -1.00
        },
        {
          "2209": -1.00
        },
        {
          "3703": 6.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps",
        "DevOps"
      ],
      "emails": "ww.foster@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/skynet-your-infrastructure-with-quads",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "1052": {
      "abstract_short": "The talk provides an overview on \"behavior-driven development\" (BDD)\r\nand how to use them with behave. Behave is a cucumber clone,\r\nwritten in Python. Part of behave's concepts and features influenced\r\nthe newest advancements in cucumber (like cucumber-expressions, etc.).\r\nBehave is primarily used in functional, integration and system testing.\r\n",
      "sub_title": "",
      "timerange": "2017-07-10 15:45:00, 2017-07-10 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1052,
      "speakers": "Jens Engel",
      "title": "Software, Behave yourself -- Using behave for BDD testing",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Best Practice",
        "Test Libraries (pyTest/node/...)",
        "Testing"
      ],
      "abstract_long": [
        "The talk provides an overview on \"behavior-driven development\" (BDD)\r\nand how to use them with [behave][1]. Behave is a [cucumber][6] clone,\r\nwritten in Python. Part of behave's concepts and features influenced\r\nthe newest advancements in cucumber (like cucumber-expressions, etc.).\r\n\r\nBehave is primarily used in functional, integration and system testing.\r\nIt uses Gherkin as executable specification to provide a living documentation\r\nthat describes and verifies the desired behaviour of a system. Therefore,\r\nit supports agile teams being productive and building the right systems.\r\n\r\nTopics:\r\n\r\n - Introduction to [BDD][2]\r\n - [Testing Quadrants][3]\r\n - [Specification by Example][4]\r\n - Executable Specification (and Documentation)\r\n - [Gherkin][7]: Good and Bad Gherkin\r\n - Behave concepts (with examples)\r\n - BDD frameworks in Python and other languages (like [cucumber][6])\r\n\r\nPart of the talk follows along the lines of [behave.example][5].\r\n\r\n  [1]: https://pypi.python.org/pypi/behave\r\n  [2]: http://behaviourdriven.org\r\n  [3]: http://lisacrispin.com/2011/11/08/using-the-agile-testing-quadrants/\r\n  [4]: https://gojko.net/books/specification-by-example/\r\n  [5]: https://github.com/behave/behave.example\r\n  [6]: https://cucumber.io\r\n  [7]: https://github.com/cucumber/cucumber/wiki/Gherkin"
      ],
      "user_votes": [
        {
          "195": 3.00
        },
        {
          "468": 10.00
        },
        {
          "251": 3.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 7.00
        },
        {
          "3428": 10.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3430": 10.00
        },
        {
          "1884": 3.00
        },
        {
          "306": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "2057": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "2889": 3.00
        },
        {
          "2493": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "3628": -1.00
        },
        {
          "300": -1.00
        },
        {
          "3818": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "2286": 2.00
        },
        {
          "105": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 9.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Best Practice and Use Cases",
        "Testing",
        "Testing"
      ],
      "emails": "jens_engel@web.de",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/software-behave-yourself-using-behave-for-bdd-testing",
      "admin_type": "",
      "companies": ""
    },
    "869": {
      "abstract_short": "No matter whether you run a web app, search for gravitational waves, or maintain a backup script: being responsible for a piece of software or infrastructure means that you either get a pager right away, or that you get angry calls from people affected by outages. Being paged at 4am in everyday life is bad enough. Having to fix problems from hotel rooms while your travel buddies go for brunch is even worse.",
      "sub_title": "How to Take 5 Weeks of Vacation",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@hynek",
      "id": 869,
      "speakers": "Hynek Schlawack",
      "title": "Solid Snakes",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Architecture",
        "Best Practice",
        "Development",
        "DevOps general"
      ],
      "abstract_long": [
        "No matter whether you run a web app, search for gravitational waves, or maintain a backup script: being responsible for a piece of software or infrastructure means that you either get a pager right away, or that you get angry calls from people affected by outages. Being paged at 4am in everyday life is bad enough. Having to fix problems from hotel rooms while your travel buddies go for brunch is even worse.\r\n\r\nAnd while incidents can\u2019t be prevented completely, there are ways to make your systems more reliable and minimize the need for (your!) manual intervention. This talk will help you to get calm nights and relaxing vacations by teaching you some of them."
      ],
      "user_votes": [
        {
          "1973": 7.00
        },
        {
          "135": 7.00
        },
        {
          "394": 3.00
        },
        {
          "2834": 7.00
        },
        {
          "485": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3370": 7.00
        },
        {
          "1908": 7.00
        },
        {
          "3031": 3.00
        },
        {
          "1900": 10.00
        },
        {
          "1214": 10.00
        },
        {
          "3496": 7.00
        },
        {
          "2794": 7.00
        },
        {
          "1476": 10.00
        },
        {
          "2069": 10.00
        },
        {
          "530": 7.00
        },
        {
          "2488": 10.00
        },
        {
          "3554": 10.00
        },
        {
          "316": 10.00
        },
        {
          "71": 10.00
        },
        {
          "3809": 10.00
        },
        {
          "1132": 10.00
        },
        {
          "3486": 10.00
        },
        {
          "3469": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 3.00
        },
        {
          "300": 10.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "2698": 6.00
        },
        {
          "3407": 6.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 6.00
        }
      ],
      "abstract_extra": "I have spoken at the past four EuroPythons and people seemed to have liked it.\r\n\r\nThis talk has been presented at PyCon Ukraine as a keynote and has been well received.  It also will be presented at PyCon US in May.\r\n\r\nThe outline is roughly the following:\r\n\r\n#  Risk minimization\r\n\r\n- Attitude\r\n- Simplicity\r\n- Plan for Stupidity\r\n- Illegal State\r\n\r\n# Plot Twist: Failure is inevitable.\r\n\r\n# Preparing for Failures\r\n\r\n- Monitoring\r\n- Timeouts\r\n- Redundancy\r\n- Documentation\r\n\r\n# Dealing with Failure\r\n- Containment\r\n- Error propagation\r\n- Crash-only software\r\n- Recovery",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "Programming",
        "DevOps"
      ],
      "emails": "schlawack@variomedia.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/solid-snakes-or-how-to-take-5-weeks-of-vacation",
      "admin_type": "",
      "companies": "Variomedia AG"
    },
    "988": {
      "abstract_short": "High-energy particles accelerated by the Sun during Coronal Mass Ejections (CME) are a major concern for a manned mission to Mars. Our research focuses on a Python-based tool which takes advantage of two publicly accessible space weather web portals.The developed tool is meant to be integrated in a virtual reality simulation of a human settlement on the surface of Mars (Mars City Project: www.mars-city.org), which is currently under development at MARS PLANET. ",
      "sub_title": "",
      "timerange": "2017-07-13 12:10:00, 2017-07-13 12:40:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 988,
      "speakers": "Antonio Del Mastro",
      "title": "Space weather monitoring for a virtual reality simulation of a Martian settlment",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Python general",
        "Physics"
      ],
      "abstract_long": [
        "High-energy particles accelerated by the Sun during Coronal Mass Ejections (CME) are a major concern for a manned mission to Mars. On Earth surface, these particles are shielded by the Earth magnetic field. In space and on the Martian surface, where such shielding is absent or much weaker, CME pose a radiation hazard to the health of astronauts. The development of tools to understand and forecast the interplanetary space weather is a requirement for future manned space missions in order to properly protect the astronauts from the radiation environment. A variety of methods are currently developed by the scientific community and a number of public tools for space weather monitoring and forecast is already available online.\r\nWe present a Python-based tool which takes advantage of two publicly accessible space weather web portals. Our software combines the forecast of CME and a real-time propagation model of energetic particles throughout the inner Solar System and the Martian atmosphere. It consistently recovers real-time relevant information and provides with days-to-hours forecasts for the radiation dose astronauts on Mars would be exposed to. The system raises an alert signal when the radiation dose exceeds the security levels defined by the main space agencies adopted as a reference.\r\nOur tool is meant to be integrated in a virtual reality simulation of a human settlement on the surface of Mars (Mars City Project www.mars-city.org).  \r\nPrerequisite:  Intermediate knowledge."
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "251": 7.00
        },
        {
          "47": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "3392": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "3369": 10.00
        },
        {
          "3407": 7.00
        },
        {
          "1035": 3.00
        },
        {
          "3777": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "3695": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3394": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2834": 2.00
        },
        {
          "2209": -1.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 2.00
        },
        {
          "3345": 9.00
        },
        {
          "3743": 2.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "468": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Sciences"
      ],
      "emails": "segreteria@marssociety.it",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/space-weather-monitoring-for-a-virtual-reality-simulation-of-a-martian-settlment",
      "admin_type": "",
      "companies": "MARS PLANET"
    },
    "991": {
      "abstract_short": "In this talk I want to share with you what I discovered when switching from a from a database centric view to stream oriented processing. \r\n",
      "sub_title": "",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 11:15:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@ctrebing",
      "id": 991,
      "speakers": "Christian Trebing",
      "title": "Streaming: Why should I care?",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Big Data",
        "Data Structures",
        "Databases"
      ],
      "abstract_long": [
        "You think, all that hype about streaming solutions does not affect you? I thought so also. But when playing around with that topic for some time, I realized that it sheds a different light on many topics I struggled with for some time. In this talk I want to share with you what I discovered when switching from a from a database centric view to stream oriented processing. \r\n\r\n- Splitting your application in smaller services gets easier as you have more natural boundaries\r\n- You have more options to run different data schema versions in different services (instead of one central db upgrade)\r\n- More scaling possibilities\r\n- Operations improvements\r\n\r\nFor sure, streaming does not solve any problem, but much more than I thought before. And in python you have good support with many streaming clients. I will give some examples and comparisons for working with Kafka and Avro Schemas."
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "683": 3.00
        },
        {
          "195": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "74": 3.00
        },
        {
          "2113": 10.00
        },
        {
          "251": 10.00
        },
        {
          "1924": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "685": 3.00
        },
        {
          "1900": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "1035": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "3418": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "3573": 3.00
        },
        {
          "1966": 10.00
        },
        {
          "316": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "3469": 7.00
        },
        {
          "3777": 3.00
        },
        {
          "2889": 10.00
        },
        {
          "3535": 7.00
        },
        {
          "3684": 7.00
        },
        {
          "2875": 10.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "3506": 6.00
        },
        {
          "2834": 2.00
        },
        {
          "530": 2.00
        },
        {
          "1897": 2.00
        },
        {
          "3143": 7.00
        },
        {
          "3407": 2.00
        },
        {
          "380": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "562": 2.00
        },
        {
          "3495": 2.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": 6.00
        },
        {
          "468": 2.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Programming",
        "Databases"
      ],
      "emails": "christian.trebing@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/streaming-why-should-i-care",
      "admin_type": "",
      "companies": "Blue Yonder GmbH"
    },
    "799": {
      "abstract_short": "In computational Science, our codes should be accurate, reproducible and reliable. Unfortunately, this can be quite challenging. Scientific codes investigate systems where the behaviour is often unknown, making testing difficult. They can be very complex, built over many years with contributions from many people. In this talk, I shall look at techniques and tools you can use to build more sustainable scientific code, including testing, continuous integration and documentation.",
      "sub_title": "",
      "timerange": "2017-07-12 14:35:00, 2017-07-12 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@_harpolea",
      "id": 799,
      "speakers": "Alice Harpole",
      "title": "Sustainable Scientific Software Development",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Science",
        "Science Track",
        "Best Practice",
        "Documentation",
        "Testing"
      ],
      "abstract_long": [
        "In the experimental Sciences, new theories are developed by applying the Scientific method to produce results which are accurate, reproducible and reliable. This involves testing the experimental setup to show that it is working as designed and thoroughly documenting the progress of the experiment. Results will not be trusted unless the experiment has been carried out to a suitable standard.\r\n\r\nIn computational Science, we should aim to apply the same principles. Results should only be trusted if the code that has produced it has undergone rigorous testing which demonstrates that it is working as intended, and any limitations of the code (e.g. numerical errors) are understood and quantified. The code should be well documented so that others can understand how it works and run it themselves to replicate results.\r\n\r\nUnfortunately, this can be quite challenging. By their very nature, scientific codes are built to investigate systems where the behaviour is to some extent unknown, so testing them can be quite difficult. They can be very complex, built over a number of years (or even decades!) with contributions from many people. However, even for the most complicated of codes there are a number of different tools we can use to build robust, reliable code.\r\n\r\nIn this talk, I shall look at techniques and tools you can use to build more sustainable scientific code, including testing, continuous integration and documentation."
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "251": 7.00
        },
        {
          "47": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "3031": 3.00
        },
        {
          "685": 7.00
        },
        {
          "1022": 3.00
        },
        {
          "3292": 7.00
        },
        {
          "3573": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3492": 3.00
        },
        {
          "663": 10.00
        },
        {
          "3777": 7.00
        },
        {
          "3695": 7.00
        },
        {
          "3420": 7.00
        },
        {
          "650": 10.00
        },
        {
          "3394": 7.00
        },
        {
          "3566": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "1877": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2698": 9.00
        },
        {
          "3407": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "3345": 6.00
        },
        {
          "171": -1.00
        },
        {
          "105": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3799": 7.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Sciences",
        ">>> Suggested Track",
        "Best Practice and Use Cases",
        "Programming",
        "Testing"
      ],
      "emails": "aliceharpole@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/sustainable-scientific-software-development",
      "admin_type": "",
      "companies": "University of Southampton"
    },
    "1124": {
      "abstract_short": "This talk\u2019s purpose is to describe in deep detail the benefits of protocol buffers, that offer us for free an easy way to define the API messages in the proto format, and then reuse them inside different services, without even being locked to use the same programming language for them. Moreover, with gRPC we can define the API\u2019s endpoints easily in the same proto format. All these offer us a robust schema enforcement, compact binary serialization, and easy backward compatibility.",
      "sub_title": "",
      "timerange": "2017-07-12 12:10:00, 2017-07-12 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@mishunika",
      "id": 1124,
      "speakers": "Mihai Iachimovschi",
      "title": "Teach your (micro)services speak Protocol Buffers with gRPC.",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Python general",
        "HTTP",
        "Microservices"
      ],
      "abstract_long": [
        "When it comes to microservices, there're a lot of things worth keeping in mind. Designing such fine-grained, loosely-coupled services requires paying lots of attention to various patterns and approaches to make them future-proof. A very important thing to consider, is the way those services will communicate with each-other in production. Usually the communication is done over the network using a technology-agnostic protocol. At the next level the service should provide an API for its friend services. Then, the data should be serialized without altering its meaning and transferred to the picked endpoint.\r\n\r\nNowadays, exposing a REST API that operates with JSON over plain HTTP is a usual way to lay the grounds of communication for the services. It is easy to accomplish, but it has some drawbacks. First of all, JSON is a human readable format, and it\u2019s not as other serialization approaches. Also, with JSON it\u2019s not possible to natively enforce the schema, and evolving the API may be painful.\r\n\r\nThis talk\u2019s purpose is to describe in deep detail the benefits of protocol buffers, that offer us for free an easy way to define the API messages in the proto format, and then reuse them inside different services, without even being locked to use the same programming language for them. Moreover, with gRPC we can define the API\u2019s endpoints easily in the same proto format. All these offer us a robust schema enforcement, compact binary serialization, and easy backward compatibility."
      ],
      "user_votes": [
        {
          "1897": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "2113": 7.00
        },
        {
          "74": 3.00
        },
        {
          "468": 10.00
        },
        {
          "251": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "564": 7.00
        },
        {
          "2227": 10.00
        },
        {
          "3392": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3486": 7.00
        },
        {
          "3402": 3.00
        },
        {
          "3809": 10.00
        },
        {
          "3398": 7.00
        },
        {
          "85": 3.00
        },
        {
          "316": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 7.00
        },
        {
          "58": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "2127": 10.00
        },
        {
          "2698": 2.00
        },
        {
          "3407": 6.00
        },
        {
          "3084": 2.00
        },
        {
          "562": 6.00
        },
        {
          "171": 2.00
        },
        {
          "2286": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Web",
        "Programming"
      ],
      "emails": "mihai.iachimovschi@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/teach-your-microservices-speak-protocol-buffers-with-grpc",
      "admin_type": "",
      "companies": ""
    },
    "859": {
      "abstract_short": "Code golfing is an interesting heuristic dedicated to minimizing the overall length of code to produce the same functionality. The result doesn\u2019t have to be incomprehensible, and in fact, we can make the code more Pythonic in the process!\r\n\r\nConcise code helps future readers of the code understand the intent without getting distracted by implementation errata. We\u2019ll cover numerous features of Python which allow complex ideas to be expressed concisely without sacrificing readability.\r\n",
      "sub_title": "",
      "timerange": "2017-07-12 12:10:00, 2017-07-12 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 859,
      "speakers": "Lee Sheng",
      "title": "Teeing up Python: Code Golf",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Clean Code",
        "Python general",
        "Developing with Python",
        "Functional Programming"
      ],
      "abstract_long": [
        "Code golfing is an interesting heuristic dedicated to minimizing the overall length of code to produce the same functionality. The result doesn\u2019t have to be incomprehensible, and in fact, we can make the code more Pythonic in the process!\r\n\r\nConcise code helps future readers of the code understand the intent without getting distracted by implementation errata. We\u2019ll cover numerous features of Python which allow complex ideas to be expressed concisely without sacrificing readability.  Broad subtopics:\r\n - Why even bother?\r\n - Default! The two sweetest words in the english language!\r\n - The Joy of Tuples\r\n - Comprehending Comprehensions\r\n - Who\u2019s afraid of Functional Programming?\r\n - Ideas in Context Managers\r\n\r\n"
      ],
      "user_votes": [
        {
          "683": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "74": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 3.00
        },
        {
          "3592": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "1476": 3.00
        },
        {
          "2259": 3.00
        },
        {
          "1132": 10.00
        },
        {
          "2365": 3.00
        },
        {
          "300": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3296": 7.00
        },
        {
          "589": 10.00
        },
        {
          "3293": 10.00
        },
        {
          "3628": -1.00
        },
        {
          "2834": -1.00
        },
        {
          "380": -1.00
        },
        {
          "562": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Python",
        ">>> Suggested Track",
        "Programming"
      ],
      "emails": "lsheng@yelp.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/teeing-up-python-code-golf",
      "admin_type": "",
      "companies": "Yelp"
    },
    "759": {
      "abstract_short": "Automated testing is at the heart of modern development and operations, but it's often segregated between developer-focused unit testing and separate, often only semi-automated end-to-end integration testing. This talk shows that the best kind of testing is one which deploys in many layers, reusing test-components in various configurations for multiple purposes.",
      "sub_title": "",
      "timerange": "2017-07-10 10:30:00, 2017-07-10 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 759,
      "speakers": "Alex Martelli",
      "title": "Testing in Layers",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Developing with Python",
        "Deployment/Continuous Integration and Delivery",
        "Testing"
      ],
      "abstract_long": [
        "The role of automated testing at the heart of modern development and operations is a given. However, the traditional approach to testing, separating too-developer-focused unit testing and (often only semi-automated) end-to-end integration testing\u2014is not optimal in the modern, fluid world of DevOps.\r\n\r\nNothing short of full automation is suitable for continuous integration; any \u201ctesting\u201d requiring humans has a drastically different place in the continuum of development and deployment and should best be called by a completely different name like quality assurance. Within the realm of fully automated testing, the best approach, just as for other kinds of software, is modular and layered.\r\n\r\nThis talk highlights the proper design of components for testing purposes and explains how such a design lets you compose multiple, layered testing suites that span the gamut from fast, light-weight unit tests meant to run all the time during development, to full-fledged end-to-end tests of whole systems\u2014and, crucially, the often-neglected intermediate layers, bridging the thoroughness of end-to-end tests with unit tests\u2019 speed and ability to pinpoint the location of any problems that emerge, enabling rapid fixes of most such problems.\r\n\r\nThe talk also discusses the use of modular, layered testing components to validate software refactoring, and (when deployed in a load-testing arrangement) identify and validate software (and architectural) optimizations."
      ],
      "user_votes": [
        {
          "3637": 7.00
        },
        {
          "3364": 7.00
        },
        {
          "2032": 3.00
        },
        {
          "3310": 3.00
        },
        {
          "74": 3.00
        },
        {
          "394": 3.00
        },
        {
          "3370": 7.00
        },
        {
          "3308": 7.00
        },
        {
          "468": 10.00
        },
        {
          "2834": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 7.00
        },
        {
          "3701": 7.00
        },
        {
          "1900": 10.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "3764": 10.00
        },
        {
          "3392": 10.00
        },
        {
          "3605": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "3418": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "3457": 10.00
        },
        {
          "3554": 7.00
        },
        {
          "3007": 10.00
        },
        {
          "2585": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "2294": 7.00
        },
        {
          "2259": 7.00
        },
        {
          "2057": 10.00
        },
        {
          "306": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "71": 10.00
        },
        {
          "1035": 3.00
        },
        {
          "663": 3.00
        },
        {
          "3398": 7.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "3695": 10.00
        },
        {
          "300": 10.00
        },
        {
          "3500": 3.00
        },
        {
          "3684": 10.00
        },
        {
          "3394": 3.00
        },
        {
          "646": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 10.00
        },
        {
          "3498": 10.00
        },
        {
          "69": 6.00
        },
        {
          "3407": 9.00
        },
        {
          "3084": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "105": 7.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "2698": 9.00
        },
        {
          "1961": 10.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "DevOps",
        "Testing"
      ],
      "emails": "aleaxit@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/testing-in-layers",
      "admin_type": "",
      "companies": "Google, Inc"
    },
    "1048": {
      "abstract_short": "[Last year's talk][1] showed you how to use [CFFI][2] to write unit tests for C code in Python. This year we will take the concept one step further and create integration tests covering (almost) the whole firmware of a microcontroller, again leveraging the power of CFFI.\r\n\r\n  [1]: https://ep2016.europython.eu/conference/talks/writing-unit-tests-for-c-code-in-python\r\n  [2]: https://cffi.readthedocs.io/",
      "sub_title": "",
      "timerange": "2017-07-10 15:45:00, 2017-07-10 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1048,
      "speakers": "Alexander Steffen",
      "title": "Testing microcontroller firmware with Python",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Hardware/IoT Track",
        "Programming",
        "C-Languages",
        "Testing",
        "Other Hardware"
      ],
      "abstract_long": [
        "[Last year's talk][1] showed you how to use [CFFI][2] to write unit tests for C code in Python. This year we will take the concept one step further and create integration tests covering (almost) the whole firmware of a microcontroller, again leveraging the power of CFFI.\r\n\r\nBut instead of running the firmware on the controller, it will be executed on the development machine (that is, a standard x86 architecture), allowing for much faster test execution, without requiring the target hardware. For this to work, all the hardware-dependent parts of the firmware code need to be replaced by Python code simulating the hardware functionality, so that all the firmware above this hardware abstraction layer can be executed unmodified.\r\n\r\nIn addition, this allows to use advanced security testing tools like [AddressSanitizer][3] and [american fuzzy lop][4] that would not be able to run directly on the microcontroller.\r\n\r\n  [1]: https://ep2016.europython.eu/conference/talks/writing-unit-tests-for-c-code-in-python\r\n  [2]: https://cffi.readthedocs.io/\r\n  [3]: https://github.com/google/sanitizers/wiki/AddressSanitizer\r\n  [4]: http://lcamtuf.coredump.cx/afl/"
      ],
      "user_votes": [
        {
          "2032": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "74": 3.00
        },
        {
          "394": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "1900": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "3430": 10.00
        },
        {
          "1966": 3.00
        },
        {
          "3554": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "2365": 7.00
        },
        {
          "663": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "3695": 10.00
        },
        {
          "300": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3703": -1.00
        },
        {
          "380": 2.00
        },
        {
          "562": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3345": 9.00
        },
        {
          "171": 6.00
        },
        {
          "105": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "2698": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Programming",
        "Other Programming Languages",
        "Testing",
        "Hardware"
      ],
      "emails": "alexander.steffen@infineon.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/testing-microcontroller-firmware-with-python",
      "admin_type": "",
      "companies": "Infineon Technologies AG"
    },
    "908": {
      "abstract_short": "The PyPy JIT is a powerful piece of technology which makes Python program\r\nrunning faster: in this talk, we will see how it helps us to write our\r\nprograms better without sacrificing performance.",
      "sub_title": "",
      "timerange": "2017-07-12 15:45:00, 2017-07-12 16:45:00",
      "sub_community": "",
      "duration": 60,
      "twitters": "@antocuni",
      "id": 908,
      "speakers": "Antonio Cuni",
      "title": "The joy of PyPy JIT: abstractions for free",
      "have_tickets": [
        true
      ],
      "type": "Talk (60 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Software Design",
        "Performance",
        "PyPy",
        "Architecture",
        "Compiler and Interpreters"
      ],
      "abstract_long": [
        "**The joy of PyPy JIT: abstractions for free**\r\n\r\nThe PyPy JIT is a powerful piece of technology which makes Python program\r\nrunning faster: in this talk, we will see how it helps us to write our\r\nprograms better without sacrificing performance.\r\n\r\nOne of the key to write complex software systems of good quality is to make a\r\ngood usage of abstractions, to clearly separate the various layers and\r\ncomponents.  However, often each layer of abstraction adds some cost in terms\r\nof runtime performance, so we need to struggle finding the best trade-off\r\nbetween maintainability and speed.\r\n\r\nBecause of the way it works, the PyPy JIT naturally removes the cost of most\r\nabstractions: we will look at real-life examples of how this is possible,\r\nshowing what the JIT can and can't do. We will also show how this compares to\r\nother popular systems of optimizing Python code, such as Cython.\r\n\r\n"
      ],
      "user_votes": [
        {
          "2032": 7.00
        },
        {
          "804": 10.00
        },
        {
          "3310": 7.00
        },
        {
          "394": 7.00
        },
        {
          "1924": 7.00
        },
        {
          "2063": 10.00
        },
        {
          "3308": 7.00
        },
        {
          "3547": 10.00
        },
        {
          "3592": 10.00
        },
        {
          "564": 7.00
        },
        {
          "1466": 10.00
        },
        {
          "2227": 10.00
        },
        {
          "3764": 7.00
        },
        {
          "1476": 10.00
        },
        {
          "480": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "722": 3.00
        },
        {
          "2865": 7.00
        },
        {
          "2493": 10.00
        },
        {
          "3402": 7.00
        },
        {
          "3407": 7.00
        },
        {
          "2365": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "651": 10.00
        },
        {
          "650": 10.00
        },
        {
          "3575": 7.00
        },
        {
          "300": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3695": 3.00
        },
        {
          "2698": 2.00
        },
        {
          "545": 6.00
        },
        {
          "310": 6.00
        },
        {
          "767": 9.00
        },
        {
          "3084": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "468": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3777": -1.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "242": 7.00
        },
        {
          "3711": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Programming",
        "Python",
        "Programming",
        "Python"
      ],
      "emails": "anto.cuni@gmail.com",
      "language": "English",
      "level": "Advanced",
      "url": "https://ep2017.europython.eu//conference/talks/the-joy-of-pypy-jit-abstractions-for-free",
      "admin_type": "",
      "companies": "My own"
    },
    "939": {
      "abstract_short": "One aphorism of the Zen of Python states: \"There should be one obvious way to do it.\"\r\nBut for the process of bringing python into production there is no such \u201cone way\u201d.\r\n\r\nI will give an overview of the different steps in the delivery pipeline, from packaging to deployment. We learn about the different runtime environments, from bare metal servers to \u201cserverless\u201d and scratch on the surface of configuration management and orchestration frameworks in search for the \u201cone way\u201d. ",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@sebineubauer",
      "id": 939,
      "speakers": "Sebastian Neubauer",
      "title": "There should be one obvious way to bring python into production",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Configuration Management (Ansible/Fabric/Chef/...)",
        "Operations",
        "Best Practice",
        "Deployment/Continuous Integration and Delivery",
        "DevOps general"
      ],
      "abstract_long": [
        "The DevOps methodology is reality. That said, many developers have to deal with the process of bringing python applications into production.\r\nOne aphorism of the Zen of Python states: \"There should be one-- and preferably only one --obvious way to do it.\"\r\nWhile for the language itself and code being written with it, this advice is often strictly followed for good reasons. For the process of bringing python into production it is not.\r\n\r\nIn the first part of this talk I will give an overview of the different steps in the delivery pipeline, from packaging to deployment and the various possible implementations for each of those steps that emerged over the last years. We will discuss docker, pex, wheels, debs, and tars. We will learn why fixed environments are crucial and why pip is not yet what it should be. We learn about the different runtime environments, from bare metal servers over ephemeral container clusters to \u201cserverless\u201d and what they impose on the deployment process and scratch on the surface of configuration management using tools like Ansible and orchestration frameworks like Kubernetes. We will also explore the world beyond python by looking into other languages ecosystems and learn how they addressed and solved this issue.\r\n\r\nAfter we understood the requirements and realized that there is not \"one obvious way to do it\", this talk is a call to action: Let us define and build the \u201cone obvious way\u201d of how we want to bring python into production!"
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "683": 7.00
        },
        {
          "2113": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "468": 3.00
        },
        {
          "251": 3.00
        },
        {
          "1924": 7.00
        },
        {
          "685": 7.00
        },
        {
          "3328": 7.00
        },
        {
          "1900": 3.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 7.00
        },
        {
          "3703": 7.00
        },
        {
          "419": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "2488": 7.00
        },
        {
          "1884": 3.00
        },
        {
          "3409": 3.00
        },
        {
          "2585": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3369": 3.00
        },
        {
          "3779": 10.00
        },
        {
          "3486": 3.00
        },
        {
          "85": 3.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 7.00
        },
        {
          "58": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2127": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "2834": 2.00
        },
        {
          "530": 2.00
        },
        {
          "930": 6.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 9.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "171": 2.00
        },
        {
          "105": 7.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "DevOps",
        "DevOps",
        "Best Practice and Use Cases",
        "DevOps",
        "DevOps"
      ],
      "emails": "sebastian.neubauer@blue-yonder.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/there-should-be-one-obvious-way-to-bring-python-into-production",
      "admin_type": "",
      "companies": "Blue Yonder GmbH"
    },
    "905": {
      "abstract_short": "Do you maintain a [Rube Goldberg][1]-like service? Perhaps it\u2019s highly distributed? Or you recently walked onto a team with an unfamiliar codebase? Have you noticed your service responds slower than molasses? This talk will walk you through how to pinpoint bottlenecks, approaches and tools to make improvements, and make you seem like the hero! All in a day\u2019s work.\r\n\r\n\r\n  [1]: https://s-media-cache-ak0.pinimg.com/564x/92/27/a6/9227a66f6028bd19d418c4fb3a55b379.jpg",
      "sub_title": "",
      "timerange": "2017-07-11 14:35:00, 2017-07-11 15:05:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@roguelynn",
      "id": 905,
      "speakers": "Lynn Root",
      "title": "Tracing, Fast and Slow: Digging into & improving your web service\u2019s performance",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 1",
      "tags": [
        "Web General",
        "Performance",
        "Infrastructure",
        "Distributed Systems",
        "Web Track"
      ],
      "abstract_long": [
        "Do you maintain a [Rube Goldberg][1]-like service? Perhaps it\u2019s highly distributed? Or you recently walked onto a team with an unfamiliar codebase? Have you noticed your service responds slower than molasses? This talk will walk you through how to pinpoint bottlenecks, approaches and tools to make improvements, and make you seem like the hero! All in a day\u2019s work.\r\n\r\nThe talk will describe various types of tracing a web service, including black & white box tracing, tracing distributed systems, as well as various tools and external services available to measure performance. I\u2019ll also present a few different rabbit holes to dive into when trying to improve your service\u2019s performance.\r\n\r\n\r\n  [1]: https://s-media-cache-ak0.pinimg.com/564x/92/27/a6/9227a66f6028bd19d418c4fb3a55b379.jpg\r\n\r\n"
      ],
      "user_votes": [
        {
          "3637": 3.00
        },
        {
          "2113": 10.00
        },
        {
          "1481": 3.00
        },
        {
          "394": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "1900": 7.00
        },
        {
          "564": 3.00
        },
        {
          "484": 10.00
        },
        {
          "2488": 7.00
        },
        {
          "2865": 7.00
        },
        {
          "468": 10.00
        },
        {
          "2479": 3.00
        },
        {
          "300": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "71": 10.00
        },
        {
          "1956": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "545": 2.00
        },
        {
          "767": 9.00
        },
        {
          "380": 9.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 6.00
        },
        {
          "3770": 6.00
        }
      ],
      "abstract_extra": "<moving this bit from published abstract to here> \r\nSome background: I walked into my \u201cnew\u201d position within Spotify whose team basically maintains this complex system that is our machine provisioning service, written with Pyramid. Frequently, we got complaints regarding how sluggish our system is. This talk will have this story as a background thread, starting with a simplified version of the problem (an example app), how to dig into the app, and then generalized approaches to improve performance.\r\n\r\nI wrote up an [outline][2] that might evolve a bit; but this is essentially what I want to dive into.\r\n\r\n  [2]: https://gist.github.com/econchick/974b3ec02c46cde28524ca6dfda342e6",
      "tag_categories": [
        "Web",
        "Programming",
        "DevOps",
        "DevOps",
        ">>> Suggested Track"
      ],
      "emails": "erin.lynn.root@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/tracing-fast-and-slow-digging-into-improving-your-web-services-performance",
      "admin_type": "",
      "companies": "Spotify"
    },
    "997": {
      "abstract_short": "Python 3.5 introduced support for \"type hints\" (or annotations), which allows us to annotate our code with useful bits of information without affecting its runtime behavior. Type hints don't enforce a particular use case and can therefore be used for many purposes. In my talk, I will explain some of the use cases of type hints, and show how we can use them to e.g. make our code more secure or teach it new tricks. ",
      "sub_title": "",
      "timerange": "2017-07-13 10:30:00, 2017-07-13 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@",
      "id": 997,
      "speakers": "Andreas Dewes",
      "title": "Type Annotations in Python 3: Whats, whys & wows!",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Python 3",
        "Type-Hinting",
        "Use Case",
        "Developing with Python"
      ],
      "abstract_long": [
        "Python 3.5 introduced support for \"type hints\" (or annotations), which allows us to annotate our code with useful bits of information without affecting its runtime behavior. Type hints don't enforce a particular use case and can therefore be used for many purposes.\r\n\r\nIn my talk, I will explain some of the use cases of type hints, and show how we can use them to e.g. make our code more secure or teach it new tricks. We will have a look at popular libraries that help us to use the power of type hints (e.g. mypy), but we will also see how we can build our own extensions on top of the type hint system.\r\n\r\nAfter the talk you should walk away with a solid (basic) understanding of type hints in Python and an idea of how they might be useful to you now or in the future. \r\n\r\n - Typing and type hints in programming languages\r\n - Short history and motivation of type hints in Python\r\n - Basics of type hint syntax and semantics\r\n - Use cases for type hints\r\n - Type hints for code analysis: mypy and similar libraries\r\n - Building new stuff with type hints in Python\r\n - Summary, Outlook & Further Reading\r\n\r\n"
      ],
      "user_votes": [
        {
          "1897": 7.00
        },
        {
          "3637": 3.00
        },
        {
          "804": 10.00
        },
        {
          "3256": 7.00
        },
        {
          "195": 3.00
        },
        {
          "2032": 3.00
        },
        {
          "2113": 7.00
        },
        {
          "468": 7.00
        },
        {
          "2209": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "3308": 10.00
        },
        {
          "2834": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "3701": 3.00
        },
        {
          "3668": 3.00
        },
        {
          "1022": 3.00
        },
        {
          "564": 7.00
        },
        {
          "3496": 7.00
        },
        {
          "484": 3.00
        },
        {
          "2794": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "419": 3.00
        },
        {
          "3292": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3605": 7.00
        },
        {
          "1966": 3.00
        },
        {
          "782": 10.00
        },
        {
          "1884": 7.00
        },
        {
          "2479": 10.00
        },
        {
          "3398": 10.00
        },
        {
          "2259": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "2365": 10.00
        },
        {
          "3779": 3.00
        },
        {
          "3486": 7.00
        },
        {
          "3777": 7.00
        },
        {
          "3695": 3.00
        },
        {
          "650": 7.00
        },
        {
          "300": 10.00
        },
        {
          "2875": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3298": 3.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "509": 7.00
        },
        {
          "930": 6.00
        },
        {
          "767": 6.00
        },
        {
          "310": 6.00
        },
        {
          "3407": 9.00
        },
        {
          "3818": 6.00
        },
        {
          "380": 9.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 9.00
        },
        {
          "171": 6.00
        },
        {
          "2286": 9.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 2.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        "Programming",
        "Best Practice and Use Cases",
        ">>> Suggested Track"
      ],
      "emails": "andreas@quantifiedcode.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/type-annotations-in-python-3-whats-whys-wows",
      "admin_type": "",
      "companies": "7scientists"
    },
    "1131": {
      "abstract_short": "This talk aims to give attendants a general overview about Celery and its uses. We will walk through the core Celery architecture by introducing key components with the help of various real-world examples. This will also lead to an understanding of the task queue systems in general. Attendants will also gain information about Celerybeat; a tool that focuses on scheduling tasks. \r\n",
      "sub_title": "",
      "timerange": "2017-07-10 14:00:00, 2017-07-10 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 1131,
      "speakers": "Yigit Guler",
      "title": "Understanding Celery & CeleryBeat",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Django Track",
        "Hardware/IoT Track",
        "Developing with Python",
        "Web Track"
      ],
      "abstract_long": [
        "Celery is a distributed task queue for Python. Although it is most popular in the web development ecosystem, it has a wide area of usage from system management to IoT devices. With Celery, transforming a function into a task is quite easy and can add great performance & usability to the applications that we build.\r\n\r\nThis talk aims to give attendants a general overview on Celery and its uses. We will walk through the core Celery architecture by introducing key components with the help of various real-world examples. This will also lead to an understanding of the task queue systems in general. Attendants will also gain knowledge about Celerybeat; a tool that focuses on scheduling tasks.\r\n\r\nWe will be looking for the answers to the following questions:\r\n\r\n - What is a distributed task queue?\r\n - What are the main elements of Celery?\r\n - When should we use Celery tasks?\r\n - How do we use Celery Beat?\r\n\r\nAttendants should have a basic knowledge of Python, and a minor development experience.\r\n\r\n"
      ],
      "user_votes": [
        {
          "1878": 7.00
        },
        {
          "2113": 7.00
        },
        {
          "251": 10.00
        },
        {
          "3310": 10.00
        },
        {
          "2209": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "468": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3372": 10.00
        },
        {
          "3764": 7.00
        },
        {
          "3328": 10.00
        },
        {
          "419": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "3418": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2032": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "2782": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "3369": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "3779": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3500": 3.00
        },
        {
          "3597": 3.00
        },
        {
          "58": 3.00
        },
        {
          "3298": 7.00
        },
        {
          "3299": 10.00
        },
        {
          "2985": 3.00
        },
        {
          "3506": 2.00
        },
        {
          "3628": 2.00
        },
        {
          "1897": 2.00
        },
        {
          "3818": 6.00
        },
        {
          "380": 6.00
        },
        {
          "562": 6.00
        },
        {
          "2183": 2.00
        },
        {
          "171": 9.00
        },
        {
          "2286": 9.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        ">>> Suggested Track",
        ">>> Suggested Track",
        ">>> Suggested Track"
      ],
      "emails": "yigit@hipolabs.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/understanding-celery-celerybeat",
      "admin_type": "",
      "companies": "Hipo"
    },
    "812": {
      "abstract_short": "Linear and quadratic optimizers and penalties are a mainstay of data science, and are popular due to their ability to handle large numbers of dimensions quickly. However, the use of linear and/or quadratic tools can seriously limit the amount and quality of information that can be applied in the inverse problem. This talk will introduce some tools within the `mystic\u2019 framework for efficiently solving high-dimensional non-convex optimization problems with nonlinear constraints.",
      "sub_title": "",
      "timerange": "2017-07-13 11:20:00, 2017-07-13 12:05:00",
      "sub_community": "pydata",
      "duration": 45,
      "twitters": "@",
      "id": 812,
      "speakers": "Michael McKerns",
      "title": "Using the mystic framework to accelerate data science",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Predictions",
        "Data Science",
        "Analytics"
      ],
      "abstract_long": [
        "This talk will introduce modern tools for solving optimization problems -- beginning with traditional methods, and extending to solving high-dimensional non-convex optimization problems with highly nonlinear constraints. We will start by introducing the cost function, and it\u2019s use in local and global optimization. We will then address how to monitor and diagnose your optimization convergence and results, tune your optimizer, and utilize compound termination conditions. This talk will discuss building and applying box constraints, penalty functions, and symbolic constraints. We will then demonstrate methods to efficiently reduce search space through the use of robust optimization constraints and kernel transformations.  Real-world inverse problems can be expensive, thus we will show how to enable your optimization to seamlessly leverage parallel computing. Large-scale optimizations also can greatly benefit from efficient solver restarts and the saving of state. This talk will cover using asynchronous computing for results caching and archiving, dynamic real-time optimization, and dimensional reduction. Next we will discuss new optimization methods that leverage parallel computing to perform fast global optimizations and n-dimensional global searches. Throughout, we will discuss applications of `mystic\u2019 in data science and machine learning.\r\n\r\nFor more information about mystic, see: http://pythonhosted.org/mystic and https://github.com/uqfoundation/mystic."
      ],
      "user_votes": [
        {
          "1973": 3.00
        },
        {
          "251": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3428": 7.00
        },
        {
          "3292": 7.00
        },
        {
          "722": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "300": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "509": 3.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 9.00
        },
        {
          "171": 2.00
        },
        {
          "3264": -1.00
        },
        {
          "468": -1.00
        },
        {
          "3629": 3.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science",
        "Data Science",
        "Data Science"
      ],
      "emails": "mmckerns@uqfoundation.org",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/using-the-mystic-framework-to-accelerate-data-science",
      "admin_type": "",
      "companies": "the UQ Foundation"
    },
    "1032": {
      "abstract_short": "Recent releases like AsyncIO and Django Channels gave a new push towards building real-time web-apps fast and easy. However, as similar tools exist in Python since 2000th, how should we balance between modern and time-proven?\r\n\r\nThis talk gives an overview of Async libraries in Python, and helps with choosing a right tool for various web tasks.\r\n\r\nIt describes caveats of using Twisted, Tornado, AsyncIO and Django Channels. We will see code snippets for the same typical web-task and run them.",
      "sub_title": "Get to know Python async web stack and choose the right tool for the job",
      "timerange": "2017-07-11 11:20:00, 2017-07-11 12:05:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@anton_caceres",
      "id": 1032,
      "speakers": "Anton Caceres",
      "title": "Using the right Async tool, present day",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Web",
        "Web Track",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Recent releases like AsyncIO and Django Channels gave a new push towards building real-time web-apps fast and easy. However, as similar tools exist in Python since 2000th, how should we balance between modern and time-proven?\r\n\r\n**This talk includes but is not focused just on AsyncIO. It gives an overview of Async libraries in Python, and helps with choosing a right tool for various web tasks.**\r\n\r\nIt describes caveats of using Twisted, Tornado, AsyncIO and Django Channels. We will see code snippets for the same typical web-task, run it and discuss it.\r\n\r\n**Talk plan**\r\n\r\n 1. Why do we need Async Web (5 min)\r\n\r\n 2. Existing libraries and frameworks:  Twisted, Tornado, AsyncIO, Django Channels (15 min)\r\n\r\n 3. Sample task, sample code, conclusions (10 min)\r\n \r\n 4. Q & A (5 min)"
      ],
      "user_votes": [
        {
          "804": 10.00
        },
        {
          "2032": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "3310": 10.00
        },
        {
          "2209": 3.00
        },
        {
          "251": 7.00
        },
        {
          "1924": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "3428": 10.00
        },
        {
          "245": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "419": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "489": 10.00
        },
        {
          "3605": 7.00
        },
        {
          "722": 3.00
        },
        {
          "1966": 3.00
        },
        {
          "1884": 3.00
        },
        {
          "2479": 7.00
        },
        {
          "3507": 10.00
        },
        {
          "3369": 10.00
        },
        {
          "3407": 10.00
        },
        {
          "3809": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "663": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "3535": 7.00
        },
        {
          "300": 7.00
        },
        {
          "3500": 10.00
        },
        {
          "2493": 3.00
        },
        {
          "646": 3.00
        },
        {
          "93": 3.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 3.00
        },
        {
          "2688": 9.00
        },
        {
          "2698": 2.00
        },
        {
          "530": 2.00
        },
        {
          "1897": 6.00
        },
        {
          "310": 6.00
        },
        {
          "767": 9.00
        },
        {
          "3084": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3826": 6.00
        },
        {
          "3770": 9.00
        },
        {
          "468": 2.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Web",
        ">>> Suggested Track",
        "Web",
        "Programming"
      ],
      "emails": "anton@caceres.me",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/async-web-development-present-day",
      "admin_type": "",
      "companies": "Tech-5"
    },
    "965": {
      "abstract_short": "Do you feel like Django and the other common frameworks are not flexible enough for you? Look no further!\r\nWerkzeug is a very lightweight HTTP/WSGI framework for Python. \r\nWerkzeug handles the WSGI communication with the web server and parsing of HTTP packets for you, after that, you are left to do whatever you want. No pre-defined ORM, no request dispatching or template rendering. \r\nLet me show you how we built a specialized web application on top of Werkzeug and how you can do it too!",
      "sub_title": "",
      "timerange": "2017-07-13 16:20:00, 2017-07-13 16:50:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@NiklasMM",
      "id": 965,
      "speakers": "Niklas Meinzer",
      "title": "When Django is too bloated - Specialized Web-Applications with Werkzeug",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Developing with Python",
        "Architecture",
        "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)",
        "HTTP"
      ],
      "abstract_long": [
        "Did you ever think, Django and all the other \u201cbatteries included\u201d frameworks are not flexible enough for your needs? Do you feel like they limit you in your creativity and design? Then this talk is for you!\r\n\r\nWerkzeug is a very lightweight HTTP/WSGI framework for Python. You might have actually used it before, since the popular framework Flask is based on it.\r\nWerkzeug handles the WSGI communication with the web server and parsing of HTTP packets for you, after that, you are left to do whatever you want. No pre-defined ORM, no request dispatching or template rendering. \r\nAs a developer you are supported with a live debugger that runs in the browser and a great variety of testing tools making it easy to write fine grained unit tests for your application.\r\n\r\nAs a developer at MPS - Medical Systems, I work with Werkzeug on a daily basis. One of our products is ChemoCompile,  a chemo therapy planning, management and documentation tool used in hospitals in various European countries. It is a single-page web application written in Python (backend) and AngularJS (frontend). When we created it, we first prototyped it using Django, but soon realized, that we did not need most of the functionality that Django provides and many of our needs, like interfacing with hospital information systems, are too much out of the scope of a regular web applications. I will talk about, how we then discovered Werkzeug and built our own very customized stack on top of it and how you can do it too!"
      ],
      "user_votes": [
        {
          "3256": 7.00
        },
        {
          "1973": 3.00
        },
        {
          "251": 7.00
        },
        {
          "47": 7.00
        },
        {
          "3311": 7.00
        },
        {
          "2530": 10.00
        },
        {
          "2688": 7.00
        },
        {
          "3423": 10.00
        },
        {
          "3403": 10.00
        },
        {
          "3454": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "3459": 10.00
        },
        {
          "3547": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 7.00
        },
        {
          "3496": 7.00
        },
        {
          "419": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3409": 10.00
        },
        {
          "3405": 10.00
        },
        {
          "3554": 3.00
        },
        {
          "3402": 3.00
        },
        {
          "3369": 3.00
        },
        {
          "3507": 7.00
        },
        {
          "3398": 10.00
        },
        {
          "650": 3.00
        },
        {
          "2493": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 10.00
        },
        {
          "300": 6.00
        },
        {
          "2169": 6.00
        },
        {
          "2209": 2.00
        },
        {
          "3382": 6.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        },
        {
          "3084": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        ">>> Suggested Track",
        "Programming",
        "Web",
        "Web"
      ],
      "emails": "ep17@niklas-meinzer.de",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/when-django-is-too-bloated-specialized-web-applications-with-werkzeug",
      "admin_type": "",
      "companies": "MPS - Medical Systems"
    },
    "931": {
      "abstract_short": "This talk is to present Python's features that either simplifies or eliminates need for implementing design patterns. Even if you don't know what design patterns are - don't worry. You still may see some new interesting Python's features and their usage.",
      "sub_title": "",
      "timerange": "2017-07-11 12:10:00, 2017-07-11 12:40:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@EnforcerPL",
      "id": 931,
      "speakers": "Sebastian Buczy\u0144ski",
      "title": "Why you don't need design patterns in Python?",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Software Design",
        "Python general",
        "Developing with Python"
      ],
      "abstract_long": [
        "Exactly 23 years have passed since release of one of the biggest IT classics - \"Design Patterns: Elements of Reusable Object-Oriented Software\". Contents of the book had considerable influence on dominant programming languages of those days. However, design patterns were not glorified by everyone. Voices of rational critic appeared, pointing out that design patterns are just ways to compensate for missing languages features by tons of clumsy code. If one implements design patterns in Python by the book, they will get code that looks awkward, at best. This talk is to present Python's features that either simplifies or eliminates need for implementing design patterns. Even if you don't know what design patterns are - don't worry. You still may see some new interesting Python's features and their usage."
      ],
      "user_votes": [
        {
          "3531": 7.00
        },
        {
          "3637": 3.00
        },
        {
          "74": 7.00
        },
        {
          "2113": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "2209": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "2834": 7.00
        },
        {
          "2223": 7.00
        },
        {
          "685": 7.00
        },
        {
          "3328": 7.00
        },
        {
          "3428": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 10.00
        },
        {
          "3496": 7.00
        },
        {
          "1476": 3.00
        },
        {
          "3314": 7.00
        },
        {
          "2813": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "3350": 7.00
        },
        {
          "3084": 3.00
        },
        {
          "306": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "3809": 7.00
        },
        {
          "2365": 3.00
        },
        {
          "3486": 3.00
        },
        {
          "3779": 3.00
        },
        {
          "85": 7.00
        },
        {
          "3360": 10.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3684": 7.00
        },
        {
          "58": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "468": 7.00
        },
        {
          "3299": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "3628": 2.00
        },
        {
          "2698": 2.00
        },
        {
          "530": 2.00
        },
        {
          "310": -1.00
        },
        {
          "930": 6.00
        },
        {
          "767": -1.00
        },
        {
          "3382": 6.00
        },
        {
          "380": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 6.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3481": 10.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "I blog at http://breadcrumbscollector.tech (english) and previously on enforcer.pl (polish).\r\nI had a couple of talks already, including EuroPython in 2015. https://ep2015.europython.eu/conference/talks/distributed-locks-with-python-and-redis\r\n\r\nI speak also on topics that are not strictly python-related, like maintaining software etc. \r\nA list of my talks can be found here: https://enforcer.pl/wystapienia/ unfortunately, only in polish.\r\n\r\nRegarding this particular talk, I've already given it twice and feedback was very positive.",
      "tag_categories": [
        "Programming",
        "Python",
        ">>> Suggested Track"
      ],
      "emails": "nnplaya@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/why-you-dont-need-design-patterns-in-python",
      "admin_type": "",
      "companies": "STX Next"
    },
    "977": {
      "abstract_short": "Asynchronous programming is becoming a hot topic in the Python community, especially with the rise of popularity of Python 3 and the new asyncio library in its standard library. However, it can still be a confusing and mysterious concept. In this talk, I will explain what async programming is, how it works and how it could benefit you.",
      "sub_title": "",
      "timerange": "2017-07-11 14:00:00, 2017-07-11 14:30:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 977,
      "speakers": "Jonas Obrist",
      "title": "Why you might want to go async",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Arengo",
      "tags": [
        "Python 3",
        "Web Track",
        "ASYNC / Concurreny"
      ],
      "abstract_long": [
        "Asynchronous programming is becoming a hot topic in the Python community, especially with the rise of popularity of Python 3 and the new asyncio library in its standard library. However, it can still be a confusing and mysterious concept. In this talk, I will explain what async programming is, how it works and how it could benefit you. My goal of this talk is that at the end of it, you have an idea about what we mean when we say asynchronous programming in Python and you know how and when to use it.\r\n\r\nIn the first part of the talk, I will dive into what asynchronous programming is and what it isn't. Explaining the difference between IO bound code and CPU bound code. \r\n\r\nThen I will explain how this actually works in Python, explaining the idea of an event loop, coroutines and cooperative multitasking. \r\n\r\nFinally, I will talk about why this may be beneficial, what kind of applications can really benefit from this and provide some examples from my experience."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "1878": 10.00
        },
        {
          "1973": 3.00
        },
        {
          "1481": 7.00
        },
        {
          "3310": 3.00
        },
        {
          "251": 10.00
        },
        {
          "2032": 10.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 3.00
        },
        {
          "3372": 7.00
        },
        {
          "3547": 7.00
        },
        {
          "3428": 7.00
        },
        {
          "245": 7.00
        },
        {
          "564": 3.00
        },
        {
          "2794": 3.00
        },
        {
          "1035": 7.00
        },
        {
          "3492": 3.00
        },
        {
          "2488": 7.00
        },
        {
          "3418": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "306": 3.00
        },
        {
          "3350": 3.00
        },
        {
          "3369": 7.00
        },
        {
          "3779": 3.00
        },
        {
          "2889": 3.00
        },
        {
          "3535": 7.00
        },
        {
          "650": 3.00
        },
        {
          "300": 10.00
        },
        {
          "3500": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "1877": 10.00
        },
        {
          "3299": 3.00
        },
        {
          "3628": 6.00
        },
        {
          "1041": -1.00
        },
        {
          "93": 2.00
        },
        {
          "3339": 2.00
        },
        {
          "2209": 2.00
        },
        {
          "3703": 2.00
        },
        {
          "380": 2.00
        },
        {
          "3376": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "171": 9.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": 2.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Python",
        ">>> Suggested Track",
        "Programming"
      ],
      "emails": "ojiidotch@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/why-you-might-want-to-go-async",
      "admin_type": "",
      "companies": "HDE"
    },
    "854": {
      "abstract_short": "In the wake of famous talk \u201cStop Writing Classes\u201d by Jack Diederich (https://www.youtube.com/watch?v=o9pEzgHorH0), I\u2019d like to present a pattern that can be used to design clean and pythonic interfaces for programmers based on replacing single-method classes with decorated functions.\r\n\r\nI\u2019ll show how this pattern can be employed to improve a programming interface which is used by an internal log processing framework at Yelp.",
      "sub_title": "",
      "timerange": "2017-07-11 10:30:00, 2017-07-11 11:15:00",
      "sub_community": "",
      "duration": 45,
      "twitters": "@porosVII",
      "id": 854,
      "speakers": "Antonio Verardi",
      "title": "Write more decorators (and fewer classes)",
      "have_tickets": [
        true
      ],
      "type": "Talk (45 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Software Design",
        "Use Case",
        "Developing with Python",
        "Best Practice"
      ],
      "abstract_long": [
        "In the wake of famous talk \u201cStop Writing Classes\u201d by Jack Diederich (https://www.youtube.com/watch?v=o9pEzgHorH0), I\u2019d like to present a pattern that can be used to design clean and pythonic interfaces for programmers based on replacing single-method classes with decorated functions.\r\n\r\nThis pattern is already used by some famous frameworks and libraries, like Pyramid (https://trypyramid.com/), but I believe it isn\u2019t that well-known to many (even experienced) Python developers and is not as widely used as it deserves.\r\n\r\nI\u2019ll show how this pattern can be employed to improve a programming interface which is used by an internal log processing framework at Yelp. This will demonstrate how a more functional approach, leveraging the power of Python decorators, can lead to simpler, more beautiful and easier to understand code.\r\n\r\nHowever, this talk doesn\u2019t suggest giving up classes altogether, but making use of them only when they are truly useful. In fact, the use-case I\u2019m going to analyze will combine classes, functions, and decorators to make the best out of these tools.\r\n\r\nGiven that the presentation is going to be very code-oriented, the talk is intended for an audience of developers who are already familiar with most Python constructs, including decorators, even though the concept will be briefly introduced at the beginning of the talk. But, if you are one of these people, I promise you that the code will speak for itself."
      ],
      "user_votes": [
        {
          "3364": 7.00
        },
        {
          "3256": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "1973": 10.00
        },
        {
          "3543": 7.00
        },
        {
          "468": 7.00
        },
        {
          "74": 7.00
        },
        {
          "1481": 7.00
        },
        {
          "251": 7.00
        },
        {
          "394": 3.00
        },
        {
          "3308": 7.00
        },
        {
          "3370": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3372": 7.00
        },
        {
          "3547": 10.00
        },
        {
          "3328": 10.00
        },
        {
          "3592": 10.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 10.00
        },
        {
          "2794": 3.00
        },
        {
          "3292": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "1476": 10.00
        },
        {
          "3605": 3.00
        },
        {
          "3573": 10.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 7.00
        },
        {
          "3554": 10.00
        },
        {
          "269": 10.00
        },
        {
          "2813": 10.00
        },
        {
          "300": 7.00
        },
        {
          "3350": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "589": 7.00
        },
        {
          "3492": 7.00
        },
        {
          "3398": 3.00
        },
        {
          "2365": 10.00
        },
        {
          "3779": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "3777": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "650": 10.00
        },
        {
          "58": 7.00
        },
        {
          "646": 10.00
        },
        {
          "1877": 10.00
        },
        {
          "3293": 10.00
        },
        {
          "3299": 10.00
        },
        {
          "3296": 10.00
        },
        {
          "3695": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "509": 3.00
        },
        {
          "1897": 2.00
        },
        {
          "3339": 2.00
        },
        {
          "310": 6.00
        },
        {
          "3407": 2.00
        },
        {
          "3084": -1.00
        },
        {
          "1956": 10.00
        },
        {
          "3818": 6.00
        },
        {
          "3703": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": 6.00
        },
        {
          "3418": 6.00
        },
        {
          "3743": 7.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": 2.00
        },
        {
          "242": 10.00
        },
        {
          "3384": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        ">>> Suggested Track",
        "Best Practice and Use Cases"
      ],
      "emails": "antonio.uccio.verardi@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/write-more-decorators-and-fewer-classes",
      "admin_type": "",
      "companies": "Yelp"
    },
    "996": {
      "abstract_short": "This talk is a tour through various tools and practices, which help to keep your package in a good state for your users and make it easier for other developers to contribute. ",
      "sub_title": "",
      "timerange": "2017-07-14 15:45:00, 2017-07-14 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@",
      "id": 996,
      "speakers": "Magdalena Rother",
      "title": "Writing Awesome PyPI packages in Python",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Virtual Env",
        "Best Practice",
        "Open-Source",
        "Packaging"
      ],
      "abstract_long": [
        "One of the strengths of the Python programming language is the huge base of Open Source libraries. The PyPI (Python Package Index) repository provides currently 105,917 packages, many of them developed actively by contributors. \r\n\r\nThis talk is a tour through various tools and practices, which help to keep your package in a good state for your users and make it easier for other developers to contribute. One can find these practices in projects of different size, such as Django (24,244  commits, 1,397 contributors) Pandas (15,005 commits, 754 contributors) and Faker (20 commits, 3 contributors).\r\n\r\nSome things to consider when creating your own package:\r\n\r\n - using a Makefile for automatic testing, coverage analysis and environment setup.\r\n - structuring your .gitignore file.\r\n - using pyenv and .python-version for Python version management.\r\n - using tox to ascertain that code is working in different environments.\r\n - squashing different configuration files to a single setup.cfg file.\r\n - using EditorConfig and .editorconfig to automatically set project coding standards in the editor.\r\n\r\n"
      ],
      "user_votes": [
        {
          "3637": 10.00
        },
        {
          "3543": 7.00
        },
        {
          "3310": 10.00
        },
        {
          "394": 3.00
        },
        {
          "3308": 10.00
        },
        {
          "2223": 7.00
        },
        {
          "1908": 7.00
        },
        {
          "3372": 10.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "3454": 7.00
        },
        {
          "2069": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "3418": 9.00
        },
        {
          "3573": 7.00
        },
        {
          "1966": 7.00
        },
        {
          "2813": 3.00
        },
        {
          "2479": 7.00
        },
        {
          "316": 10.00
        },
        {
          "3492": 7.00
        },
        {
          "306": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3402": 7.00
        },
        {
          "3597": 7.00
        },
        {
          "3398": 7.00
        },
        {
          "651": 7.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 10.00
        },
        {
          "58": 7.00
        },
        {
          "1877": 7.00
        },
        {
          "468": 6.00
        },
        {
          "3299": 3.00
        },
        {
          "2985": 3.00
        },
        {
          "2698": 6.00
        },
        {
          "2834": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 6.00
        },
        {
          "3345": 9.00
        },
        {
          "2237": 9.00
        },
        {
          "171": -1.00
        },
        {
          "2286": 2.00
        },
        {
          "3264": 2.00
        },
        {
          "3327": 2.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "This talk might fit well to 'Best Practices for Debugging, Testing and Maintenance' by Kristian Rother.\r\n\r\n",
      "tag_categories": [
        "Programming",
        "Best Practice and Use Cases",
        "Open Source",
        "Python"
      ],
      "emails": "rother.magdalena@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/writing-awesome-pypi-packages-in-python",
      "admin_type": "",
      "companies": "Moccu - Digitalagentur"
    },
    "986": {
      "abstract_short": "Writing code is hard. Writing beautiful code is even more so.\r\n\r\nHow to write code that is pleasant to read, easy to understand and joy to maintain?\r\n\r\nSimple things like using right variable names, avoiding to much nesting, using white space and comments etc. makes a lot difference to readability of the code. Even though these things look very simple, it is very hard to put them in practice.\r\n\r\nIn this talk, I\u2019ll try summarise the age old wisdom of writing beautiful code using python examples.",
      "sub_title": "",
      "timerange": "2017-07-11 15:45:00, 2017-07-11 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@anandology",
      "id": 986,
      "speakers": "Anand Chitipothu",
      "title": "Writing Beautiful Code",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PyCharm Room",
      "tags": [
        "Developing with Python",
        "Python general",
        "Best Practice",
        "Clean Code"
      ],
      "abstract_long": [
        "Writing code is hard. Writing beautiful code is even more so.\r\n\r\nHow to write code that is pleasant to read, easy to understand and joy to maintain?\r\n\r\nSimple things like using right variable names, avoiding to much nesting, using white space and comments etc. makes a lot difference to readability of the code. Even though these things look very simple, even experienced programmers find it hard to put them in practice.\r\n\r\nIn this talk, I\u2019ll try summarise the age old wisdom of writing beautiful code and explain those ideas using practical examples written in Python."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "2356": 3.00
        },
        {
          "2032": 7.00
        },
        {
          "74": 3.00
        },
        {
          "3543": 10.00
        },
        {
          "251": 10.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 7.00
        },
        {
          "3031": 10.00
        },
        {
          "685": 3.00
        },
        {
          "3701": 3.00
        },
        {
          "3592": 7.00
        },
        {
          "245": 3.00
        },
        {
          "564": 3.00
        },
        {
          "2227": 7.00
        },
        {
          "434": 3.00
        },
        {
          "2493": 7.00
        },
        {
          "3409": 7.00
        },
        {
          "306": 7.00
        },
        {
          "2259": 3.00
        },
        {
          "3369": 3.00
        },
        {
          "1132": 7.00
        },
        {
          "1035": 7.00
        },
        {
          "3801": 7.00
        },
        {
          "663": 7.00
        },
        {
          "3779": 7.00
        },
        {
          "3486": 7.00
        },
        {
          "3469": 3.00
        },
        {
          "3777": 3.00
        },
        {
          "2889": 7.00
        },
        {
          "300": 10.00
        },
        {
          "3500": 3.00
        },
        {
          "3318": 7.00
        },
        {
          "3394": 3.00
        },
        {
          "3695": 3.00
        },
        {
          "3299": 3.00
        },
        {
          "2127": 7.00
        },
        {
          "2985": 7.00
        },
        {
          "3506": 6.00
        },
        {
          "3628": -1.00
        },
        {
          "3339": 6.00
        },
        {
          "3314": 2.00
        },
        {
          "3603": 6.00
        },
        {
          "1956": 2.00
        },
        {
          "2209": 2.00
        },
        {
          "3703": 2.00
        },
        {
          "3376": 7.00
        },
        {
          "1878": 10.00
        },
        {
          "3538": 2.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 9.00
        },
        {
          "171": 6.00
        },
        {
          "3418": 2.00
        },
        {
          "3743": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        },
        {
          "3826": 6.00
        },
        {
          "3770": 2.00
        },
        {
          "468": -1.00
        }
      ],
      "abstract_extra": "I've presented this talk at [PyCon Pune - 2016][1], India. \r\n\r\nAnd here is the video recording of that session.\r\nhttps://www.youtube.com/watch?v=0PkRhfRkj1s\r\n\r\nI'm planning to revise and improve it if it get selected for europython.\r\n\r\nI've been a seasoned speaker at Python events in India. Here are some of my talks/tutorials.\r\n\r\n* Generators Inside Out - talk at PyCon India 2016 - [slides][2]\r\n* Decorators Demystified - tutorial at Pycon India 2014 - [notebook][3]\r\n* Solving Puzzles with Python - tutorial at PyCon India 2012 - [slides][4]\r\n* Functional Programming with Python - tutorial at PyCon India 2011 - [slides][5]\r\n* pyjs: Compiling Python to Javascript - talk at PyCon India 2011 - [slides][6]\r\n\r\n[1]: https://pune.pycon.org/\r\n[2]: https://speakerdeck.com/anandology/generators-inside-out\r\n[3]: http://anandology.com/nb/2014/decorators-demystified/\r\n[4]: http://anandology.com/presentations/solving-puzzles-with-python/#slide1\r\n[5]: https://in.pycon.org/2011/static/files/talks/4/slides.html#slide1\r\n[6]: https://in.pycon.org/2011/static/files/talks/1/pyjs-slides.html#slide1\r\n\r\nI regularly conduct advanced programming courses via Pipal Academy. More information about it available at https://pipal.in/\r\n\r\n",
      "tag_categories": [
        ">>> Suggested Track",
        "Python",
        "Best Practice and Use Cases",
        "Educational"
      ],
      "emails": "anandology@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/writing-beautiful-code",
      "admin_type": "",
      "companies": "rorodata"
    },
    "1047": {
      "abstract_short": "An introduction to Genetic Algorithms, and how they can be used to \"evolve\" code which meets the stated requirements rather than having a person write it.",
      "sub_title": "",
      "timerange": "2017-07-12 12:10:00, 2017-07-12 12:40:00",
      "sub_community": "pydata",
      "duration": 30,
      "twitters": "@",
      "id": 1047,
      "speakers": "Emma Gordon",
      "title": "Writing code? Pfft... Evolve it instead!",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Machine-Learning"
      ],
      "abstract_long": [
        "We're heading into a future of delivery drones, driverless cars and 3D-printed \"hoverboards\" ...\r\n\r\nWith machines now able to perform many tasks better than humans, some people are going to be out of a job.\r\n\r\nBut not software developers, right?! Could a computer generate the code you currently write for a living?\r\n\r\nIn this talk, we'll take a look at one of the many biologically inspired approaches to AI - Genetic Algorithms, and how they can be used to generate code given a description of the function that that code should perform.\r\n\r\nSpoiler - you're probably not out of a job, yet..."
      ],
      "user_votes": [
        {
          "3543": 7.00
        },
        {
          "394": 3.00
        },
        {
          "135": 3.00
        },
        {
          "2834": 7.00
        },
        {
          "2223": 3.00
        },
        {
          "3031": 7.00
        },
        {
          "3372": 3.00
        },
        {
          "685": 3.00
        },
        {
          "3547": 7.00
        },
        {
          "564": 3.00
        },
        {
          "3496": 3.00
        },
        {
          "1476": 7.00
        },
        {
          "3392": 3.00
        },
        {
          "1966": 7.00
        },
        {
          "1884": 10.00
        },
        {
          "3409": 7.00
        },
        {
          "2479": 3.00
        },
        {
          "316": 10.00
        },
        {
          "3507": 7.00
        },
        {
          "1132": 7.00
        },
        {
          "3486": 3.00
        },
        {
          "1035": 3.00
        },
        {
          "3360": 7.00
        },
        {
          "3799": 3.00
        },
        {
          "300": 7.00
        },
        {
          "2493": 7.00
        },
        {
          "93": 7.00
        },
        {
          "468": 7.00
        },
        {
          "3299": 3.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 10.00
        },
        {
          "562": -1.00
        },
        {
          "2237": 6.00
        },
        {
          "171": -1.00
        },
        {
          "3264": 6.00
        },
        {
          "3327": -1.00
        },
        {
          "3477": 3.00
        },
        {
          "3629": 7.00
        },
        {
          "3384": 7.00
        },
        {
          "3368": 3.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Data Science"
      ],
      "emails": "emma.gordon@cantab.net",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/writing-code-pfft-evolve-it-instead",
      "admin_type": "",
      "companies": "Cambridge Medical Robotics"
    },
    "809": {
      "abstract_short": "There are as many different ways to package an application as there are programming or scripting languages. No one tool or library is in itself better than another; however when security comes into the picture, there is definitely a pattern between ease of installation and how secure the delivered application is. As more work is put into packaging the application, more measures can be taken in order to ensure its integrity and prevent security issues.",
      "sub_title": "Different ways to deliver an application, different levels of security",
      "timerange": "2017-07-14 15:45:00, 2017-07-14 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@godlike64",
      "id": 809,
      "speakers": "Juan Manuel Santos",
      "title": "You need more security in your application packaging",
      "have_tickets": [
        true
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "Anfiteatro 2",
      "tags": [
        "Security",
        "Developing with Python",
        "Packaging"
      ],
      "abstract_long": [
        "There are as many different ways to package an application as there are programming or scripting languages. No one tool or library is in itself better than another; however when security comes into the picture, there is definitely a pattern between ease of installation and how secure the delivered application is. As more work is put into packaging the application, more measures can be taken in order to ensure its integrity and prevent security issues.\r\n\r\nThis talk will cover:\r\n- The roles involved in the lifecycle of an application, from the start of the development process until it reaches the end user and it is actually used.\r\n- The inherent problems in this subject, regarding installation and security, as well as how they are related.\r\n- The different ways of packaging an application in order to deliver it to an end user, focused on a Python perspective.\r\n\r\nAfter the talk, attendees will have a better grasp on which is the best way for them to package and deliver their application according to their environment and target audience. They will also learn about the upgrade path to switch from one delivery method to another, should they need or want to.\r\n\r\nFor this talk, it is desired that attendees have some general systems knowledge. Even though the talk will be focused on Python applications, some knowledge of information security is desired."
      ],
      "user_votes": [
        {
          "1897": 3.00
        },
        {
          "1973": 3.00
        },
        {
          "74": 3.00
        },
        {
          "3543": 7.00
        },
        {
          "251": 3.00
        },
        {
          "394": 3.00
        },
        {
          "2223": 3.00
        },
        {
          "3370": 3.00
        },
        {
          "3637": 3.00
        },
        {
          "3592": 3.00
        },
        {
          "2227": 7.00
        },
        {
          "1476": 7.00
        },
        {
          "2488": 3.00
        },
        {
          "782": 7.00
        },
        {
          "1884": 10.00
        },
        {
          "3554": 7.00
        },
        {
          "2813": 10.00
        },
        {
          "316": 10.00
        },
        {
          "2585": 3.00
        },
        {
          "300": 3.00
        },
        {
          "71": 10.00
        },
        {
          "3084": 3.00
        },
        {
          "1956": 10.00
        },
        {
          "3398": 7.00
        },
        {
          "651": 10.00
        },
        {
          "2889": 10.00
        },
        {
          "2493": 7.00
        },
        {
          "93": 3.00
        },
        {
          "2985": 7.00
        },
        {
          "3603": 2.00
        },
        {
          "3407": 6.00
        },
        {
          "380": 2.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "3418": 9.00
        },
        {
          "3777": 2.00
        },
        {
          "3264": 9.00
        },
        {
          "3327": -1.00
        },
        {
          "3770": 6.00
        },
        {
          "468": 2.00
        },
        {
          "3368": 7.00
        }
      ],
      "abstract_extra": "I gave a talk in EuroPython 2015 (https://archive.org/details/EuroPython_2015_SwVBt1n4) and last minute in EuroPython 2016 (https://archive.org/details/EuroPython_2016_cFaTU15Z) . I'm a regular speaker at my company. Not strictly related, but I'm also one of the organizers of nerdear.la, a geek conference/co-working event in Argentina (https://nerdear.la). My Github is https://github.com/godlike64.\r\n",
      "tag_categories": [
        "Security",
        ">>> Suggested Track",
        "Python"
      ],
      "emails": "godlike64@gmail.com",
      "language": "English",
      "level": "Intermediate",
      "url": "https://ep2017.europython.eu//conference/talks/you-need-more-security-in-your-application-packaging",
      "admin_type": "",
      "companies": "Red Hat"
    },
    "1114": {
      "abstract_short": "Local python developers in Zimbabwe have decided to empower women to program in python.To do that they launched Zimbopy which is on the ground initiative by local python programmers to empower women in programming to cover up for the gender gap.Zimbopy works in community centres,Universities and high schools.It provides tools and resources to facilitate the learning of python programming language.Zimbopy also connects women to experienced python developers through mentorship program.",
      "sub_title": "",
      "timerange": "2017-07-11 15:45:00, 2017-07-11 16:15:00",
      "sub_community": "",
      "duration": 30,
      "twitters": "@RMaravanyika",
      "id": 1114,
      "speakers": "Ronald Maravanyika",
      "title": "Zimbopy",
      "have_tickets": [
        false
      ],
      "type": "Talk (30 mins)",
      "status": "accepted",
      "track_title": "PythonAnywhere Room",
      "tags": [
        "Education",
        "Python general",
        "Django",
        "Raspberry PI",
        "Community"
      ],
      "abstract_long": [
        "Zimbopy is a initiative started by local python developers in Zimbabwe to empower women to get involved in python programming by giving them the tools and resource to achieve this.Zimbopy mainly works in under privilege demography which include community centres. Zimbopy works with local Universities,Community centres , high schools and tech hubs.\r\n\r\nIn community centres it works as an after school program where girls come to learn python programming after their normal school sessions.The go through the python sythanx basics and then move on to learn the practical aspects of python like web development, mobile development and robotics.The will then work on a capstone project in the field of their choice.\r\n\r\nZimbopy facilitates the forming of python programming clubs in High schools and University and provides the learning material of python programming skills as an additional program for the Universities, it introduced Mentorship program, where it gathers experienced developers from around the world to mentor the women on the software development skills.The Zimbopy team choose a project that improves the communities and around the country.In April 2017 it worked on an eCommerce platform that connects vendors to farmers,in the process cleaning the streets of Harare, which has turned into a hive of buying and selling.Zimbopy also works with the local pycon organising team to encourage python developer to come to Zimbabwe and share their own experiences."
      ],
      "user_votes": [
        {
          "2223": 3.00
        },
        {
          "2479": 3.00
        },
        {
          "300": 7.00
        },
        {
          "85": -1.00
        },
        {
          "380": 6.00
        },
        {
          "3703": -1.00
        },
        {
          "1878": 7.00
        },
        {
          "562": 2.00
        },
        {
          "468": -1.00
        },
        {
          "171": -1.00
        },
        {
          "3264": -1.00
        },
        {
          "3327": -1.00
        }
      ],
      "abstract_extra": "",
      "tag_categories": [
        "Educational",
        "Python",
        "Application Frameworks",
        "Hardware",
        "Community"
      ],
      "emails": "rmaravanyika@gmail.com",
      "language": "English",
      "level": "Beginner",
      "url": "https://ep2017.europython.eu//conference/talks/zimbopy",
      "admin_type": "",
      "companies": "ZimboPy"
    }
  }
}
